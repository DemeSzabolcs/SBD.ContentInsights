{"version":3,"file":"content-insights-CSTcqhwt.js","sources":["../../client/node_modules/@lit/reactive-element/css-tag.js","../../client/node_modules/@lit/reactive-element/reactive-element.js","../../client/node_modules/lit-html/lit-html.js","../../client/node_modules/lit-element/lit-element.js","../../client/node_modules/@lit/reactive-element/decorators/custom-element.js","../../client/node_modules/@lit/reactive-element/decorators/property.js","../../client/node_modules/@kurkle/color/dist/color.esm.js","../../client/node_modules/chart.js/dist/chunks/helpers.dataset.js","../../client/node_modules/chart.js/dist/chart.js","../../client/src/section/content-insights.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,e=t.ShadowRoot&&(void 0===t.ShadyCSS||t.ShadyCSS.nativeShadow)&&\"adoptedStyleSheets\"in Document.prototype&&\"replace\"in CSSStyleSheet.prototype,s=Symbol(),o=new WeakMap;class n{constructor(t,e,o){if(this._$cssResult$=!0,o!==s)throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const s=this.t;if(e&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=o.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e&&o.set(s,t))}return t}toString(){return this.cssText}}const r=t=>new n(\"string\"==typeof t?t:t+\"\",void 0,s),i=(t,...e)=>{const o=1===t.length?t[0]:e.reduce(((e,s,o)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if(\"number\"==typeof t)return t;throw Error(\"Value passed to 'css' function must be a 'css' function result: \"+t+\". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\")})(s)+t[o+1]),t[0]);return new n(o,t,s)},S=(s,o)=>{if(e)s.adoptedStyleSheets=o.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet));else for(const e of o){const o=document.createElement(\"style\"),n=t.litNonce;void 0!==n&&o.setAttribute(\"nonce\",n),o.textContent=e.cssText,s.appendChild(o)}},c=e?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e=\"\";for(const s of t.cssRules)e+=s.cssText;return r(e)})(t):t;export{n as CSSResult,S as adoptStyles,i as css,c as getCompatibleStyle,e as supportsAdoptingStyleSheets,r as unsafeCSS};\n//# sourceMappingURL=css-tag.js.map\n","import{getCompatibleStyle as t,adoptStyles as s}from\"./css-tag.js\";export{CSSResult,css,supportsAdoptingStyleSheets,unsafeCSS}from\"./css-tag.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{is:i,defineProperty:e,getOwnPropertyDescriptor:h,getOwnPropertyNames:r,getOwnPropertySymbols:o,getPrototypeOf:n}=Object,a=globalThis,c=a.trustedTypes,l=c?c.emptyScript:\"\",p=a.reactiveElementPolyfillSupport,d=(t,s)=>t,u={toAttribute(t,s){switch(s){case Boolean:t=t?l:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,s){let i=t;switch(s){case Boolean:i=null!==t;break;case Number:i=null===t?null:Number(t);break;case Object:case Array:try{i=JSON.parse(t)}catch(t){i=null}}return i}},f=(t,s)=>!i(t,s),b={attribute:!0,type:String,converter:u,reflect:!1,useDefault:!1,hasChanged:f};Symbol.metadata??=Symbol(\"metadata\"),a.litPropertyMetadata??=new WeakMap;class y extends HTMLElement{static addInitializer(t){this._$Ei(),(this.l??=[]).push(t)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(t,s=b){if(s.state&&(s.attribute=!1),this._$Ei(),this.prototype.hasOwnProperty(t)&&((s=Object.create(s)).wrapped=!0),this.elementProperties.set(t,s),!s.noAccessor){const i=Symbol(),h=this.getPropertyDescriptor(t,i,s);void 0!==h&&e(this.prototype,t,h)}}static getPropertyDescriptor(t,s,i){const{get:e,set:r}=h(this.prototype,t)??{get(){return this[s]},set(t){this[s]=t}};return{get:e,set(s){const h=e?.call(this);r?.call(this,s),this.requestUpdate(t,h,i)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)??b}static _$Ei(){if(this.hasOwnProperty(d(\"elementProperties\")))return;const t=n(this);t.finalize(),void 0!==t.l&&(this.l=[...t.l]),this.elementProperties=new Map(t.elementProperties)}static finalize(){if(this.hasOwnProperty(d(\"finalized\")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(d(\"properties\"))){const t=this.properties,s=[...r(t),...o(t)];for(const i of s)this.createProperty(i,t[i])}const t=this[Symbol.metadata];if(null!==t){const s=litPropertyMetadata.get(t);if(void 0!==s)for(const[t,i]of s)this.elementProperties.set(t,i)}this._$Eh=new Map;for(const[t,s]of this.elementProperties){const i=this._$Eu(t,s);void 0!==i&&this._$Eh.set(i,t)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(s){const i=[];if(Array.isArray(s)){const e=new Set(s.flat(1/0).reverse());for(const s of e)i.unshift(t(s))}else void 0!==s&&i.push(t(s));return i}static _$Eu(t,s){const i=s.attribute;return!1===i?void 0:\"string\"==typeof i?i:\"string\"==typeof t?t.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){this._$ES=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$E_(),this.requestUpdate(),this.constructor.l?.forEach((t=>t(this)))}addController(t){(this._$EO??=new Set).add(t),void 0!==this.renderRoot&&this.isConnected&&t.hostConnected?.()}removeController(t){this._$EO?.delete(t)}_$E_(){const t=new Map,s=this.constructor.elementProperties;for(const i of s.keys())this.hasOwnProperty(i)&&(t.set(i,this[i]),delete this[i]);t.size>0&&(this._$Ep=t)}createRenderRoot(){const t=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return s(t,this.constructor.elementStyles),t}connectedCallback(){this.renderRoot??=this.createRenderRoot(),this.enableUpdating(!0),this._$EO?.forEach((t=>t.hostConnected?.()))}enableUpdating(t){}disconnectedCallback(){this._$EO?.forEach((t=>t.hostDisconnected?.()))}attributeChangedCallback(t,s,i){this._$AK(t,i)}_$ET(t,s){const i=this.constructor.elementProperties.get(t),e=this.constructor._$Eu(t,i);if(void 0!==e&&!0===i.reflect){const h=(void 0!==i.converter?.toAttribute?i.converter:u).toAttribute(s,i.type);this._$Em=t,null==h?this.removeAttribute(e):this.setAttribute(e,h),this._$Em=null}}_$AK(t,s){const i=this.constructor,e=i._$Eh.get(t);if(void 0!==e&&this._$Em!==e){const t=i.getPropertyOptions(e),h=\"function\"==typeof t.converter?{fromAttribute:t.converter}:void 0!==t.converter?.fromAttribute?t.converter:u;this._$Em=e;const r=h.fromAttribute(s,t.type);this[e]=r??this._$Ej?.get(e)??r,this._$Em=null}}requestUpdate(t,s,i){if(void 0!==t){const e=this.constructor,h=this[t];if(i??=e.getPropertyOptions(t),!((i.hasChanged??f)(h,s)||i.useDefault&&i.reflect&&h===this._$Ej?.get(t)&&!this.hasAttribute(e._$Eu(t,i))))return;this.C(t,s,i)}!1===this.isUpdatePending&&(this._$ES=this._$EP())}C(t,s,{useDefault:i,reflect:e,wrapped:h},r){i&&!(this._$Ej??=new Map).has(t)&&(this._$Ej.set(t,r??s??this[t]),!0!==h||void 0!==r)||(this._$AL.has(t)||(this.hasUpdated||i||(s=void 0),this._$AL.set(t,s)),!0===e&&this._$Em!==t&&(this._$Eq??=new Set).add(t))}async _$EP(){this.isUpdatePending=!0;try{await this._$ES}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??=this.createRenderRoot(),this._$Ep){for(const[t,s]of this._$Ep)this[t]=s;this._$Ep=void 0}const t=this.constructor.elementProperties;if(t.size>0)for(const[s,i]of t){const{wrapped:t}=i,e=this[s];!0!==t||this._$AL.has(s)||void 0===e||this.C(s,void 0,i,e)}}let t=!1;const s=this._$AL;try{t=this.shouldUpdate(s),t?(this.willUpdate(s),this._$EO?.forEach((t=>t.hostUpdate?.())),this.update(s)):this._$EM()}catch(s){throw t=!1,this._$EM(),s}t&&this._$AE(s)}willUpdate(t){}_$AE(t){this._$EO?.forEach((t=>t.hostUpdated?.())),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$EM(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$ES}shouldUpdate(t){return!0}update(t){this._$Eq&&=this._$Eq.forEach((t=>this._$ET(t,this[t]))),this._$EM()}updated(t){}firstUpdated(t){}}y.elementStyles=[],y.shadowRootOptions={mode:\"open\"},y[d(\"elementProperties\")]=new Map,y[d(\"finalized\")]=new Map,p?.({ReactiveElement:y}),(a.reactiveElementVersions??=[]).push(\"2.1.1\");export{y as ReactiveElement,s as adoptStyles,u as defaultConverter,t as getCompatibleStyle,f as notEqual};\n//# sourceMappingURL=reactive-element.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,i=t.trustedTypes,s=i?i.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,e=\"$lit$\",h=`lit$${Math.random().toFixed(9).slice(2)}$`,o=\"?\"+h,n=`<${o}>`,r=document,l=()=>r.createComment(\"\"),c=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,a=Array.isArray,u=t=>a(t)||\"function\"==typeof t?.[Symbol.iterator],d=\"[ \\t\\n\\f\\r]\",f=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,v=/-->/g,_=/>/g,m=RegExp(`>|${d}(?:([^\\\\s\"'>=/]+)(${d}*=${d}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`,\"g\"),p=/'/g,g=/\"/g,$=/^(?:script|style|textarea|title)$/i,y=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),x=y(1),b=y(2),w=y(3),T=Symbol.for(\"lit-noChange\"),E=Symbol.for(\"lit-nothing\"),A=new WeakMap,C=r.createTreeWalker(r,129);function P(t,i){if(!a(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return void 0!==s?s.createHTML(i):i}const V=(t,i)=>{const s=t.length-1,o=[];let r,l=2===i?\"<svg>\":3===i?\"<math>\":\"\",c=f;for(let i=0;i<s;i++){const s=t[i];let a,u,d=-1,y=0;for(;y<s.length&&(c.lastIndex=y,u=c.exec(s),null!==u);)y=c.lastIndex,c===f?\"!--\"===u[1]?c=v:void 0!==u[1]?c=_:void 0!==u[2]?($.test(u[2])&&(r=RegExp(\"</\"+u[2],\"g\")),c=m):void 0!==u[3]&&(c=m):c===m?\">\"===u[0]?(c=r??f,d=-1):void 0===u[1]?d=-2:(d=c.lastIndex-u[2].length,a=u[1],c=void 0===u[3]?m:'\"'===u[3]?g:p):c===g||c===p?c=m:c===v||c===_?c=f:(c=m,r=void 0);const x=c===m&&t[i+1].startsWith(\"/>\")?\" \":\"\";l+=c===f?s+n:d>=0?(o.push(a),s.slice(0,d)+e+s.slice(d)+h+x):s+h+(-2===d?i:x)}return[P(t,l+(t[s]||\"<?>\")+(2===i?\"</svg>\":3===i?\"</math>\":\"\")),o]};class N{constructor({strings:t,_$litType$:s},n){let r;this.parts=[];let c=0,a=0;const u=t.length-1,d=this.parts,[f,v]=V(t,s);if(this.el=N.createElement(f,n),C.currentNode=this.el.content,2===s||3===s){const t=this.el.content.firstChild;t.replaceWith(...t.childNodes)}for(;null!==(r=C.nextNode())&&d.length<u;){if(1===r.nodeType){if(r.hasAttributes())for(const t of r.getAttributeNames())if(t.endsWith(e)){const i=v[a++],s=r.getAttribute(t).split(h),e=/([.?@])?(.*)/.exec(i);d.push({type:1,index:c,name:e[2],strings:s,ctor:\".\"===e[1]?H:\"?\"===e[1]?I:\"@\"===e[1]?L:k}),r.removeAttribute(t)}else t.startsWith(h)&&(d.push({type:6,index:c}),r.removeAttribute(t));if($.test(r.tagName)){const t=r.textContent.split(h),s=t.length-1;if(s>0){r.textContent=i?i.emptyScript:\"\";for(let i=0;i<s;i++)r.append(t[i],l()),C.nextNode(),d.push({type:2,index:++c});r.append(t[s],l())}}}else if(8===r.nodeType)if(r.data===o)d.push({type:2,index:c});else{let t=-1;for(;-1!==(t=r.data.indexOf(h,t+1));)d.push({type:7,index:c}),t+=h.length-1}c++}}static createElement(t,i){const s=r.createElement(\"template\");return s.innerHTML=t,s}}function S(t,i,s=t,e){if(i===T)return i;let h=void 0!==e?s._$Co?.[e]:s._$Cl;const o=c(i)?void 0:i._$litDirective$;return h?.constructor!==o&&(h?._$AO?.(!1),void 0===o?h=void 0:(h=new o(t),h._$AT(t,s,e)),void 0!==e?(s._$Co??=[])[e]=h:s._$Cl=h),void 0!==h&&(i=S(t,h._$AS(t,i.values),h,e)),i}class M{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){const{el:{content:i},parts:s}=this._$AD,e=(t?.creationScope??r).importNode(i,!0);C.currentNode=e;let h=C.nextNode(),o=0,n=0,l=s[0];for(;void 0!==l;){if(o===l.index){let i;2===l.type?i=new R(h,h.nextSibling,this,t):1===l.type?i=new l.ctor(h,l.name,l.strings,this,t):6===l.type&&(i=new z(h,this,t)),this._$AV.push(i),l=s[++n]}o!==l?.index&&(h=C.nextNode(),o++)}return C.currentNode=r,e}p(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class R{get _$AU(){return this._$AM?._$AU??this._$Cv}constructor(t,i,s,e){this.type=2,this._$AH=E,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cv=e?.isConnected??!0}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===t?.nodeType&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=S(this,t,i),c(t)?t===E||null==t||\"\"===t?(this._$AH!==E&&this._$AR(),this._$AH=E):t!==this._$AH&&t!==T&&this._(t):void 0!==t._$litType$?this.$(t):void 0!==t.nodeType?this.T(t):u(t)?this.k(t):this._(t)}O(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}T(t){this._$AH!==t&&(this._$AR(),this._$AH=this.O(t))}_(t){this._$AH!==E&&c(this._$AH)?this._$AA.nextSibling.data=t:this.T(r.createTextNode(t)),this._$AH=t}$(t){const{values:i,_$litType$:s}=t,e=\"number\"==typeof s?this._$AC(t):(void 0===s.el&&(s.el=N.createElement(P(s.h,s.h[0]),this.options)),s);if(this._$AH?._$AD===e)this._$AH.p(i);else{const t=new M(e,this),s=t.u(this.options);t.p(i),this.T(s),this._$AH=t}}_$AC(t){let i=A.get(t.strings);return void 0===i&&A.set(t.strings,i=new N(t)),i}k(t){a(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const h of t)e===i.length?i.push(s=new R(this.O(l()),this.O(l()),this,this.options)):s=i[e],s._$AI(h),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){for(this._$AP?.(!1,!0,i);t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){void 0===this._$AM&&(this._$Cv=t,this._$AP?.(t))}}class k{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(t,i,s,e,h){this.type=1,this._$AH=E,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=h,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=E}_$AI(t,i=this,s,e){const h=this.strings;let o=!1;if(void 0===h)t=S(this,t,i,0),o=!c(t)||t!==this._$AH&&t!==T,o&&(this._$AH=t);else{const e=t;let n,r;for(t=h[0],n=0;n<h.length-1;n++)r=S(this,e[s+n],i,n),r===T&&(r=this._$AH[n]),o||=!c(r)||r!==this._$AH[n],r===E?t=E:t!==E&&(t+=(r??\"\")+h[n+1]),this._$AH[n]=r}o&&!e&&this.j(t)}j(t){t===E?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,t??\"\")}}class H extends k{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===E?void 0:t}}class I extends k{constructor(){super(...arguments),this.type=4}j(t){this.element.toggleAttribute(this.name,!!t&&t!==E)}}class L extends k{constructor(t,i,s,e,h){super(t,i,s,e,h),this.type=5}_$AI(t,i=this){if((t=S(this,t,i,0)??E)===T)return;const s=this._$AH,e=t===E&&s!==E||t.capture!==s.capture||t.once!==s.once||t.passive!==s.passive,h=t!==E&&(s===E||e);e&&this.element.removeEventListener(this.name,this,s),h&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){\"function\"==typeof this._$AH?this._$AH.call(this.options?.host??this.element,t):this._$AH.handleEvent(t)}}class z{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){S(this,t)}}const Z={M:e,P:h,A:o,C:1,L:V,R:M,D:u,V:S,I:R,H:k,N:I,U:L,B:H,F:z},j=t.litHtmlPolyfillSupport;j?.(N,R),(t.litHtmlVersions??=[]).push(\"3.3.1\");const B=(t,i,s)=>{const e=s?.renderBefore??i;let h=e._$litPart$;if(void 0===h){const t=s?.renderBefore??null;e._$litPart$=h=new R(i.insertBefore(l(),t),t,void 0,s??{})}return h._$AI(t),h};export{Z as _$LH,x as html,w as mathml,T as noChange,E as nothing,B as render,b as svg};\n//# sourceMappingURL=lit-html.js.map\n","import{ReactiveElement as t}from\"@lit/reactive-element\";export*from\"@lit/reactive-element\";import{render as e,noChange as r}from\"lit-html\";export*from\"lit-html\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const s=globalThis;class i extends t{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0}createRenderRoot(){const t=super.createRenderRoot();return this.renderOptions.renderBefore??=t.firstChild,t}update(t){const r=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(t),this._$Do=e(r,this.renderRoot,this.renderOptions)}connectedCallback(){super.connectedCallback(),this._$Do?.setConnected(!0)}disconnectedCallback(){super.disconnectedCallback(),this._$Do?.setConnected(!1)}render(){return r}}i._$litElement$=!0,i[\"finalized\"]=!0,s.litElementHydrateSupport?.({LitElement:i});const o=s.litElementPolyfillSupport;o?.({LitElement:i});const n={_$AK:(t,e,r)=>{t._$AK(e,r)},_$AL:t=>t._$AL};(s.litElementVersions??=[]).push(\"4.2.1\");export{i as LitElement,n as _$LE};\n//# sourceMappingURL=lit-element.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=t=>(e,o)=>{void 0!==o?o.addInitializer((()=>{customElements.define(t,e)})):customElements.define(t,e)};export{t as customElement};\n//# sourceMappingURL=custom-element.js.map\n","import{defaultConverter as t,notEqual as e}from\"../reactive-element.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const o={attribute:!0,type:String,converter:t,reflect:!1,hasChanged:e},r=(t=o,e,r)=>{const{kind:n,metadata:i}=r;let s=globalThis.litPropertyMetadata.get(i);if(void 0===s&&globalThis.litPropertyMetadata.set(i,s=new Map),\"setter\"===n&&((t=Object.create(t)).wrapped=!0),s.set(r.name,t),\"accessor\"===n){const{name:o}=r;return{set(r){const n=e.get.call(this);e.set.call(this,r),this.requestUpdate(o,n,t)},init(e){return void 0!==e&&this.C(o,void 0,t,e),e}}}if(\"setter\"===n){const{name:o}=r;return function(r){const n=this[o];e.call(this,r),this.requestUpdate(o,n,t)}}throw Error(\"Unsupported decorator location: \"+n)};function n(t){return(e,o)=>\"object\"==typeof o?r(t,e,o):((t,e,o)=>{const r=e.hasOwnProperty(o);return e.constructor.createProperty(o,t),r?Object.getOwnPropertyDescriptor(e,o):void 0})(t,e,o)}export{n as property,r as standardProperty};\n//# sourceMappingURL=property.js.map\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _normalizeAngle as al, _readValueToProps as am, _updateBezierControlPoints as an, _computeSegments as ao, _boundSegments as ap, _steppedInterpolation as aq, _bezierInterpolation as ar, _pointInLine as as, _steppedLineTo as at, _bezierCurveTo as au, drawPoint as av, addRoundedRectPath as aw, toTRBL as ax, toTRBLCorners as ay, _boundSegment as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _normalizeAngle, am as _readValueToProps, an as _updateBezierControlPoints, ao as _computeSegments, ap as _boundSegments, aq as _steppedInterpolation, ar as _bezierInterpolation, as as _pointInLine, at as _steppedLineTo, au as _bezierCurveTo, av as drawPoint, aw as addRoundedRectPath, ax as toTRBL, ay as toTRBLCorners, az as _boundSegment, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getAxisCount() {\n        return this._getAxis().length;\n    }\n    getFirstScaleIdForIndexAxis() {\n        const scales = this.chart.scales;\n        const indexScaleId = this.chart.options.indexAxis;\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\n    }\n    _getAxis() {\n        const axis = {};\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n        for (const dataset of this.chart.data.datasets){\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\n        }\n        return Object.keys(axis);\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        const axisCount = this._getAxisCount();\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.5.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipSelf(ctx, element, endAngle) {\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n    if (innerRadius > 0) {\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n    } else {\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n        if (borderJoinStyle === 'round') {\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n        } else if (borderJoinStyle === 'bevel') {\n            const r = 2 * clipWidth * clipWidth;\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\n            ctx.lineTo(endX, endY);\n            ctx.lineTo(startX, startY);\n        }\n    }\n    ctx.closePath();\n    ctx.moveTo(0, 0);\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.clip('evenodd');\n}\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n        clipSelf(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true,\n        selfJoin: false\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    let fillColor = below;\n    if (below !== above) {\n        if (property === 'x') {\n            clipVertical(ctx, target, area.top);\n            fill(ctx, {\n                line,\n                target,\n                color: above,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipVertical(ctx, target, area.bottom);\n        } else if (property === 'y') {\n            clipHorizontal(ctx, target, area.left);\n            fill(ctx, {\n                line,\n                target,\n                color: below,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipHorizontal(ctx, target, area.right);\n            fillColor = above;\n        }\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: fillColor,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction clipHorizontal(ctx, target, clipX) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(clipX, firstPoint.y);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(clipX, lastPoint.y);\n        }\n    }\n    ctx.lineTo(clipX, target.first().y);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { css, html } from 'lit'\r\nimport { customElement, property } from 'lit/decorators.js'\r\nimport { Chart, registerables } from 'chart.js'\r\nimport { umbHttpClient } from '@umbraco-cms/backoffice/http-client';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\nChart.register(...registerables)\r\ninterface ContentType {\r\n    name: string;\r\n    label: string;\r\n}\r\n@customElement('content-insights')\r\nexport class ContentInsights extends UmbLitElement{\r\n    @property()\r\n    docsHint = 'Click on the Vite and Lit logos to learn more'\r\n\r\n    @property({ type: Number })\r\n    count = 0\r\n\r\n    render() {\r\n        return html`\r\n      <div>\r\n        <canvas id=\"myChart\" width=\"400\" height=\"200\"></canvas>\r\n      </div>\r\n      <div class=\"card\">\r\n        <button @click=${this._onClick}>count is ${this.count}</button>\r\n      </div>\r\n      <p class=\"read-the-docs\">${this.docsHint}</p>\r\n    `\r\n    }\r\n\r\n    async firstUpdated() {\r\n\r\n        const response = await tryExecute(this, umbHttpClient.get<ContentType[]>({\r\n            url: '/umbraco/management/api/v1/content-insights/get-content-types',\r\n        }));\r\n\r\n        const contentTypes = (response as { data: ContentType[] }).data;\r\n\r\n        if (!contentTypes) return;\r\n\r\n        const labels = contentTypes.map((ct: any) => ct.name);\r\n        const values = contentTypes.map((_: any, i: number) => i + 1);\r\n\r\n        const ctx = this.renderRoot.querySelector('#myChart') as HTMLCanvasElement;\r\n        new Chart(ctx, {\r\n            type: 'bar',\r\n            data: {\r\n                labels,\r\n                datasets: [{\r\n                    label: 'Content Types',\r\n                    data: values,\r\n                    backgroundColor: 'rgba(75, 192, 192, 0.5)'\r\n                }]\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                scales: {\r\n                    y: { beginAtZero: true }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private _onClick() {\r\n        this.count++\r\n    }\r\n\r\n    static styles = css`\r\n    :host {\r\n      display: block;\r\n      max-width: 800px;\r\n      margin: 0 auto;\r\n    }\r\n    canvas {\r\n      max-width: 100%;\r\n    }\r\n  `\r\n}\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'content-insights': ContentInsights\r\n    }\r\n}\r\n"],"names":["t","e","s","o","n$3","r","n","i","S","c","h","a","l","p","d","u","f","b","y","v","_","m","g","$","x","T","E","A","C","P","V","N","H","I","L","k","M","R","z","j","B","round","lim","p2b","n2b","b2n","n2p","map$1","hex","h1","h2","eq","isShort","hexParse","str","len","ret","alpha","hexString","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","hueValue","max","rgb2hsl","min","calln","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","p1","p2","rotate","deg","hslString","map","names$1","unpack","unpacked","keys","tkeys","ok","nk","names","nameParse","RGB_RE","rgbParse","rgbString","to","from","interpolate","rgb1","rgb2","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","Color","type","obj","color","weight","c1","c2","w2","w1","val","noop","uid","id","isNullOrUndef","value","isArray","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","toDimension","callback","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","source","target","klen","isValidKey","key","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","_splitKey","parts","part","_getKeyResolver","resolveObjectKey","_capitalize","defined","isFunction","setsEqual","item","_isClickEvent","PI","TAU","PITAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","niceNum","range","roundedRange","niceRange","fraction","_factorize","result","sqrt","isNonPrimitive","isNumber","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","index","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","method","base","res","object","unlistenArrayEvents","stub","listeners","_arrayUnique","items","set","requestAnimFrame","throttled","argsToUse","ticking","debounce","delay","timeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","iScale","vScale","_parsed","spanGaps","axis","minDefined","maxDefined","distanceToDefinedLo","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","changed","atEdge","elasticIn","elasticOut","effects","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","name","applyLayoutsDefaults","intlCache","getNumberFormat","locale","cacheKey","formatter","formatNumber","num","formatters","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","remain","Ticks","applyScaleDefaults","_ctx","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","context","ctx","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","appliers","apply","toFontString","font","_measureText","data","gc","longest","string","textWidth","_longestText","arrayOfThings","cache","jlen","thing","nestedThing","gcLen","_alignPixel","chart","pixel","width","devicePixelRatio","halfWidth","clearCanvas","canvas","drawPoint","drawPointLegend","xOffset","yOffset","size","cornerRadius","xOffsetW","yOffsetW","style","rotation","radius","rad","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","mode","midpoint","_bezierCurveTo","setRenderOpts","opts","decorateText","line","metrics","top","bottom","yDecoration","drawBackdrop","oldColor","renderText","text","lines","stroke","addRoundedRectPath","rect","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","_cached","_resolveWithPrefixes","getKeysFromAllScopes","storage","_attachContext","proxy","subProxy","descriptorDefaults","receiver","_resolveWithContext","_scriptable","_indexable","_allKeys","readKey","prefix","needsSubResolver","_proxy","_context","_subProxy","_resolveScriptable","_resolveArray","getValue","_stack","createSubResolver","isIndexable","arr","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","parsed","EPSILON","getPoint","getValueAxis","indexAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","prev","_isDomSupported","_getParentNode","domNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","getCanvasPosition","touches","offsetX","offsetY","box","getRelativePosition","event","currentDevicePixelRatio","borderBox","paddings","borders","height","getContainerSize","maxWidth","maxHeight","container","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","supportsEventListenerOptions","passiveSupported","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","restoreTextDirection","propertyFn","normalizeSegment","getSegment","segment","bounds","startBound","endBound","between","normalize","_boundSegment","compare","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","_computeSegments","segmentOptions","splitByStyles","completeLoop","doSplitByStyles","chartContext","baseStyle","readStyle","datasetIndex","prevStyle","addStyle","st","dir","styleChanged","replacer","getSizeForArea","scale","chartArea","field","getDatasetArea","getDatasetClipArea","clip","Animator","anims","date","callbacks","numSteps","remaining","draw","charts","cb","acc","animator","transparent","interpolators","factor","c0","Animation","cfg","currentValue","elapsed","duration","promises","rej","resolved","Animations","config","animationOptions","animatedProps","option","newOptions","resolveTargetOptions","animations","awaitAll","running","animation","properties","anim","scaleClip","allowedOverflow","defaultClip","toClip","getSortedDatasetIndices","filterVisible","metasets","applyStack","stack","dsIndex","singleMode","otherValue","found","convertObjectDataToArray","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","updateStacks","controller","iAxis","vAxis","itemStacks","visualValues","getFirstScaleId","scales","createDatasetContext","createDataContext","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","DatasetController","dataset","chooseId","xid","yid","rid","iid","vid","scaleID","_data","resetNewElements","stackChanged","oldStacked","scopeKeys","_stacked","sorted","isNotInOrderComparedToPrev","labels","singleScale","xAxisKey","yAxisKey","parsedValue","otherScale","otherMin","otherMax","_skip","elements","active","drawActiveElementsOnTop","elementType","sharing","transition","sharedOptions","firstOpts","previouslySharedOptions","includeOptions","arg1","arg2","numMeta","numData","move","removed","newCount","getAllScaleValues","visibleMetas","computeMinSampleSize","curr","updateMinAndPrev","computeFitCategoryTraits","ruler","stackCount","thickness","computeFlexCategoryTraits","pixels","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","borderProps","setBorderSkipped","edge","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","bars","reset","horizontal","vpixels","ipixels","dataIndex","currentParsed","iScaleValue","skipNull","indexScaleId","firstScaleAxisId","barThickness","baseValue","minBarLength","floating","length","head","startPixel","endPixel","halfGrid","maxBarThickness","center","axisCount","axisID","axisNumber","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","pointStyle","label","legendItem","legend","getter","arcs","spacing","maxSize","chartWeight","maxRadius","outerRadius","innerRadius","radiusLength","animationOpts","centerX","centerY","animateScale","arc","metaData","total","ringWeightOffset","LineController","_dataset","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","lastPoint","PolarAreaController","minSize","datasetStartAngle","defaultAngle","PieController","RadarController","pointPosition","ScatterController","showLine","controllers","abstract","DateAdapterBase","members","adapters","binarySearch","metaset","intersect","_sorted","lookupMethod","evaluateInteractionItems","position","handler","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","includeInvisible","getNearestRadialItems","evaluationFunc","getNearestCartesianItems","distanceMetric","minDistance","inRange","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","buildLayoutBoxes","centerHorizontal","centerVertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","newHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","same","other","setBoxDims","placeBoxes","userPadding","layoutItem","minPadding","padding","availableWidth","availableHeight","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","isNullOrEmpty","initCanvas","renderHeight","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","createAttachObserver","observer","entries","trigger","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","releaseObserver","createProxyAndListen","DomPlatform","initial","proxies","_detectPlatform","Element","final","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","majorIndices","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","skip","offset","tickLength","maxScale","maxChart","evenMajorSpacing","getEvenSpacing","factors","majorStart","majorEnd","diff","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","tick","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","raw","_userMin","_userMax","_suggestedMin","_suggestedMax","metas","sampleSize","samplingEnabled","reversePixels","numTicks","minRotation","maxRotation","labelRotation","tickWidth","maxLabelDiagonal","labelSizes","maxLabelWidth","maxLabelHeight","titleOpts","gridOpts","display","isHorizontal","titleHeight","widest","highest","tickPadding","angleRadians","cos","sin","labelHeight","labelWidth","isRotated","labelsBelowTicks","offsetLeft","offsetRight","paddingLeft","paddingRight","paddingTop","paddingBottom","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","lineHeight","nestedLabel","valueAt","idx","decimal","optionTicks","rot","grid","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineWidth","lineColor","borderDash","borderDashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","mirror","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","backgroundColor","drawLine","lastLineWidth","renderTextOptions","title","tz","gz","bz","fontSize","TypedRegistry","override","parentScope","isIChartComponent","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","typedRegistry","arg","reg","itemReg","registry","component","camelMethod","PluginService","hook","filter","descriptor","plugin","all","plugins","allPlugins","createDescriptors","previousDescriptors","localIds","getOpts","pluginOpts","getIndexAxis","datasetDefaults","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","datasetType","mainScope","resetCache","_scopeCache","keyLists","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","isScriptable","scriptable","indexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onAnimationProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","maintainAspectRatio","_aspectRatio","newSize","newRatio","scalesOptions","axisOptions","scaleOpts","updated","isRadial","scaleType","scaleClass","hasUpdated","datasets","newControllers","ControllerClass","datasetElementType","dataElementType","animsDisabled","_active","_lastEvent","existingEvents","newEvents","_hiddenIndices","changes","_dataChanges","datasetCount","makeSet","changeSet","noArea","layers","visible","platform","_add","_remove","detached","attached","enabled","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","clipSelf","borderWidth","borderJoinStyle","outerAngleClip","innerAngleClip","clipWidth","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","rThetaToXY","theta","pathArc","circular","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStart","outerEnd","innerStart","innerEnd","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawBorder","borderRadius","inner","ArcElement","chartX","chartY","rAdjust","_circumference","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineTo","getLineMethod","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","_getInterpolationMethod","strokePathWithCache","path","strokePathDirect","segmentMethod","usePath2D","LineElement","_interpolate","interpolated","inRange$1","PointElement","mouseX","mouseY","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","enableBorderRadius","maxR","enableBorder","boundingRects","skipX","skipY","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","borderColor","outer","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","containsDefaultColorsDefenitions","plugin_colors","_args","chartOptions","containsColorDefenition","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","xAxis","threshold","_segments","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_loop","_shouldApplyFill","_resolveTarget","propagate","fill","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","fillColor","clipVertical","clipHorizontal","clipY","lineLoop","clipX","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","getBoxSize","labelOpts","boxHeight","boxWidth","itemsEqual","Legend","legendItems","labelFont","itemHeight","hitboxes","lineWidths","totalHeight","row","_itemHeight","columnSizes","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","rtlHelper","hitbox","defaultColor","halfFontSize","cursor","drawLegendBox","drawOptions","yBoxTop","xBoxLeft","fillText","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","sameItem","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","ci","usePointStyle","useBorderRadius","Title","textSize","fontOpts","createTitle","plugin_title","titleBlock","plugin_subtitle","positioners","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","bodyLineHeight","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","caretSize","caretPadding","topLeft","topRight","bottomLeft","bottomRight","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","labelCount","tooltipItem","invokeCallbackWithFallback","Tooltip","beforeTitle","afterTitle","bodyItems","scoped","beforeFooter","afterFooter","labelColors","labelPointStyles","labelTextColors","positionAndSize","backgroundPoint","tooltipPoint","caretPosition","ptX","ptY","x3","y3","titleSpacing","labelColor","labelPointStyle","colorX","rtlColorX","yOffSet","colorY","outerX","innerX","bodySpacing","bodyAlign","displayColors","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","tooltipSize","animX","animY","opacity","hasTooltipContent","positionChanged","caretX","caretY","plugin_tooltip","addIfString","addedLabels","findOrAddLabel","_getLabelForValue","CategoryScale","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","setMin","setMax","minSign","maxSign","stepSize","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","significand","lastTick","LogarithmicScale","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","pointLabelOpts","additionalAngle","plFont","hLimits","vLimits","updateLimits","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","centerPointLabels","drawPointLabelBox","backdropColor","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","scaledDistance","pointLabel","distanceFromCenter","angleLines","INTERVALS","UNITS","sorter","parse","adapter","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","major","ticksFromTimestamps","TimeScale","_applyBounds","timeOpts","minor","weekday","hasWeekday","format","formats","fmt","minorFormat","majorFormat","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","displayFormats","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","registerables","ContentInsights","UmbLitElement","html","contentTypes","tryExecute","umbHttpClient","ct","css","__decorateClass","customElement"],"mappings":";;;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,MAAMA,KAAE,YAAWC,KAAED,GAAE,eAAsBA,GAAE,aAAX,UAAqBA,GAAE,SAAS,iBAAe,wBAAuB,SAAS,aAAW,aAAY,cAAc,WAAUE,KAAE,OAAM,GAAGC,KAAE,oBAAI;AAAO,IAAAC,KAAC,MAAO;AAAA,EAAC,YAAY,GAAE,GAAED,GAAE;AAAC,QAAG,KAAK,eAAa,IAAGA,MAAID,GAAE,OAAM,MAAM,mEAAmE;AAAE,SAAK,UAAQ,GAAE,KAAK,IAAE;AAAA,EAAC;AAAA,EAAC,IAAI,aAAY;AAAC,QAAI,IAAE,KAAK;AAAE,UAAMA,IAAE,KAAK;AAAE,QAAGD,MAAY,MAAT,QAAW;AAAC,YAAMA,IAAWC,MAAT,UAAgBA,EAAE,WAAN;AAAa,MAAAD,MAAI,IAAEE,GAAE,IAAID,CAAC,IAAY,MAAT,YAAc,KAAK,IAAE,IAAE,IAAI,iBAAe,YAAY,KAAK,OAAO,GAAED,KAAGE,GAAE,IAAID,GAAE,CAAC;AAAA,IAAE;AAAC,WAAO;AAAA,EAAC;AAAA,EAAC,WAAU;AAAC,WAAO,KAAK;AAAA,EAAO;AAAC;AAAC,MAAMG,KAAE,CAAAL,MAAG,IAAIM,GAAY,OAAON,KAAjB,WAAmBA,IAAEA,IAAE,IAAG,QAAOE,EAAC,GAAEK,KAAE,CAACP,MAAKC,MAAI;AAAC,QAAME,IAAMH,EAAE,WAAN,IAAaA,EAAE,CAAC,IAAEC,EAAE,OAAQ,CAACA,GAAEC,GAAE,MAAID,KAAG,CAAAD,MAAG;AAAC,QAAQA,EAAE,iBAAP,GAAoB,QAAOA,EAAE;AAAQ,QAAa,OAAOA,KAAjB,SAAmB,QAAOA;AAAE,UAAM,MAAM,qEAAmEA,IAAE,sFAAsF;AAAA,EAAC,GAAGE,CAAC,IAAEF,EAAE,IAAE,CAAC,GAAGA,EAAE,CAAC,CAAC;AAAE,SAAO,IAAIM,GAAEH,GAAEH,GAAEE,EAAC;AAAC,GAAEM,KAAE,CAACN,GAAEC,MAAI;AAAC,MAAGF,GAAE,CAAAC,EAAE,qBAAmBC,EAAE,IAAK,CAAAH,MAAGA,aAAa,gBAAcA,IAAEA,EAAE;MAAkB,YAAU,KAAKG,GAAE;AAAC,UAAMA,IAAE,SAAS,cAAc,OAAO,GAAE,IAAEH,GAAE;AAAS,IAAS,MAAT,UAAYG,EAAE,aAAa,SAAQ,CAAC,GAAEA,EAAE,cAAY,EAAE,SAAQD,EAAE,YAAYC,CAAC;AAAA,EAAC;AAAC,GAAEM,KAAER,KAAE,CAAAD,MAAGA,IAAE,CAAAA,MAAGA,aAAa,iBAAe,OAAG;AAAC,MAAI,IAAE;AAAG,aAAU,KAAK,EAAE,SAAS,MAAG,EAAE;AAAQ,SAAOK,GAAE,CAAC;AAAC,GAAGL,CAAC,IAAEA;ACJ3zC;AAAA;AAAA;AAAA;AAAA;AAIG,MAAK,EAAC,IAAGO,IAAE,gBAAeN,IAAE,0BAAyBS,IAAE,qBAAoBL,IAAE,uBAAsBF,IAAE,gBAAeG,GAAC,IAAE,QAAOK,KAAE,YAAWF,KAAEE,GAAE,cAAaC,KAAEH,KAAEA,GAAE,cAAY,IAAGI,KAAEF,GAAE,gCAA+BG,KAAE,CAACd,GAAEE,MAAIF,GAAEe,KAAE,EAAC,YAAYf,GAAEE,GAAE;AAAC,UAAOA,GAAC;AAAA,IAAE,KAAK;AAAQ,MAAAF,IAAEA,IAAEY,KAAE;AAAK;AAAA,IAAM,KAAK;AAAA,IAAO,KAAK;AAAM,MAAAZ,IAAQA,KAAN,OAAQA,IAAE,KAAK,UAAUA,CAAC;AAAA,EAAC;AAAC,SAAOA;AAAC,GAAE,cAAcA,GAAEE,GAAE;AAAC,MAAIK,IAAEP;AAAE,UAAOE;IAAG,KAAK;AAAQ,MAAAK,IAASP,MAAP;AAAS;AAAA,IAAM,KAAK;AAAO,MAAAO,IAASP,MAAP,OAAS,OAAK,OAAOA,CAAC;AAAE;AAAA,IAAM,KAAK;AAAA,IAAO,KAAK;AAAM,UAAG;AAAC,QAAAO,IAAE,KAAK,MAAMP,CAAC;AAAA,MAAC,QAAS;AAAC,QAAAO,IAAE;AAAA,MAAI;AAAA,EAAC;AAAC,SAAOA;AAAC,EAAC,GAAES,KAAE,CAAChB,GAAEE,MAAI,CAACK,GAAEP,GAAEE,CAAC,GAAEe,KAAE,EAAC,WAAU,IAAG,MAAK,QAAO,WAAUF,IAAE,SAAQ,IAAG,YAAW,IAAG,YAAWC,GAAC;AAAE,OAAO,aAAW,OAAO,UAAU,GAAEL,GAAE,wBAAsB,oBAAI;SAAQ,cAAgB,YAAW;AAAA,EAAC,OAAO,eAAe,GAAE;AAAC,SAAK,KAAI,IAAI,KAAK,MAAI,CAAA,GAAI,KAAK,CAAC;AAAA,EAAC;AAAA,EAAC,WAAW,qBAAoB;AAAC,WAAO,KAAK,SAAQ,GAAG,KAAK,QAAM,CAAC,GAAG,KAAK,KAAK,MAAM;AAAA,EAAC;AAAA,EAAC,OAAO,eAAe,GAAET,IAAEe,IAAE;AAAC,QAAGf,EAAE,UAAQA,EAAE,YAAU,KAAI,KAAK,KAAI,GAAG,KAAK,UAAU,eAAe,CAAC,OAAKA,IAAE,OAAO,OAAOA,CAAC,GAAG,UAAQ,KAAI,KAAK,kBAAkB,IAAI,GAAEA,CAAC,GAAE,CAACA,EAAE,YAAW;AAAC,YAAMK,IAAE,OAAM,GAAGG,IAAE,KAAK,sBAAsB,GAAEH,GAAEL,CAAC;AAAE,MAASQ,MAAT,UAAYT,GAAE,KAAK,WAAU,GAAES,CAAC;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,OAAO,sBAAsB,GAAER,GAAEK,GAAE;AAAC,UAAK,EAAC,KAAIN,GAAE,KAAII,EAAC,IAAEK,GAAE,KAAK,WAAU,CAAC,KAAG,EAAC,MAAK;AAAC,aAAO,KAAKR,CAAC;AAAA,IAAC,GAAE,IAAIF,GAAE;AAAC,WAAKE,CAAC,IAAEF;AAAA,IAAC,EAAC;AAAE,WAAM,EAAC,KAAIC,GAAE,IAAIC,GAAE;AAAC,YAAMQ,IAAET,GAAG,KAAK,IAAI;AAAE,MAAAI,GAAG,KAAK,MAAKH,CAAC,GAAE,KAAK,cAAc,GAAEQ,GAAEH,CAAC;AAAA,IAAC,GAAE,cAAa,IAAG,YAAW,GAAE;AAAA,EAAC;AAAA,EAAC,OAAO,mBAAmB,GAAE;AAAC,WAAO,KAAK,kBAAkB,IAAI,CAAC,KAAGU;AAAA,EAAC;AAAA,EAAC,OAAO,OAAM;AAAC,QAAG,KAAK,eAAeH,GAAE,mBAAmB,CAAC,EAAE;AAAO,UAAM,IAAER,GAAE,IAAI;AAAE,MAAE,SAAQ,GAAY,EAAE,MAAX,WAAe,KAAK,IAAE,CAAC,GAAG,EAAE,CAAC,IAAG,KAAK,oBAAkB,IAAI,IAAI,EAAE,iBAAiB;AAAA,EAAC;AAAA,EAAC,OAAO,WAAU;AAAC,QAAG,KAAK,eAAeQ,GAAE,WAAW,CAAC,EAAE;AAAO,QAAG,KAAK,YAAU,IAAG,KAAK,KAAI,GAAG,KAAK,eAAeA,GAAE,YAAY,CAAC,GAAE;AAAC,YAAMd,IAAE,KAAK,YAAW,IAAE,CAAC,GAAGK,GAAEL,CAAC,GAAE,GAAGG,GAAEH,CAAC,CAAC;AAAE,iBAAUO,KAAK,EAAE,MAAK,eAAeA,GAAEP,EAAEO,CAAC,CAAC;AAAA,IAAC;AAAC,UAAM,IAAE,KAAK,OAAO,QAAQ;AAAE,QAAU,MAAP,MAAS;AAAC,YAAML,IAAE,oBAAoB,IAAI,CAAC;AAAE,UAAYA,MAAT,OAAW,YAAS,CAACF,GAAEO,CAAC,KAAIL,EAAE,MAAK,kBAAkB,IAAIF,GAAEO,CAAC;AAAA,IAAC;AAAC,SAAK,OAAK,oBAAI;AAAI,eAAS,CAACP,GAAE,CAAC,KAAI,KAAK,mBAAkB;AAAC,YAAMO,IAAE,KAAK,KAAKP,GAAE,CAAC;AAAE,MAASO,MAAT,UAAY,KAAK,KAAK,IAAIA,GAAEP,CAAC;AAAA,IAAC;AAAC,SAAK,gBAAc,KAAK,eAAe,KAAK,MAAM;AAAA,EAAC;AAAA,EAAC,OAAO,eAAeE,GAAE;AAAC,UAAMK,IAAE,CAAA;AAAG,QAAG,MAAM,QAAQL,CAAC,GAAE;AAAC,YAAMD,IAAE,IAAI,IAAIC,EAAE,KAAK,KAAG,EAAE,QAAO,CAAE;AAAE,iBAAUA,KAAKD,EAAE,CAAAM,EAAE,QAAQP,GAAEE,CAAC,CAAC;AAAA,IAAC,MAAM,CAASA,MAAT,UAAYK,EAAE,KAAKP,GAAEE,CAAC,CAAC;AAAE,WAAOK;AAAA,EAAC;AAAA,EAAC,OAAO,KAAK,GAAEL,GAAE;AAAC,UAAMK,IAAEL,EAAE;AAAU,WAAWK,MAAL,KAAO,SAAiB,OAAOA,KAAjB,WAAmBA,IAAY,OAAO,KAAjB,WAAmB,EAAE,YAAW,IAAG;AAAA,EAAM;AAAA,EAAC,cAAa;AAAC,UAAK,GAAG,KAAK,OAAK,QAAO,KAAK,kBAAgB,IAAG,KAAK,aAAW,IAAG,KAAK,OAAK,MAAK,KAAK,KAAI;AAAA,EAAE;AAAA,EAAC,OAAM;AAAC,SAAK,OAAK,IAAI,QAAS,OAAG,KAAK,iBAAe,CAAC,GAAG,KAAK,OAAK,oBAAI,OAAI,KAAK,KAAI,GAAG,KAAK,cAAa,GAAG,KAAK,YAAY,GAAG,QAAS,OAAG,EAAE,IAAI,CAAC;AAAA,EAAE;AAAA,EAAC,cAAc,GAAE;AAAC,KAAC,KAAK,SAAO,oBAAI,OAAK,IAAI,CAAC,GAAW,KAAK,eAAd,UAA0B,KAAK,eAAa,EAAE,gBAAa;AAAA,EAAI;AAAA,EAAC,iBAAiB,GAAE;AAAC,SAAK,MAAM,OAAO,CAAC;AAAA,EAAC;AAAA,EAAC,OAAM;AAAC,UAAM,IAAE,oBAAI,OAAIL,IAAE,KAAK,YAAY;AAAkB,eAAUK,KAAKL,EAAE,KAAI,EAAG,MAAK,eAAeK,CAAC,MAAI,EAAE,IAAIA,GAAE,KAAKA,CAAC,CAAC,GAAE,OAAO,KAAKA,CAAC;AAAG,MAAE,OAAK,MAAI,KAAK,OAAK;AAAA,EAAE;AAAA,EAAC,mBAAkB;AAAC,UAAM,IAAE,KAAK,cAAY,KAAK,aAAa,KAAK,YAAY,iBAAiB;AAAE,WAAOL,GAAE,GAAE,KAAK,YAAY,aAAa,GAAE;AAAA,EAAC;AAAA,EAAC,oBAAmB;AAAC,SAAK,eAAa,KAAK,iBAAgB,GAAG,KAAK,eAAe,EAAE,GAAE,KAAK,MAAM,QAAS,OAAG,EAAE,gBAAa,CAAI;AAAA,EAAE;AAAA,EAAC,eAAe,GAAE;AAAA,EAAC;AAAA,EAAC,uBAAsB;AAAC,SAAK,MAAM,QAAS,OAAG,EAAE,mBAAgB,CAAI;AAAA,EAAE;AAAA,EAAC,yBAAyB,GAAEA,GAAEK,GAAE;AAAC,SAAK,KAAK,GAAEA,CAAC;AAAA,EAAC;AAAA,EAAC,KAAK,GAAEL,GAAE;AAAC,UAAMK,IAAE,KAAK,YAAY,kBAAkB,IAAI,CAAC,GAAEN,IAAE,KAAK,YAAY,KAAK,GAAEM,CAAC;AAAE,QAAYN,MAAT,UAAiBM,EAAE,YAAP,IAAe;AAAC,YAAMG,KAAYH,EAAE,WAAW,gBAAtB,SAAkCA,EAAE,YAAUQ,IAAG,YAAYb,GAAEK,EAAE,IAAI;AAAE,WAAK,OAAK,GAAQG,KAAN,OAAQ,KAAK,gBAAgBT,CAAC,IAAE,KAAK,aAAaA,GAAES,CAAC,GAAE,KAAK,OAAK;AAAA,IAAI;AAAA,EAAC;AAAA,EAAC,KAAK,GAAER,GAAE;AAAC,UAAMK,IAAE,KAAK,aAAYN,IAAEM,EAAE,KAAK,IAAI,CAAC;AAAE,QAAYN,MAAT,UAAY,KAAK,SAAOA,GAAE;AAAC,YAAMD,IAAEO,EAAE,mBAAmBN,CAAC,GAAES,IAAc,OAAOV,EAAE,aAArB,aAA+B,EAAC,eAAcA,EAAE,UAAS,IAAWA,EAAE,WAAW,kBAAtB,SAAoCA,EAAE,YAAUe;AAAE,WAAK,OAAKd;AAAE,YAAMI,IAAEK,EAAE,cAAcR,GAAEF,EAAE,IAAI;AAAE,WAAKC,CAAC,IAAEI,KAAG,KAAK,MAAM,IAAIJ,CAAC,KAAGI,GAAE,KAAK,OAAK;AAAA,IAAI;AAAA,EAAC;AAAA,EAAC,cAAc,GAAEH,GAAEK,GAAE;AAAC,QAAY,MAAT,QAAW;AAAC,YAAMN,IAAE,KAAK,aAAYS,IAAE,KAAK,CAAC;AAAE,UAAGH,MAAIN,EAAE,mBAAmB,CAAC,GAAE,GAAGM,EAAE,cAAYS,IAAGN,GAAER,CAAC,KAAGK,EAAE,cAAYA,EAAE,WAASG,MAAI,KAAK,MAAM,IAAI,CAAC,KAAG,CAAC,KAAK,aAAaT,EAAE,KAAK,GAAEM,CAAC,CAAC,GAAG;AAAO,WAAK,EAAE,GAAEL,GAAEK,CAAC;AAAA,IAAC;AAAC,IAAK,KAAK,oBAAV,OAA4B,KAAK,OAAK,KAAK,KAAI;AAAA,EAAG;AAAA,EAAC,EAAE,GAAEL,GAAE,EAAC,YAAWK,GAAE,SAAQN,GAAE,SAAQS,EAAC,GAAE,GAAE;AAAC,IAAAH,KAAG,EAAE,KAAK,SAAO,oBAAI,OAAK,IAAI,CAAC,MAAI,KAAK,KAAK,IAAI,GAAE,KAAGL,KAAG,KAAK,CAAC,CAAC,GAAOQ,MAAL,MAAiB,MAAT,YAAc,KAAK,KAAK,IAAI,CAAC,MAAI,KAAK,cAAYH,MAAIL,IAAE,SAAQ,KAAK,KAAK,IAAI,GAAEA,CAAC,IAAQD,MAAL,MAAQ,KAAK,SAAO,MAAI,KAAK,SAAO,oBAAI,OAAK,IAAI,CAAC;AAAA,EAAE;AAAA,EAAC,MAAM,OAAM;AAAC,SAAK,kBAAgB;AAAG,QAAG;AAAC,YAAM,KAAK;AAAA,IAAI,SAAOD,GAAE;AAAC,cAAQ,OAAOA,CAAC;AAAA,IAAC;AAAC,UAAM,IAAE,KAAK,eAAc;AAAG,WAAa,KAAN,QAAS,MAAM,GAAE,CAAC,KAAK;AAAA,EAAe;AAAA,EAAC,iBAAgB;AAAC,WAAO,KAAK,cAAa;AAAA,EAAE;AAAA,EAAC,gBAAe;AAAC,QAAG,CAAC,KAAK,gBAAgB;AAAO,QAAG,CAAC,KAAK,YAAW;AAAC,UAAG,KAAK,eAAa,KAAK,iBAAgB,GAAG,KAAK,MAAK;AAAC,mBAAS,CAACA,GAAEE,CAAC,KAAI,KAAK,KAAK,MAAKF,CAAC,IAAEE;AAAE,aAAK,OAAK;AAAA,MAAM;AAAC,YAAMF,IAAE,KAAK,YAAY;AAAkB,UAAGA,EAAE,OAAK,EAAE,YAAS,CAACE,GAAEK,CAAC,KAAIP,GAAE;AAAC,cAAK,EAAC,SAAQA,EAAC,IAAEO,GAAEN,IAAE,KAAKC,CAAC;AAAE,QAAKF,MAAL,MAAQ,KAAK,KAAK,IAAIE,CAAC,KAAYD,MAAT,UAAY,KAAK,EAAEC,GAAE,QAAOK,GAAEN,CAAC;AAAA,MAAC;AAAA,IAAC;AAAC,QAAI,IAAE;AAAG,UAAMC,IAAE,KAAK;AAAK,QAAG;AAAC,UAAE,KAAK,aAAaA,CAAC,GAAE,KAAG,KAAK,WAAWA,CAAC,GAAE,KAAK,MAAM,QAAS,CAAAF,MAAGA,EAAE,aAAU,IAAO,KAAK,OAAOE,CAAC,KAAG,KAAK,KAAI;AAAA,IAAE,SAAO,GAAE;AAAC,YAAM,IAAE,IAAG,KAAK,KAAI,GAAG;AAAA,IAAC;AAAC,SAAG,KAAK,KAAKA,CAAC;AAAA,EAAC;AAAA,EAAC,WAAW,GAAE;AAAA,EAAC;AAAA,EAAC,KAAK,GAAE;AAAC,SAAK,MAAM,QAAS,CAAAF,MAAGA,EAAE,cAAW,CAAI,GAAG,KAAK,eAAa,KAAK,aAAW,IAAG,KAAK,aAAa,CAAC,IAAG,KAAK,QAAQ,CAAC;AAAA,EAAC;AAAA,EAAC,OAAM;AAAC,SAAK,OAAK,oBAAI,OAAI,KAAK,kBAAgB;AAAA,EAAE;AAAA,EAAC,IAAI,iBAAgB;AAAC,WAAO,KAAK,kBAAiB;AAAA,EAAE;AAAA,EAAC,oBAAmB;AAAC,WAAO,KAAK;AAAA,EAAI;AAAA,EAAC,aAAa,GAAE;AAAC,WAAM;AAAA,EAAE;AAAA,EAAC,OAAO,GAAE;AAAC,SAAK,SAAO,KAAK,KAAK,QAAS,CAAAA,MAAG,KAAK,KAAKA,GAAE,KAAKA,CAAC,CAAC,CAAC,GAAG,KAAK,KAAI;AAAA,EAAE;AAAA,EAAC,QAAQ,GAAE;AAAA,EAAC;AAAA,EAAC,aAAa,GAAE;AAAA,EAAC;AAAC;AAACkB,GAAE,gBAAc,CAAA,GAAGA,GAAE,oBAAkB,EAAC,MAAK,OAAM,GAAEA,GAAEJ,GAAE,mBAAmB,CAAC,IAAE,oBAAI,OAAII,GAAEJ,GAAE,WAAW,CAAC,IAAE,oBAAI,OAAID,KAAI,EAAC,iBAAgBK,GAAC,CAAC,IAAGP,GAAE,4BAA0B,CAAA,GAAI,KAAK,OAAO;ACL7xL;AAAA;AAAA;AAAA;AAAA;AAKK,MAACX,KAAE,YAAWO,KAAEP,GAAE,cAAaE,KAAEK,KAAEA,GAAE,aAAa,YAAW,EAAC,YAAW,CAAAP,MAAGA,EAAC,CAAC,IAAE,QAAOC,KAAE,SAAQS,KAAE,OAAO,KAAK,OAAM,EAAG,QAAQ,CAAC,EAAE,MAAM,CAAC,CAAC,KAAIP,KAAE,MAAIO,IAAEJ,KAAE,IAAIH,EAAC,KAAIE,KAAE,UAASO,KAAE,MAAIP,GAAE,cAAc,EAAE,GAAEI,KAAE,CAAAT,MAAUA,MAAP,QAAoB,OAAOA,KAAjB,YAAgC,OAAOA,KAAnB,YAAqBW,KAAE,MAAM,SAAQI,KAAE,CAAAf,MAAGW,GAAEX,CAAC,KAAe,OAAOA,IAAI,OAAO,QAAQ,KAAtC,YAAwCc,KAAE;AAAA,QAAcE,KAAE,uDAAsDG,KAAE,QAAOC,KAAE,MAAKC,KAAE,OAAO,KAAKP,EAAC,qBAAqBA,EAAC,KAAKA,EAAC;AAAA,2BAAsC,GAAG,GAAED,KAAE,MAAKS,KAAE,MAAKC,KAAE,sCAAqCL,KAAE,CAAAlB,MAAG,CAACO,MAAKL,OAAK,EAAC,YAAWF,GAAE,SAAQO,GAAE,QAAOL,EAAC,IAAGsB,KAAEN,GAAE,CAAC,GAAgBO,KAAE,OAAO,IAAI,cAAc,GAAEC,IAAE,OAAO,IAAI,aAAa,GAAEC,KAAE,oBAAI,WAAQC,KAAEvB,GAAE,iBAAiBA,IAAE,GAAG;AAAE,SAASwB,GAAE7B,GAAEO,GAAE;AAAC,MAAG,CAACI,GAAEX,CAAC,KAAG,CAACA,EAAE,eAAe,KAAK,EAAE,OAAM,MAAM,gCAAgC;AAAE,SAAgBE,OAAT,SAAWA,GAAE,WAAWK,CAAC,IAAEA;AAAC;AAAC,MAAMuB,KAAE,CAAC9B,GAAEO,MAAI;AAAC,QAAML,IAAEF,EAAE,SAAO,GAAEG,IAAE;AAAG,MAAIE,GAAEO,IAAML,MAAJ,IAAM,UAAYA,MAAJ,IAAM,WAAS,IAAGE,IAAEO;AAAE,WAAQT,IAAE,GAAEA,IAAEL,GAAEK,KAAI;AAAC,UAAML,IAAEF,EAAEO,CAAC;AAAE,QAAII,GAAEI,GAAE,IAAE,IAAGG,IAAE;AAAE,WAAKA,IAAEhB,EAAE,WAASO,EAAE,YAAUS,GAAEH,IAAEN,EAAE,KAAKP,CAAC,GAASa,MAAP,QAAW,CAAAG,IAAET,EAAE,WAAUA,MAAIO,KAAUD,EAAE,CAAC,MAAX,QAAaN,IAAEU,KAAWJ,EAAE,CAAC,MAAZ,SAAcN,IAAEW,KAAWL,EAAE,CAAC,MAAZ,UAAeQ,GAAE,KAAKR,EAAE,CAAC,CAAC,MAAIV,IAAE,OAAO,OAAKU,EAAE,CAAC,GAAE,GAAG,IAAGN,IAAEY,MAAYN,EAAE,CAAC,MAAZ,WAAgBN,IAAEY,MAAGZ,MAAIY,KAAQN,EAAE,CAAC,MAAT,OAAYN,IAAEJ,KAAGW,IAAE,IAAE,MAAaD,EAAE,CAAC,MAAZ,SAAc,IAAE,MAAI,IAAEN,EAAE,YAAUM,EAAE,CAAC,EAAE,QAAOJ,IAAEI,EAAE,CAAC,GAAEN,IAAWM,EAAE,CAAC,MAAZ,SAAcM,KAAQN,EAAE,CAAC,MAAT,MAAWO,KAAET,MAAGJ,MAAIa,MAAGb,MAAII,KAAEJ,IAAEY,KAAEZ,MAAIU,MAAGV,MAAIW,KAAEX,IAAEO,MAAGP,IAAEY,IAAEhB,IAAE;AAAQ,UAAMmB,IAAEf,MAAIY,MAAGrB,EAAEO,IAAE,CAAC,EAAE,WAAW,IAAI,IAAE,MAAI;AAAG,IAAAK,KAAGH,MAAIO,KAAEd,IAAEI,KAAE,KAAG,KAAGH,EAAE,KAAKQ,CAAC,GAAET,EAAE,MAAM,GAAE,CAAC,IAAED,KAAEC,EAAE,MAAM,CAAC,IAAEQ,KAAEc,KAAGtB,IAAEQ,MAAQ,MAAL,KAAOH,IAAEiB;AAAA,EAAE;AAAC,SAAM,CAACK,GAAE7B,GAAEY,KAAGZ,EAAEE,CAAC,KAAG,UAAYK,MAAJ,IAAM,WAAaA,MAAJ,IAAM,YAAU,GAAG,GAAEJ,CAAC;AAAC;AAAE,MAAM4B,GAAC;AAAA,EAAC,YAAY,EAAC,SAAQ,GAAE,YAAW7B,EAAC,GAAEI,GAAE;AAAC,QAAID;AAAE,SAAK,QAAM,CAAA;AAAG,QAAII,IAAE,GAAEE,IAAE;AAAE,UAAMI,IAAE,EAAE,SAAO,GAAED,IAAE,KAAK,OAAM,CAACE,GAAEG,CAAC,IAAEW,GAAE,GAAE5B,CAAC;AAAE,QAAG,KAAK,KAAG6B,GAAE,cAAcf,GAAEV,CAAC,GAAEsB,GAAE,cAAY,KAAK,GAAG,SAAY1B,MAAJ,KAAWA,MAAJ,GAAM;AAAC,YAAMF,IAAE,KAAK,GAAG,QAAQ;AAAW,MAAAA,EAAE,YAAY,GAAGA,EAAE,UAAU;AAAA,IAAC;AAAC,YAAaK,IAAEuB,GAAE,gBAAZ,QAAyBd,EAAE,SAAOC,KAAG;AAAC,UAAOV,EAAE,aAAN,GAAe;AAAC,YAAGA,EAAE,gBAAgB,YAAUL,KAAKK,EAAE,kBAAiB,EAAG,KAAGL,EAAE,SAASC,EAAC,GAAE;AAAC,gBAAMM,IAAEY,EAAER,GAAG,GAAET,IAAEG,EAAE,aAAaL,CAAC,EAAE,MAAMU,EAAC,GAAET,IAAE,eAAe,KAAKM,CAAC;AAAE,UAAAO,EAAE,KAAK,EAAC,MAAK,GAAE,OAAML,GAAE,MAAKR,EAAE,CAAC,GAAE,SAAQC,GAAE,MAAWD,EAAE,CAAC,MAAT,MAAW+B,KAAQ/B,EAAE,CAAC,MAAT,MAAWgC,KAAQhC,EAAE,CAAC,MAAT,MAAWiC,KAAEC,GAAC,CAAC,GAAE9B,EAAE,gBAAgBL,CAAC;AAAA,QAAC,MAAM,CAAAA,EAAE,WAAWU,EAAC,MAAII,EAAE,KAAK,EAAC,MAAK,GAAE,OAAML,EAAC,CAAC,GAAEJ,EAAE,gBAAgBL,CAAC;AAAG,YAAGuB,GAAE,KAAKlB,EAAE,OAAO,GAAE;AAAC,gBAAML,IAAEK,EAAE,YAAY,MAAMK,EAAC,GAAER,IAAEF,EAAE,SAAO;AAAE,cAAGE,IAAE,GAAE;AAAC,YAAAG,EAAE,cAAYE,KAAEA,GAAE,cAAY;AAAG,qBAAQA,IAAE,GAAEA,IAAEL,GAAEK,IAAI,CAAAF,EAAE,OAAOL,EAAEO,CAAC,GAAEK,GAAC,CAAE,GAAEgB,GAAE,SAAQ,GAAGd,EAAE,KAAK,EAAC,MAAK,GAAE,OAAM,EAAEL,EAAC,CAAC;AAAE,YAAAJ,EAAE,OAAOL,EAAEE,CAAC,GAAEU,IAAG;AAAA,UAAC;AAAA,QAAC;AAAA,MAAC,WAAaP,EAAE,aAAN,EAAe,KAAGA,EAAE,SAAOF,GAAE,CAAAW,EAAE,KAAK,EAAC,MAAK,GAAE,OAAML,EAAC,CAAC;AAAA,WAAM;AAAC,YAAIT,IAAE;AAAG,gBAAWA,IAAEK,EAAE,KAAK,QAAQK,IAAEV,IAAE,CAAC,OAA5B,KAAgC,CAAAc,EAAE,KAAK,EAAC,MAAK,GAAE,OAAML,EAAC,CAAC,GAAET,KAAGU,GAAE,SAAO;AAAA,MAAC;AAAC,MAAAD;AAAA,IAAG;AAAA,EAAC;AAAA,EAAC,OAAO,cAAc,GAAEF,GAAE;AAAC,UAAM,IAAEF,GAAE,cAAc,UAAU;AAAE,WAAO,EAAE,YAAU,GAAE;AAAA,EAAC;AAAC;AAAC,SAASG,GAAER,GAAEO,GAAEL,IAAEF,GAAEC,GAAE;AAAC,MAAGM,MAAIkB,GAAE,QAAOlB;AAAE,MAAIG,IAAWT,MAAT,SAAWC,EAAE,OAAOD,CAAC,IAAEC,EAAE;AAAK,QAAM,IAAEO,GAAEF,CAAC,IAAE,SAAOA,EAAE;AAAgB,SAAOG,GAAG,gBAAc,MAAIA,GAAG,OAAO,EAAE,GAAW,MAAT,SAAWA,IAAE,UAAQA,IAAE,IAAI,EAAEV,CAAC,GAAEU,EAAE,KAAKV,GAAEE,GAAED,CAAC,IAAYA,MAAT,UAAYC,EAAE,SAAO,CAAA,GAAID,CAAC,IAAES,IAAER,EAAE,OAAKQ,IAAYA,MAAT,WAAaH,IAAEC,GAAER,GAAEU,EAAE,KAAKV,GAAEO,EAAE,MAAM,GAAEG,GAAET,CAAC,IAAGM;AAAC;AAAC,MAAM6B,GAAC;AAAA,EAAC,YAAY,GAAE7B,GAAE;AAAC,SAAK,OAAK,IAAG,KAAK,OAAK,QAAO,KAAK,OAAK,GAAE,KAAK,OAAKA;AAAA,EAAC;AAAA,EAAC,IAAI,aAAY;AAAC,WAAO,KAAK,KAAK;AAAA,EAAU;AAAA,EAAC,IAAI,OAAM;AAAC,WAAO,KAAK,KAAK;AAAA,EAAI;AAAA,EAAC,EAAE,GAAE;AAAC,UAAK,EAAC,IAAG,EAAC,SAAQA,EAAC,GAAE,OAAM,EAAC,IAAE,KAAK,MAAKN,KAAG,GAAG,iBAAeI,IAAG,WAAWE,GAAE,EAAE;AAAE,IAAAqB,GAAE,cAAY3B;AAAE,QAAIS,IAAEkB,GAAE,SAAQ,GAAGzB,IAAE,GAAEG,IAAE,GAAE,IAAE,EAAE,CAAC;AAAE,WAAc,MAAT,UAAY;AAAC,UAAGH,MAAI,EAAE,OAAM;AAAC,YAAII;AAAE,QAAI,EAAE,SAAN,IAAWA,IAAE,IAAI8B,GAAE3B,GAAEA,EAAE,aAAY,MAAK,CAAC,IAAM,EAAE,SAAN,IAAWH,IAAE,IAAI,EAAE,KAAKG,GAAE,EAAE,MAAK,EAAE,SAAQ,MAAK,CAAC,IAAM,EAAE,SAAN,MAAaH,IAAE,IAAI+B,GAAE5B,GAAE,MAAK,CAAC,IAAG,KAAK,KAAK,KAAKH,CAAC,GAAE,IAAE,EAAE,EAAED,CAAC;AAAA,MAAC;AAAC,MAAAH,MAAI,GAAG,UAAQO,IAAEkB,GAAE,SAAQ,GAAGzB;AAAA,IAAI;AAAC,WAAOyB,GAAE,cAAYvB,IAAEJ;AAAA,EAAC;AAAA,EAAC,EAAE,GAAE;AAAC,QAAIM,IAAE;AAAE,eAAU,KAAK,KAAK,KAAK,CAAS,MAAT,WAAsB,EAAE,YAAX,UAAoB,EAAE,KAAK,GAAE,GAAEA,CAAC,GAAEA,KAAG,EAAE,QAAQ,SAAO,KAAG,EAAE,KAAK,EAAEA,CAAC,CAAC,IAAGA;AAAA,EAAG;AAAC;AAAC,MAAM8B,GAAC;AAAA,EAAC,IAAI,OAAM;AAAC,WAAO,KAAK,MAAM,QAAM,KAAK;AAAA,EAAI;AAAA,EAAC,YAAY,GAAE9B,GAAE,GAAEN,GAAE;AAAC,SAAK,OAAK,GAAE,KAAK,OAAKyB,GAAE,KAAK,OAAK,QAAO,KAAK,OAAK,GAAE,KAAK,OAAKnB,GAAE,KAAK,OAAK,GAAE,KAAK,UAAQN,GAAE,KAAK,OAAKA,GAAG,eAAa;AAAA,EAAE;AAAA,EAAC,IAAI,aAAY;AAAC,QAAI,IAAE,KAAK,KAAK;AAAW,UAAMM,IAAE,KAAK;AAAK,WAAgBA,MAAT,UAAiB,GAAG,aAAR,OAAmB,IAAEA,EAAE,aAAY;AAAA,EAAC;AAAA,EAAC,IAAI,YAAW;AAAC,WAAO,KAAK;AAAA,EAAI;AAAA,EAAC,IAAI,UAAS;AAAC,WAAO,KAAK;AAAA,EAAI;AAAA,EAAC,KAAK,GAAEA,IAAE,MAAK;AAAC,QAAEC,GAAE,MAAK,GAAED,CAAC,GAAEE,GAAE,CAAC,IAAE,MAAIiB,KAAS,KAAN,QAAc,MAAL,MAAQ,KAAK,SAAOA,KAAG,KAAK,KAAI,GAAG,KAAK,OAAKA,KAAG,MAAI,KAAK,QAAM,MAAID,MAAG,KAAK,EAAE,CAAC,IAAW,EAAE,eAAX,SAAsB,KAAK,EAAE,CAAC,IAAW,EAAE,aAAX,SAAoB,KAAK,EAAE,CAAC,IAAEV,GAAE,CAAC,IAAE,KAAK,EAAE,CAAC,IAAE,KAAK,EAAE,CAAC;AAAA,EAAC;AAAA,EAAC,EAAE,GAAE;AAAC,WAAO,KAAK,KAAK,WAAW,aAAa,GAAE,KAAK,IAAI;AAAA,EAAC;AAAA,EAAC,EAAE,GAAE;AAAC,SAAK,SAAO,MAAI,KAAK,KAAI,GAAG,KAAK,OAAK,KAAK,EAAE,CAAC;AAAA,EAAE;AAAA,EAAC,EAAE,GAAE;AAAC,SAAK,SAAOW,KAAGjB,GAAE,KAAK,IAAI,IAAE,KAAK,KAAK,YAAY,OAAK,IAAE,KAAK,EAAEJ,GAAE,eAAe,CAAC,CAAC,GAAE,KAAK,OAAK;AAAA,EAAC;AAAA,EAAC,EAAE,GAAE;AAAC,UAAK,EAAC,QAAOE,GAAE,YAAW,EAAC,IAAE,GAAEN,IAAY,OAAO,KAAjB,WAAmB,KAAK,KAAK,CAAC,KAAY,EAAE,OAAX,WAAgB,EAAE,KAAG8B,GAAE,cAAcF,GAAE,EAAE,GAAE,EAAE,EAAE,CAAC,CAAC,GAAE,KAAK,OAAO,IAAG;AAAG,QAAG,KAAK,MAAM,SAAO5B,EAAE,MAAK,KAAK,EAAEM,CAAC;AAAA,SAAM;AAAC,YAAMP,IAAE,IAAIoC,GAAEnC,GAAE,IAAI,GAAEC,IAAEF,EAAE,EAAE,KAAK,OAAO;AAAE,MAAAA,EAAE,EAAEO,CAAC,GAAE,KAAK,EAAEL,CAAC,GAAE,KAAK,OAAKF;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,KAAK,GAAE;AAAC,QAAIO,IAAEoB,GAAE,IAAI,EAAE,OAAO;AAAE,WAAgBpB,MAAT,UAAYoB,GAAE,IAAI,EAAE,SAAQpB,IAAE,IAAIwB,GAAE,CAAC,CAAC,GAAExB;AAAA,EAAC;AAAA,EAAC,EAAE,GAAE;AAAC,IAAAI,GAAE,KAAK,IAAI,MAAI,KAAK,OAAK,CAAA,GAAG,KAAK,KAAI;AAAI,UAAMJ,IAAE,KAAK;AAAK,QAAI,GAAEN,IAAE;AAAE,eAAUS,KAAK,EAAE,CAAAT,MAAIM,EAAE,SAAOA,EAAE,KAAK,IAAE,IAAI8B,GAAE,KAAK,EAAEzB,GAAC,CAAE,GAAE,KAAK,EAAEA,IAAG,GAAE,MAAK,KAAK,OAAO,CAAC,IAAE,IAAEL,EAAEN,CAAC,GAAE,EAAE,KAAKS,CAAC,GAAET;AAAI,IAAAA,IAAEM,EAAE,WAAS,KAAK,KAAK,KAAG,EAAE,KAAK,aAAYN,CAAC,GAAEM,EAAE,SAAON;AAAA,EAAE;AAAA,EAAC,KAAK,IAAE,KAAK,KAAK,aAAYM,GAAE;AAAC,SAAI,KAAK,OAAO,IAAG,IAAGA,CAAC,GAAE,MAAI,KAAK,QAAM;AAAC,YAAMA,IAAE,EAAE;AAAY,QAAE,OAAM,GAAG,IAAEA;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,aAAa,GAAE;AAAC,IAAS,KAAK,SAAd,WAAqB,KAAK,OAAK,GAAE,KAAK,OAAO,CAAC;AAAA,EAAE;AAAC;AAAC,MAAM4B,GAAC;AAAA,EAAC,IAAI,UAAS;AAAC,WAAO,KAAK,QAAQ;AAAA,EAAO;AAAA,EAAC,IAAI,OAAM;AAAC,WAAO,KAAK,KAAK;AAAA,EAAI;AAAA,EAAC,YAAY,GAAE5B,GAAE,GAAEN,GAAES,GAAE;AAAC,SAAK,OAAK,GAAE,KAAK,OAAKgB,GAAE,KAAK,OAAK,QAAO,KAAK,UAAQ,GAAE,KAAK,OAAKnB,GAAE,KAAK,OAAKN,GAAE,KAAK,UAAQS,GAAE,EAAE,SAAO,KAAQ,EAAE,CAAC,MAAR,MAAgB,EAAE,CAAC,MAAR,MAAW,KAAK,OAAK,MAAM,EAAE,SAAO,CAAC,EAAE,KAAK,IAAI,QAAM,GAAE,KAAK,UAAQ,KAAG,KAAK,OAAKgB;AAAA,EAAC;AAAA,EAAC,KAAK,GAAEnB,IAAE,MAAK,GAAEN,GAAE;AAAC,UAAMS,IAAE,KAAK;AAAQ,QAAIP,IAAE;AAAG,QAAYO,MAAT,OAAW,KAAEF,GAAE,MAAK,GAAED,GAAE,CAAC,GAAEJ,IAAE,CAACM,GAAE,CAAC,KAAG,MAAI,KAAK,QAAM,MAAIgB,IAAEtB,MAAI,KAAK,OAAK;AAAA,SAAO;AAAC,YAAMF,IAAE;AAAE,UAAIK,GAAED;AAAE,WAAI,IAAEK,EAAE,CAAC,GAAEJ,IAAE,GAAEA,IAAEI,EAAE,SAAO,GAAEJ,IAAI,CAAAD,IAAEG,GAAE,MAAKP,EAAE,IAAEK,CAAC,GAAEC,GAAED,CAAC,GAAED,MAAIoB,OAAIpB,IAAE,KAAK,KAAKC,CAAC,IAAGH,MAAI,CAACM,GAAEJ,CAAC,KAAGA,MAAI,KAAK,KAAKC,CAAC,GAAED,MAAIqB,IAAE,IAAEA,IAAE,MAAIA,MAAI,MAAIrB,KAAG,MAAIK,EAAEJ,IAAE,CAAC,IAAG,KAAK,KAAKA,CAAC,IAAED;AAAA,IAAC;AAAC,IAAAF,KAAG,CAACF,KAAG,KAAK,EAAE,CAAC;AAAA,EAAC;AAAA,EAAC,EAAE,GAAE;AAAC,UAAIyB,IAAE,KAAK,QAAQ,gBAAgB,KAAK,IAAI,IAAE,KAAK,QAAQ,aAAa,KAAK,MAAK,KAAG,EAAE;AAAA,EAAC;AAAC;AAAC,MAAMM,WAAUG,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,OAAK;AAAA,EAAC;AAAA,EAAC,EAAE,GAAE;AAAC,SAAK,QAAQ,KAAK,IAAI,IAAE,MAAIT,IAAE,SAAO;AAAA,EAAC;AAAC;AAAC,MAAMO,WAAUE,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,OAAK;AAAA,EAAC;AAAA,EAAC,EAAE,GAAE;AAAC,SAAK,QAAQ,gBAAgB,KAAK,MAAK,CAAC,CAAC,KAAG,MAAIT,CAAC;AAAA,EAAC;AAAC;AAAC,MAAMQ,WAAUC,GAAC;AAAA,EAAC,YAAY,GAAE5B,GAAE,GAAEN,GAAES,GAAE;AAAC,UAAM,GAAEH,GAAE,GAAEN,GAAES,CAAC,GAAE,KAAK,OAAK;AAAA,EAAC;AAAA,EAAC,KAAK,GAAEH,IAAE,MAAK;AAAC,SAAI,IAAEC,GAAE,MAAK,GAAED,GAAE,CAAC,KAAGmB,OAAKD,GAAE;AAAO,UAAM,IAAE,KAAK,MAAKxB,IAAE,MAAIyB,KAAG,MAAIA,KAAG,EAAE,YAAU,EAAE,WAAS,EAAE,SAAO,EAAE,QAAM,EAAE,YAAU,EAAE,SAAQhB,IAAE,MAAIgB,MAAI,MAAIA,KAAGzB;AAAG,IAAAA,KAAG,KAAK,QAAQ,oBAAoB,KAAK,MAAK,MAAK,CAAC,GAAES,KAAG,KAAK,QAAQ,iBAAiB,KAAK,MAAK,MAAK,CAAC,GAAE,KAAK,OAAK;AAAA,EAAC;AAAA,EAAC,YAAY,GAAE;AAAC,IAAY,OAAO,KAAK,QAAxB,aAA6B,KAAK,KAAK,KAAK,KAAK,SAAS,QAAM,KAAK,SAAQ,CAAC,IAAE,KAAK,KAAK,YAAY,CAAC;AAAA,EAAC;AAAC;AAAC,MAAM4B,GAAC;AAAA,EAAC,YAAY,GAAE/B,GAAE,GAAE;AAAC,SAAK,UAAQ,GAAE,KAAK,OAAK,GAAE,KAAK,OAAK,QAAO,KAAK,OAAKA,GAAE,KAAK,UAAQ;AAAA,EAAC;AAAA,EAAC,IAAI,OAAM;AAAC,WAAO,KAAK,KAAK;AAAA,EAAI;AAAA,EAAC,KAAK,GAAE;AAAC,IAAAC,GAAE,MAAK,CAAC;AAAA,EAAC;AAAC;AAAM,MAA6D+B,KAAEvC,GAAE;AAAuBuC,KAAIR,IAAEM,EAAC,IAAGrC,GAAE,oBAAkB,CAAA,GAAI,KAAK,OAAO;AAAE,MAAMwC,KAAE,CAACxC,GAAEO,GAAEL,MAAI;AAAC,QAAMD,IAAEC,GAAG,gBAAcK;AAAE,MAAIG,IAAET,EAAE;AAAW,MAAYS,MAAT,QAAW;AAAC,UAAMV,IAAEE,GAAG,gBAAc;AAAK,IAAAD,EAAE,aAAWS,IAAE,IAAI2B,GAAE9B,EAAE,aAAaK,GAAC,GAAGZ,CAAC,GAAEA,GAAE,QAAOE,KAAG,CAAA,CAAE;AAAA,EAAC;AAAC,SAAOQ,EAAE,KAAKV,CAAC,GAAEU;AAAC;ACJ16N;AAAA;AAAA;AAAA;AAAA;AAIG,MAAMR,KAAE;AAAW,MAAMK,WAAUP,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,gBAAc,EAAC,MAAK,KAAI,GAAE,KAAK,OAAK;AAAA,EAAM;AAAA,EAAC,mBAAkB;AAAC,UAAM,IAAE,MAAM,iBAAgB;AAAG,WAAO,KAAK,cAAc,iBAAe,EAAE,YAAW;AAAA,EAAC;AAAA,EAAC,OAAO,GAAE;AAAC,UAAMK,IAAE,KAAK,OAAM;AAAG,SAAK,eAAa,KAAK,cAAc,cAAY,KAAK,cAAa,MAAM,OAAO,CAAC,GAAE,KAAK,OAAKJ,GAAEI,GAAE,KAAK,YAAW,KAAK,aAAa;AAAA,EAAC;AAAA,EAAC,oBAAmB;AAAC,UAAM,kBAAiB,GAAG,KAAK,MAAM,aAAa,EAAE;AAAA,EAAC;AAAA,EAAC,uBAAsB;AAAC,UAAM,qBAAoB,GAAG,KAAK,MAAM,aAAa,EAAE;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,WAAOA;AAAAA,EAAC;AAAC;AAACE,GAAE,gBAAc,IAAGA,GAAE,YAAa,IAAGL,GAAE,2BAA2B,EAAC,YAAWK,GAAC,CAAC;AAAE,MAAMJ,KAAED,GAAE;AAA0BC,KAAI,EAAC,YAAWI,GAAC,CAAC;AAAA,CAAwDL,GAAE,uBAAqB,IAAI,KAAK,OAAO;ACL/xB;AAAA;AAAA;AAAA;AAAA;AAKA,MAAMF,KAAE,CAAAA,MAAG,CAACC,GAAEE,MAAI;EAAUA,eAAEA,EAAE,eAAgB,MAAI;AAAC,mBAAe,OAAOH,GAAEC,CAAC;AAAA,EAAC,CAAC,IAAG,eAAe,OAAOD,GAAEC,CAAC;AAAC;ACJ7G;AAAA;AAAA;AAAA;AAAA;AAIG,MAAME,KAAE,EAAC,WAAU,IAAG,MAAK,QAAO,WAAUH,IAAE,SAAQ,IAAG,YAAWC,GAAC,GAAEI,KAAE,CAACL,IAAEG,IAAEF,GAAEI,MAAI;AAAC,QAAK,EAAC,MAAKC,GAAE,UAASC,EAAC,IAAEF;AAAE,MAAIH,IAAE,WAAW,oBAAoB,IAAIK,CAAC;AAAE,MAAYL,MAAT,UAAY,WAAW,oBAAoB,IAAIK,GAAEL,IAAE,oBAAI,KAAG,GAAaI,MAAX,cAAgBN,IAAE,OAAO,OAAOA,CAAC,GAAG,UAAQ,KAAIE,EAAE,IAAIG,EAAE,MAAKL,CAAC,GAAeM,MAAb,YAAe;AAAC,UAAK,EAAC,MAAKH,EAAC,IAAEE;AAAE,WAAM,EAAC,IAAIA,GAAE;AAAC,YAAMC,IAAEL,EAAE,IAAI,KAAK,IAAI;AAAE,MAAAA,EAAE,IAAI,KAAK,MAAKI,CAAC,GAAE,KAAK,cAAcF,GAAEG,GAAEN,CAAC;AAAA,IAAC,GAAE,KAAKC,GAAE;AAAC,aAAgBA,MAAT,UAAY,KAAK,EAAEE,GAAE,QAAOH,GAAEC,CAAC,GAAEA;AAAA,IAAC,EAAC;AAAA,EAAC;AAAC,MAAcK,MAAX,UAAa;AAAC,UAAK,EAAC,MAAKH,EAAC,IAAEE;AAAE,WAAO,SAASA,GAAE;AAAC,YAAMC,IAAE,KAAKH,CAAC;AAAE,MAAAF,EAAE,KAAK,MAAKI,CAAC,GAAE,KAAK,cAAcF,GAAEG,GAAEN,CAAC;AAAA,IAAC;AAAA,EAAC;AAAC,QAAM,MAAM,qCAAmCM,CAAC;AAAC;AAAE,SAASA,GAAEN,GAAE;AAAC,SAAM,CAACC,GAAEE,MAAc,OAAOA,KAAjB,WAAmBE,GAAEL,GAAEC,GAAEE,CAAC,KAAG,CAACH,GAAEC,GAAE,MAAI;AAAC,UAAM,IAAEA,EAAE,eAAe,CAAC;AAAE,WAAOA,EAAE,YAAY,eAAe,GAAED,CAAC,GAAE,IAAE,OAAO,yBAAyBC,GAAE,CAAC,IAAE;AAAA,EAAM,GAAGD,GAAEC,GAAEE,CAAC;AAAC;ACLryB;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,SAASsC,GAAMtB,GAAG;AAChB,SAAOA,IAAI,MAAM;AACnB;AACA,MAAMuB,KAAM,CAACvB,GAAGP,GAAGF,MAAM,KAAK,IAAI,KAAK,IAAIS,GAAGT,CAAC,GAAGE,CAAC;AACnD,SAAS+B,GAAIxB,GAAG;AACd,SAAOuB,GAAID,GAAMtB,IAAI,IAAI,GAAG,GAAG,GAAG;AACpC;AAIA,SAASyB,GAAIzB,GAAG;AACd,SAAOuB,GAAID,GAAMtB,IAAI,GAAG,GAAG,GAAG,GAAG;AACnC;AACA,SAAS0B,GAAI1B,GAAG;AACd,SAAOuB,GAAID,GAAMtB,IAAI,IAAI,IAAI,KAAK,GAAG,CAAC;AACxC;AACA,SAAS2B,GAAI3B,GAAG;AACd,SAAOuB,GAAID,GAAMtB,IAAI,GAAG,GAAG,GAAG,GAAG;AACnC;AAEA,MAAM4B,KAAQ,EAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAE,GACvJC,KAAM,CAAC,GAAG,kBAAkB,GAC5BC,KAAK,CAAAhC,MAAK+B,GAAI/B,IAAI,EAAG,GACrBiC,KAAK,CAAAjC,MAAK+B,IAAK/B,IAAI,QAAS,CAAC,IAAI+B,GAAI/B,IAAI,EAAG,GAC5CkC,KAAK,CAAAlC,OAAOA,IAAI,QAAS,OAAQA,IAAI,KACrCmC,KAAU,CAAAjC,MAAKgC,GAAGhC,EAAE,CAAC,KAAKgC,GAAGhC,EAAE,CAAC,KAAKgC,GAAGhC,EAAE,CAAC,KAAKgC,GAAGhC,EAAE,CAAC;AAC5D,SAASkC,GAASC,GAAK;AACrB,MAAIC,IAAMD,EAAI,QACVE;AACJ,SAAIF,EAAI,CAAC,MAAM,QACTC,MAAQ,KAAKA,MAAQ,IACvBC,IAAM;AAAA,IACJ,GAAG,MAAMT,GAAMO,EAAI,CAAC,CAAC,IAAI;AAAA,IACzB,GAAG,MAAMP,GAAMO,EAAI,CAAC,CAAC,IAAI;AAAA,IACzB,GAAG,MAAMP,GAAMO,EAAI,CAAC,CAAC,IAAI;AAAA,IACzB,GAAGC,MAAQ,IAAIR,GAAMO,EAAI,CAAC,CAAC,IAAI,KAAK;AAAA,EAC5C,KACeC,MAAQ,KAAKA,MAAQ,OAC9BC,IAAM;AAAA,IACJ,GAAGT,GAAMO,EAAI,CAAC,CAAC,KAAK,IAAIP,GAAMO,EAAI,CAAC,CAAC;AAAA,IACpC,GAAGP,GAAMO,EAAI,CAAC,CAAC,KAAK,IAAIP,GAAMO,EAAI,CAAC,CAAC;AAAA,IACpC,GAAGP,GAAMO,EAAI,CAAC,CAAC,KAAK,IAAIP,GAAMO,EAAI,CAAC,CAAC;AAAA,IACpC,GAAGC,MAAQ,IAAKR,GAAMO,EAAI,CAAC,CAAC,KAAK,IAAIP,GAAMO,EAAI,CAAC,CAAC,IAAK;AAAA,EAC9D,KAGSE;AACT;AACA,MAAMC,KAAQ,CAAC9C,GAAGK,MAAML,IAAI,MAAMK,EAAEL,CAAC,IAAI;AACzC,SAAS+C,GAAUvC,GAAG;AACpB,MAAIH,IAAIoC,GAAQjC,CAAC,IAAI8B,KAAKC;AAC1B,SAAO/B,IACH,MAAMH,EAAEG,EAAE,CAAC,IAAIH,EAAEG,EAAE,CAAC,IAAIH,EAAEG,EAAE,CAAC,IAAIsC,GAAMtC,EAAE,GAAGH,CAAC,IAC7C;AACN;AAEA,MAAM2C,KAAS;AACf,SAASC,GAASlD,GAAGR,GAAGU,GAAG;AACzB,QAAMD,IAAIT,IAAI,KAAK,IAAIU,GAAG,IAAIA,CAAC,GACzBI,IAAI,CAACV,GAAG6B,KAAK7B,IAAII,IAAI,MAAM,OAAOE,IAAID,IAAI,KAAK,IAAI,KAAK,IAAIwB,IAAI,GAAG,IAAIA,GAAG,CAAC,GAAG,EAAE;AACtF,SAAO,CAACnB,EAAE,CAAC,GAAGA,EAAE,CAAC,GAAGA,EAAE,CAAC,CAAC;AAC1B;AACA,SAAS6C,GAASnD,GAAGR,GAAGiB,GAAG;AACzB,QAAMH,IAAI,CAAC,GAAGmB,KAAK,IAAIzB,IAAI,MAAM,MAAMS,IAAIA,IAAIjB,IAAI,KAAK,IAAI,KAAK,IAAIiC,GAAG,IAAIA,GAAG,CAAC,GAAG,CAAC;AACpF,SAAO,CAACnB,EAAE,CAAC,GAAGA,EAAE,CAAC,GAAGA,EAAE,CAAC,CAAC;AAC1B;AACA,SAAS8C,GAASpD,GAAGqD,GAAG9C,GAAG;AACzB,QAAM+C,IAAMJ,GAASlD,GAAG,GAAG,GAAG;AAC9B,MAAIH;AAMJ,OALIwD,IAAI9C,IAAI,MACVV,IAAI,KAAKwD,IAAI9C,IACb8C,KAAKxD,GACLU,KAAKV,IAEFA,IAAI,GAAGA,IAAI,GAAGA;AACjB,IAAAyD,EAAIzD,CAAC,KAAK,IAAIwD,IAAI9C,GAClB+C,EAAIzD,CAAC,KAAKwD;AAEZ,SAAOC;AACT;AACA,SAASC,GAAS5D,GAAGiB,GAAGL,GAAGH,GAAGoD,GAAK;AACjC,SAAI7D,MAAM6D,KACC5C,IAAIL,KAAKH,KAAMQ,IAAIL,IAAI,IAAI,KAElCK,MAAM4C,KACAjD,IAAIZ,KAAKS,IAAI,KAEfT,IAAIiB,KAAKR,IAAI;AACvB;AACA,SAASqD,GAAQhD,GAAG;AAElB,QAAMd,IAAIc,EAAE,IAAI,KACVG,IAAIH,EAAE,IAAI,KACVF,IAAIE,EAAE,IAAI,KACV+C,IAAM,KAAK,IAAI7D,GAAGiB,GAAGL,CAAC,GACtBmD,IAAM,KAAK,IAAI/D,GAAGiB,GAAGL,CAAC,GACtBL,KAAKsD,IAAME,KAAO;AACxB,MAAI1D,GAAGR,GAAGY;AACV,SAAIoD,MAAQE,MACVtD,IAAIoD,IAAME,GACVlE,IAAIU,IAAI,MAAME,KAAK,IAAIoD,IAAME,KAAOtD,KAAKoD,IAAME,IAC/C1D,IAAIuD,GAAS5D,GAAGiB,GAAGL,GAAGH,GAAGoD,CAAG,GAC5BxD,IAAIA,IAAI,KAAK,MAER,CAACA,IAAI,GAAGR,KAAK,GAAGU,CAAC;AAC1B;AACA,SAASyD,GAAMrD,GAAGL,GAAGM,GAAGR,GAAG;AACzB,UACE,MAAM,QAAQE,CAAC,IACXK,EAAEL,EAAE,CAAC,GAAGA,EAAE,CAAC,GAAGA,EAAE,CAAC,CAAC,IAClBK,EAAEL,GAAGM,GAAGR,CAAC,GACb,IAAImC,EAAG;AACX;AACA,SAAS0B,GAAQ5D,GAAGR,GAAGU,GAAG;AACxB,SAAOyD,GAAMT,IAAUlD,GAAGR,GAAGU,CAAC;AAChC;AACA,SAAS2D,GAAQ7D,GAAGqD,GAAG9C,GAAG;AACxB,SAAOoD,GAAMP,IAAUpD,GAAGqD,GAAG9C,CAAC;AAChC;AACA,SAASuD,GAAQ9D,GAAGR,GAAGiB,GAAG;AACxB,SAAOkD,GAAMR,IAAUnD,GAAGR,GAAGiB,CAAC;AAChC;AACA,SAASsD,GAAI/D,GAAG;AACd,UAAQA,IAAI,MAAM,OAAO;AAC3B;AACA,SAASgE,GAASpB,GAAK;AACrB,QAAMjC,IAAIsC,GAAO,KAAKL,CAAG;AACzB,MAAI3C,IAAI,KACJQ;AACJ,MAAI,CAACE;AACH;AAEF,EAAIA,EAAE,CAAC,MAAMF,MACXR,IAAIU,EAAE,CAAC,IAAIsB,GAAI,CAACtB,EAAE,CAAC,CAAC,IAAIuB,GAAI,CAACvB,EAAE,CAAC,CAAC;AAEnC,QAAMX,IAAI+D,GAAI,CAACpD,EAAE,CAAC,CAAC,GACbsD,IAAK,CAACtD,EAAE,CAAC,IAAI,KACbuD,IAAK,CAACvD,EAAE,CAAC,IAAI;AACnB,SAAIA,EAAE,CAAC,MAAM,QACXF,IAAIoD,GAAQ7D,GAAGiE,GAAIC,CAAE,IACZvD,EAAE,CAAC,MAAM,QAClBF,IAAIqD,GAAQ9D,GAAGiE,GAAIC,CAAE,IAErBzD,IAAImD,GAAQ5D,GAAGiE,GAAIC,CAAE,GAEhB;AAAA,IACL,GAAGzD,EAAE,CAAC;AAAA,IACN,GAAGA,EAAE,CAAC;AAAA,IACN,GAAGA,EAAE,CAAC;AAAA,IACN,GAAGR;AAAA,EACP;AACA;AACA,SAASkE,GAAO1D,GAAG2D,GAAK;AACtB,MAAIpE,IAAIyD,GAAQhD,CAAC;AACjB,EAAAT,EAAE,CAAC,IAAI+D,GAAI/D,EAAE,CAAC,IAAIoE,CAAG,GACrBpE,IAAI4D,GAAQ5D,CAAC,GACbS,EAAE,IAAIT,EAAE,CAAC,GACTS,EAAE,IAAIT,EAAE,CAAC,GACTS,EAAE,IAAIT,EAAE,CAAC;AACX;AACA,SAASqE,GAAU5D,GAAG;AACpB,MAAI,CAACA;AACH;AAEF,QAAMR,IAAIwD,GAAQhD,CAAC,GACbT,IAAIC,EAAE,CAAC,GACP,IAAImC,GAAInC,EAAE,CAAC,CAAC,GACZC,IAAIkC,GAAInC,EAAE,CAAC,CAAC;AAClB,SAAOQ,EAAE,IAAI,MACT,QAAQT,CAAC,KAAK,CAAC,MAAME,CAAC,MAAMiC,GAAI1B,EAAE,CAAC,CAAC,MACpC,OAAOT,CAAC,KAAK,CAAC,MAAME,CAAC;AAC3B;AAEA,MAAMoE,KAAM;AAAA,EACX,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AACJ,GACMC,KAAU;AAAA,EACf,QAAQ;AAAA,EACR,aAAa;AAAA,EACb,MAAM;AAAA,EACN,WAAW;AAAA,EACX,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,cAAc;AAAA,EACd,IAAI;AAAA,EACJ,SAAS;AAAA,EACT,MAAM;AAAA,EACN,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,SAAS;AAAA,EACT,KAAK;AAAA,EACL,aAAa;AAAA,EACb,SAAS;AAAA,EACT,SAAS;AAAA,EACT,MAAM;AAAA,EACN,KAAK;AAAA,EACL,OAAO;AAAA,EACP,SAAS;AAAA,EACT,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,WAAW;AAAA,EACX,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,KAAK;AAAA,EACL,KAAK;AAAA,EACL,OAAO;AAAA,EACP,KAAK;AAAA,EACL,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,KAAK;AAAA,EACL,MAAM;AAAA,EACN,OAAO;AAAA,EACP,WAAW;AAAA,EACX,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,OAAO;AAAA,EACP,SAAS;AAAA,EACT,KAAK;AAAA,EACL,MAAM;AAAA,EACN,SAAS;AAAA,EACT,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,YAAY;AAAA,EACZ,KAAK;AAAA,EACL,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,WAAW;AAAA,EACX,KAAK;AAAA,EACL,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,UAAU;AAAA,EACV,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,SAAS;AAAA,EACT,OAAO;AAAA,EACP,SAAS;AAAA,EACT,MAAM;AAAA,EACN,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,SAAS;AAAA,EACT,MAAM;AAAA,EACN,KAAK;AAAA,EACL,MAAM;AAAA,EACN,SAAS;AAAA,EACT,OAAO;AAAA,EACP,aAAa;AAAA,EACb,IAAI;AAAA,EACJ,UAAU;AAAA,EACV,OAAO;AAAA,EACP,WAAW;AAAA,EACX,OAAO;AAAA,EACP,WAAW;AAAA,EACX,OAAO;AAAA,EACP,SAAS;AAAA,EACT,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,KAAK;AAAA,EACL,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,KAAK;AAAA,EACL,KAAK;AAAA,EACL,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,IAAI;AAAA,EACJ,OAAO;AAAA,EACP,KAAK;AAAA,EACL,MAAM;AAAA,EACN,WAAW;AAAA,EACX,IAAI;AAAA,EACJ,OAAO;AACR;AACA,SAASC,KAAS;AAChB,QAAMC,IAAW,CAAA,GACXC,IAAO,OAAO,KAAKH,EAAO,GAC1BI,IAAQ,OAAO,KAAKL,EAAG;AAC7B,MAAIzE,GAAGgC,GAAGJ,GAAGmD,GAAIC;AACjB,OAAKhF,IAAI,GAAGA,IAAI6E,EAAK,QAAQ7E,KAAK;AAEhC,SADA+E,IAAKC,IAAKH,EAAK7E,CAAC,GACXgC,IAAI,GAAGA,IAAI8C,EAAM,QAAQ9C;AAC5B,MAAAJ,IAAIkD,EAAM9C,CAAC,GACXgD,IAAKA,EAAG,QAAQpD,GAAG6C,GAAI7C,CAAC,CAAC;AAE3B,IAAAA,IAAI,SAAS8C,GAAQK,CAAE,GAAG,EAAE,GAC5BH,EAASI,CAAE,IAAI,CAACpD,KAAK,KAAK,KAAMA,KAAK,IAAI,KAAMA,IAAI,GAAI;AAAA,EACzD;AACA,SAAOgD;AACT;AAEA,IAAIK;AACJ,SAASC,GAAUnC,GAAK;AACtB,EAAKkC,OACHA,KAAQN,GAAM,GACdM,GAAM,cAAc,CAAC,GAAG,GAAG,GAAG,CAAC;AAEjC,QAAM7E,IAAI6E,GAAMlC,EAAI,YAAW,CAAE;AACjC,SAAO3C,KAAK;AAAA,IACV,GAAGA,EAAE,CAAC;AAAA,IACN,GAAGA,EAAE,CAAC;AAAA,IACN,GAAGA,EAAE,CAAC;AAAA,IACN,GAAGA,EAAE,WAAW,IAAIA,EAAE,CAAC,IAAI;AAAA,EAC/B;AACA;AAEA,MAAM+E,KAAS;AACf,SAASC,GAASrC,GAAK;AACrB,QAAMjC,IAAIqE,GAAO,KAAKpC,CAAG;AACzB,MAAI3C,IAAI,KACJN,GAAGiB,GAAGL;AACV,MAAKI,GAGL;AAAA,QAAIA,EAAE,CAAC,MAAMhB,GAAG;AACd,YAAMc,IAAI,CAACE,EAAE,CAAC;AACd,MAAAV,IAAIU,EAAE,CAAC,IAAIsB,GAAIxB,CAAC,IAAIuB,GAAIvB,IAAI,KAAK,GAAG,GAAG;AAAA,IACzC;AACA,WAAAd,IAAI,CAACgB,EAAE,CAAC,GACRC,IAAI,CAACD,EAAE,CAAC,GACRJ,IAAI,CAACI,EAAE,CAAC,GACRhB,IAAI,OAAOgB,EAAE,CAAC,IAAIsB,GAAItC,CAAC,IAAIqC,GAAIrC,GAAG,GAAG,GAAG,IACxCiB,IAAI,OAAOD,EAAE,CAAC,IAAIsB,GAAIrB,CAAC,IAAIoB,GAAIpB,GAAG,GAAG,GAAG,IACxCL,IAAI,OAAOI,EAAE,CAAC,IAAIsB,GAAI1B,CAAC,IAAIyB,GAAIzB,GAAG,GAAG,GAAG,IACjC;AAAA,MACL,GAAGZ;AAAA,MACH,GAAGiB;AAAA,MACH,GAAGL;AAAA,MACH,GAAGN;AAAA,IACP;AAAA;AACA;AACA,SAASiF,GAAUzE,GAAG;AACpB,SAAOA,MACLA,EAAE,IAAI,MACF,QAAQA,EAAE,CAAC,KAAKA,EAAE,CAAC,KAAKA,EAAE,CAAC,KAAK0B,GAAI1B,EAAE,CAAC,CAAC,MACxC,OAAOA,EAAE,CAAC,KAAKA,EAAE,CAAC,KAAKA,EAAE,CAAC;AAElC;AAEA,MAAM0E,KAAK,CAAA1E,MAAKA,KAAK,WAAYA,IAAI,QAAQ,KAAK,IAAIA,GAAG,IAAM,GAAG,IAAI,QAAQ,OACxE2E,KAAO,CAAA3E,MAAKA,KAAK,UAAUA,IAAI,QAAQ,KAAK,KAAKA,IAAI,SAAS,OAAO,GAAG;AAC9E,SAAS4E,GAAYC,GAAMC,GAAMjG,GAAG;AAClC,QAAMK,IAAIyF,GAAKjD,GAAImD,EAAK,CAAC,CAAC,GACpB1E,IAAIwE,GAAKjD,GAAImD,EAAK,CAAC,CAAC,GACpB/E,IAAI6E,GAAKjD,GAAImD,EAAK,CAAC,CAAC;AAC1B,SAAO;AAAA,IACL,GAAGpD,GAAIiD,GAAGxF,IAAIL,KAAK8F,GAAKjD,GAAIoD,EAAK,CAAC,CAAC,IAAI5F,EAAE,CAAC;AAAA,IAC1C,GAAGuC,GAAIiD,GAAGvE,IAAItB,KAAK8F,GAAKjD,GAAIoD,EAAK,CAAC,CAAC,IAAI3E,EAAE,CAAC;AAAA,IAC1C,GAAGsB,GAAIiD,GAAG5E,IAAIjB,KAAK8F,GAAKjD,GAAIoD,EAAK,CAAC,CAAC,IAAIhF,EAAE,CAAC;AAAA,IAC1C,GAAG+E,EAAK,IAAIhG,KAAKiG,EAAK,IAAID,EAAK;AAAA,EACnC;AACA;AAEA,SAASE,GAAO/E,GAAGZ,GAAG4F,GAAO;AAC3B,MAAIhF,GAAG;AACL,QAAIiF,IAAMjC,GAAQhD,CAAC;AACnB,IAAAiF,EAAI7F,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,IAAI6F,EAAI7F,CAAC,IAAI6F,EAAI7F,CAAC,IAAI4F,GAAO5F,MAAM,IAAI,MAAM,CAAC,CAAC,GACzE6F,IAAM9B,GAAQ8B,CAAG,GACjBjF,EAAE,IAAIiF,EAAI,CAAC,GACXjF,EAAE,IAAIiF,EAAI,CAAC,GACXjF,EAAE,IAAIiF,EAAI,CAAC;AAAA,EACb;AACF;AACA,SAASC,GAAMlF,GAAGmF,GAAO;AACvB,SAAOnF,KAAI,OAAO,OAAOmF,KAAS,CAAA,GAAInF,CAAC;AACzC;AACA,SAASoF,GAAWC,GAAO;AACzB,MAAIrF,IAAI,EAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAG;AACjC,SAAI,MAAM,QAAQqF,CAAK,IACjBA,EAAM,UAAU,MAClBrF,IAAI,EAAC,GAAGqF,EAAM,CAAC,GAAG,GAAGA,EAAM,CAAC,GAAG,GAAGA,EAAM,CAAC,GAAG,GAAG,IAAG,GAC9CA,EAAM,SAAS,MACjBrF,EAAE,IAAIyB,GAAI4D,EAAM,CAAC,CAAC,OAItBrF,IAAIkF,GAAMG,GAAO,EAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAC,CAAC,GACzCrF,EAAE,IAAIyB,GAAIzB,EAAE,CAAC,IAERA;AACT;AACA,SAASsF,GAAcnD,GAAK;AAC1B,SAAIA,EAAI,OAAO,CAAC,MAAM,MACbqC,GAASrC,CAAG,IAEdoB,GAASpB,CAAG;AACrB;AACA,MAAMoD,GAAM;AAAA,EACV,YAAYF,GAAO;AACjB,QAAIA,aAAiBE;AACnB,aAAOF;AAET,UAAMG,IAAO,OAAOH;AACpB,QAAIrF;AACJ,IAAIwF,MAAS,WACXxF,IAAIoF,GAAWC,CAAK,IACXG,MAAS,aAClBxF,IAAIkC,GAASmD,CAAK,KAAKf,GAAUe,CAAK,KAAKC,GAAcD,CAAK,IAEhE,KAAK,OAAOrF,GACZ,KAAK,SAAS,CAAC,CAACA;AAAA,EAClB;AAAA,EACA,IAAI,QAAQ;AACV,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,MAAM;AACR,QAAIA,IAAIkF,GAAM,KAAK,IAAI;AACvB,WAAIlF,MACFA,EAAE,IAAI0B,GAAI1B,EAAE,CAAC,IAERA;AAAA,EACT;AAAA,EACA,IAAI,IAAIyF,GAAK;AACX,SAAK,OAAOL,GAAWK,CAAG;AAAA,EAC5B;AAAA,EACA,YAAY;AACV,WAAO,KAAK,SAAShB,GAAU,KAAK,IAAI,IAAI;AAAA,EAC9C;AAAA,EACA,YAAY;AACV,WAAO,KAAK,SAASlC,GAAU,KAAK,IAAI,IAAI;AAAA,EAC9C;AAAA,EACA,YAAY;AACV,WAAO,KAAK,SAASqB,GAAU,KAAK,IAAI,IAAI;AAAA,EAC9C;AAAA,EACA,IAAI8B,GAAOC,GAAQ;AACjB,QAAID,GAAO;AACT,YAAME,IAAK,KAAK,KACVC,IAAKH,EAAM;AACjB,UAAII;AACJ,YAAMpG,IAAIiG,MAAWG,IAAK,MAAMH,GAC1B/C,IAAI,IAAIlD,IAAI,GACZF,IAAIoG,EAAG,IAAIC,EAAG,GACdE,MAAOnD,IAAIpD,MAAM,KAAKoD,KAAKA,IAAIpD,MAAM,IAAIoD,IAAIpD,MAAM,KAAK;AAC9D,MAAAsG,IAAK,IAAIC,GACTH,EAAG,IAAI,MAAOG,IAAKH,EAAG,IAAIE,IAAKD,EAAG,IAAI,KACtCD,EAAG,IAAI,MAAOG,IAAKH,EAAG,IAAIE,IAAKD,EAAG,IAAI,KACtCD,EAAG,IAAI,MAAOG,IAAKH,EAAG,IAAIE,IAAKD,EAAG,IAAI,KACtCD,EAAG,IAAIlG,IAAIkG,EAAG,KAAK,IAAIlG,KAAKmG,EAAG,GAC/B,KAAK,MAAMD;AAAA,IACb;AACA,WAAO;AAAA,EACT;AAAA,EACA,YAAYF,GAAO7G,GAAG;AACpB,WAAI6G,MACF,KAAK,OAAOd,GAAY,KAAK,MAAMc,EAAM,MAAM7G,CAAC,IAE3C;AAAA,EACT;AAAA,EACA,QAAQ;AACN,WAAO,IAAI0G,GAAM,KAAK,GAAG;AAAA,EAC3B;AAAA,EACA,MAAM/F,GAAG;AACP,gBAAK,KAAK,IAAIiC,GAAIjC,CAAC,GACZ;AAAA,EACT;AAAA,EACA,QAAQwF,GAAO;AACb,UAAMnC,IAAM,KAAK;AACjB,WAAAA,EAAI,KAAK,IAAImC,GACN;AAAA,EACT;AAAA,EACA,YAAY;AACV,UAAMnC,IAAM,KAAK,MACXmD,IAAM1E,GAAMuB,EAAI,IAAI,MAAMA,EAAI,IAAI,OAAOA,EAAI,IAAI,IAAI;AAC3D,WAAAA,EAAI,IAAIA,EAAI,IAAIA,EAAI,IAAImD,GACjB;AAAA,EACT;AAAA,EACA,QAAQhB,GAAO;AACb,UAAMnC,IAAM,KAAK;AACjB,WAAAA,EAAI,KAAK,IAAImC,GACN;AAAA,EACT;AAAA,EACA,SAAS;AACP,UAAMhF,IAAI,KAAK;AACf,WAAAA,EAAE,IAAI,MAAMA,EAAE,GACdA,EAAE,IAAI,MAAMA,EAAE,GACdA,EAAE,IAAI,MAAMA,EAAE,GACP;AAAA,EACT;AAAA,EACA,QAAQgF,GAAO;AACb,WAAAD,GAAO,KAAK,MAAM,GAAGC,CAAK,GACnB;AAAA,EACT;AAAA,EACA,OAAOA,GAAO;AACZ,WAAAD,GAAO,KAAK,MAAM,GAAG,CAACC,CAAK,GACpB;AAAA,EACT;AAAA,EACA,SAASA,GAAO;AACd,WAAAD,GAAO,KAAK,MAAM,GAAGC,CAAK,GACnB;AAAA,EACT;AAAA,EACA,WAAWA,GAAO;AAChB,WAAAD,GAAO,KAAK,MAAM,GAAG,CAACC,CAAK,GACpB;AAAA,EACT;AAAA,EACA,OAAOrB,GAAK;AACV,WAAAD,GAAO,KAAK,MAAMC,CAAG,GACd;AAAA,EACT;AACF;ACtkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYI,SAASsC,KAAO;AACT;AAGP,MAAMC,KAAO,uBAAI;AACjB,MAAIC,IAAK;AACT,SAAO,MAAIA;AACf,GAAC;AAKG,SAASC,EAAcC,GAAO;AAC9B,SAAOA,KAAU;AACrB;AAKI,SAASC,EAAQD,GAAO;AACxB,MAAI,MAAM,WAAW,MAAM,QAAQA,CAAK;AACpC,WAAO;AAEX,QAAMb,IAAO,OAAO,UAAU,SAAS,KAAKa,CAAK;AACjD,SAAIb,EAAK,MAAM,GAAG,CAAC,MAAM,aAAaA,EAAK,MAAM,EAAE,MAAM;AAI7D;AAKI,SAASe,EAASF,GAAO;AACzB,SAAOA,MAAU,QAAQ,OAAO,UAAU,SAAS,KAAKA,CAAK,MAAM;AACvE;AAII,SAASG,EAAeH,GAAO;AAC/B,UAAQ,OAAOA,KAAU,YAAYA,aAAiB,WAAW,SAAS,CAACA,CAAK;AACpF;AAKI,SAASI,GAAgBJ,GAAOK,GAAc;AAC9C,SAAOF,EAAeH,CAAK,IAAIA,IAAQK;AAC3C;AAKI,SAASC,EAAeN,GAAOK,GAAc;AAC7C,SAAO,OAAOL,IAAU,MAAcK,IAAeL;AACzD;AACA,MAAMO,KAAe,CAACP,GAAOQ,MAAY,OAAOR,KAAU,YAAYA,EAAM,SAAS,GAAG,IAAI,WAAWA,CAAK,IAAI,MAAM,CAACA,IAAQQ,GACzHC,KAAc,CAACT,GAAOQ,MAAY,OAAOR,KAAU,YAAYA,EAAM,SAAS,GAAG,IAAI,WAAWA,CAAK,IAAI,MAAMQ,IAAY,CAACR;AAO9H,SAASU,EAASC,GAAIC,GAAMC,GAAS;AACrC,MAAIF,KAAM,OAAOA,EAAG,QAAS;AACzB,WAAOA,EAAG,MAAME,GAASD,CAAI;AAErC;AACA,SAASE,EAAKC,GAAUJ,GAAIE,GAASG,GAAS;AAC1C,MAAIjI,GAAGgD,GAAK6B;AACZ,MAAIqC,EAAQc,CAAQ;AAOZ,SANJhF,IAAMgF,EAAS,QAMPhI,IAAI,GAAGA,IAAIgD,GAAKhD;AAChB,MAAA4H,EAAG,KAAKE,GAASE,EAAShI,CAAC,GAAGA,CAAC;AAAA,WAGhCmH,EAASa,CAAQ;AAGxB,SAFAnD,IAAO,OAAO,KAAKmD,CAAQ,GAC3BhF,IAAM6B,EAAK,QACP7E,IAAI,GAAGA,IAAIgD,GAAKhD;AAChB,MAAA4H,EAAG,KAAKE,GAASE,EAASnD,EAAK7E,CAAC,CAAC,GAAG6E,EAAK7E,CAAC,CAAC;AAGvD;AAMI,SAASkI,GAAeC,GAAIC,GAAI;AAChC,MAAIpI,GAAGqI,GAAMC,GAAIC;AACjB,MAAI,CAACJ,KAAM,CAACC,KAAMD,EAAG,WAAWC,EAAG;AAC/B,WAAO;AAEX,OAAIpI,IAAI,GAAGqI,IAAOF,EAAG,QAAQnI,IAAIqI,GAAM,EAAErI;AAGrC,QAFAsI,IAAKH,EAAGnI,CAAC,GACTuI,IAAKH,EAAGpI,CAAC,GACLsI,EAAG,iBAAiBC,EAAG,gBAAgBD,EAAG,UAAUC,EAAG;AACvD,aAAO;AAGf,SAAO;AACX;AAII,SAASzC,GAAM0C,GAAQ;AACvB,MAAItB,EAAQsB,CAAM;AACd,WAAOA,EAAO,IAAI1C,EAAK;AAE3B,MAAIqB,EAASqB,CAAM,GAAG;AAClB,UAAMC,IAAS,uBAAO,OAAO,IAAI,GAC3B5D,IAAO,OAAO,KAAK2D,CAAM,GACzBE,IAAO7D,EAAK;AAClB,QAAIjD,IAAI;AACR,WAAMA,IAAI8G,GAAM,EAAE9G;AACd,MAAA6G,EAAO5D,EAAKjD,CAAC,CAAC,IAAIkE,GAAM0C,EAAO3D,EAAKjD,CAAC,CAAC,CAAC;AAE3C,WAAO6G;AAAA,EACX;AACA,SAAOD;AACX;AACA,SAASG,GAAWC,GAAK;AACrB,SAAO;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,EACR,EAAM,QAAQA,CAAG,MAAM;AACvB;AAKI,SAASC,GAAQD,GAAKH,GAAQD,GAAQM,GAAS;AAC/C,MAAI,CAACH,GAAWC,CAAG;AACf;AAEJ,QAAMG,IAAON,EAAOG,CAAG,GACjBI,IAAOR,EAAOI,CAAG;AACvB,EAAIzB,EAAS4B,CAAI,KAAK5B,EAAS6B,CAAI,IAE/BC,GAAMF,GAAMC,GAAMF,CAAO,IAEzBL,EAAOG,CAAG,IAAI9C,GAAMkD,CAAI;AAEhC;AACA,SAASC,GAAMR,GAAQD,GAAQM,GAAS;AACpC,QAAMI,IAAUhC,EAAQsB,CAAM,IAAIA,IAAS;AAAA,IACvCA;AAAA,EACR,GACUH,IAAOa,EAAQ;AACrB,MAAI,CAAC/B,EAASsB,CAAM;AAChB,WAAOA;AAEX,EAAAK,IAAUA,KAAW,CAAA;AACrB,QAAMK,IAASL,EAAQ,UAAUD;AACjC,MAAIO;AACJ,WAAQpJ,IAAI,GAAGA,IAAIqI,GAAM,EAAErI,GAAE;AAEzB,QADAoJ,IAAUF,EAAQlJ,CAAC,GACf,CAACmH,EAASiC,CAAO;AACjB;AAEJ,UAAMvE,IAAO,OAAO,KAAKuE,CAAO;AAChC,aAAQxH,IAAI,GAAG8G,IAAO7D,EAAK,QAAQjD,IAAI8G,GAAM,EAAE9G;AAC3C,MAAAuH,EAAOtE,EAAKjD,CAAC,GAAG6G,GAAQW,GAASN,CAAO;AAAA,EAEhD;AACA,SAAOL;AACX;AACA,SAASY,GAAQZ,GAAQD,GAAQ;AAE7B,SAAOS,GAAMR,GAAQD,GAAQ;AAAA,IACzB,QAAQc;AAAA,EAChB,CAAK;AACL;AAII,SAASA,GAAUV,GAAKH,GAAQD,GAAQ;AACxC,MAAI,CAACG,GAAWC,CAAG;AACf;AAEJ,QAAMG,IAAON,EAAOG,CAAG,GACjBI,IAAOR,EAAOI,CAAG;AACvB,EAAIzB,EAAS4B,CAAI,KAAK5B,EAAS6B,CAAI,IAC/BK,GAAQN,GAAMC,CAAI,IACV,OAAO,UAAU,eAAe,KAAKP,GAAQG,CAAG,MACxDH,EAAOG,CAAG,IAAI9C,GAAMkD,CAAI;AAEhC;AASA,MAAMO,KAAe;AAAA;AAAA,EAEjB,IAAI,CAAC3I,MAAIA;AAAA;AAAA,EAET,GAAG,CAAChB,MAAIA,EAAE;AAAA,EACV,GAAG,CAACA,MAAIA,EAAE;AACd;AAGI,SAAS4J,GAAUZ,GAAK;AACxB,QAAMa,IAAQb,EAAI,MAAM,GAAG,GACrB/D,IAAO,CAAA;AACb,MAAIgB,IAAM;AACV,aAAW6D,KAAQD;AACf,IAAA5D,KAAO6D,GACH7D,EAAI,SAAS,IAAI,IACjBA,IAAMA,EAAI,MAAM,GAAG,EAAE,IAAI,OAEzBhB,EAAK,KAAKgB,CAAG,GACbA,IAAM;AAGd,SAAOhB;AACX;AACA,SAAS8E,GAAgBf,GAAK;AAC1B,QAAM/D,IAAO2E,GAAUZ,CAAG;AAC1B,SAAO,CAACvC,MAAM;AACV,eAAWzE,KAAKiD,GAAK;AACjB,UAAIjD,MAAM;AACN;AAEJ,MAAAyE,IAAMA,KAAOA,EAAIzE,CAAC;AAAA,IACtB;AACA,WAAOyE;AAAA,EACX;AACJ;AACA,SAASuD,GAAiBvD,GAAKuC,GAAK;AAEhC,UADiBW,GAAaX,CAAG,MAAMW,GAAaX,CAAG,IAAIe,GAAgBf,CAAG,IAC9DvC,CAAG;AACvB;AAGI,SAASwD,GAAY9G,GAAK;AAC1B,SAAOA,EAAI,OAAO,CAAC,EAAE,YAAW,IAAKA,EAAI,MAAM,CAAC;AACpD;AACA,MAAM+G,KAAU,CAAC7C,MAAQ,OAAOA,IAAU,KACpC8C,KAAa,CAAC9C,MAAQ,OAAOA,KAAU,YAEvC+C,KAAY,CAAC5J,GAAGM,MAAI;AACtB,MAAIN,EAAE,SAASM,EAAE;AACb,WAAO;AAEX,aAAWuJ,KAAQ7J;AACf,QAAI,CAACM,EAAE,IAAIuJ,CAAI;AACX,aAAO;AAGf,SAAO;AACX;AAII,SAASC,GAAcxK,GAAG;AAC1B,SAAOA,EAAE,SAAS,aAAaA,EAAE,SAAS,WAAWA,EAAE,SAAS;AACpE;AAKI,MAAMyK,IAAK,KAAK,IACdC,IAAM,IAAID,GACVE,KAAQD,IAAMD,GACdG,KAAW,OAAO,mBAClBC,KAAcJ,IAAK,KACnBK,IAAUL,IAAK,GACfM,KAAaN,IAAK,GAClBO,KAAgBP,IAAK,IAAI,GACzBQ,KAAQ,KAAK,OACbC,KAAO,KAAK;AAClB,SAASC,GAAa5J,GAAGN,GAAGmK,GAAS;AACjC,SAAO,KAAK,IAAI7J,IAAIN,CAAC,IAAImK;AAC7B;AAGI,SAASC,GAAQC,GAAO;AACxB,QAAMC,IAAe,KAAK,MAAMD,CAAK;AACrC,EAAAA,IAAQH,GAAaG,GAAOC,GAAcD,IAAQ,GAAI,IAAIC,IAAeD;AACzE,QAAME,IAAY,KAAK,IAAI,IAAI,KAAK,MAAMP,GAAMK,CAAK,CAAC,CAAC,GACjDG,IAAWH,IAAQE;AAEzB,UADqBC,KAAY,IAAI,IAAIA,KAAY,IAAI,IAAIA,KAAY,IAAI,IAAI,MAC3DD;AAC1B;AAII,SAASE,GAAWnE,GAAO;AAC3B,QAAMoE,IAAS,CAAA,GACTC,IAAO,KAAK,KAAKrE,CAAK;AAC5B,MAAIjH;AACJ,OAAIA,IAAI,GAAGA,IAAIsL,GAAMtL;AACjB,IAAIiH,IAAQjH,MAAM,MACdqL,EAAO,KAAKrL,CAAC,GACbqL,EAAO,KAAKpE,IAAQjH,CAAC;AAG7B,SAAIsL,OAAUA,IAAO,MACjBD,EAAO,KAAKC,CAAI,GAEpBD,EAAO,KAAK,CAACjL,GAAGM,MAAIN,IAAIM,CAAC,EAAE,IAAG,GACvB2K;AACX;AAGI,SAASE,GAAexL,GAAG;AAC3B,SAAO,OAAOA,KAAM,YAAY,OAAOA,KAAM,YAAYA,MAAM,QAAQ,EAAE,OAAO,eAAeA,KAAK,cAAcA,KAAK,aAAaA;AACxI;AACA,SAASyL,GAASzL,GAAG;AACjB,SAAO,CAACwL,GAAexL,CAAC,KAAK,CAAC,MAAM,WAAWA,CAAC,CAAC,KAAK,SAASA,CAAC;AACpE;AACA,SAAS0L,GAAYxK,GAAG6J,GAAS;AAC7B,QAAMY,IAAU,KAAK,MAAMzK,CAAC;AAC5B,SAAOyK,IAAUZ,KAAW7J,KAAKyK,IAAUZ,KAAW7J;AAC1D;AAGI,SAAS0K,GAAmBC,GAAOnD,GAAQoD,GAAU;AACrD,MAAI7L,GAAGqI,GAAMpB;AACb,OAAIjH,IAAI,GAAGqI,IAAOuD,EAAM,QAAQ5L,IAAIqI,GAAMrI;AACtC,IAAAiH,IAAQ2E,EAAM5L,CAAC,EAAE6L,CAAQ,GACpB,MAAM5E,CAAK,MACZwB,EAAO,MAAM,KAAK,IAAIA,EAAO,KAAKxB,CAAK,GACvCwB,EAAO,MAAM,KAAK,IAAIA,EAAO,KAAKxB,CAAK;AAGnD;AACA,SAAS6E,GAAUC,GAAS;AACxB,SAAOA,KAAW5B,IAAK;AAC3B;AACA,SAAS6B,GAAUC,GAAS;AACxB,SAAOA,KAAW,MAAM9B;AAC5B;AAOI,SAAS+B,GAAejL,GAAG;AAC3B,MAAI,CAACmG,EAAenG,CAAC;AACjB;AAEJ,MAAIvB,IAAI,GACJY,IAAI;AACR,SAAM,KAAK,MAAMW,IAAIvB,CAAC,IAAIA,MAAMuB;AAC5B,IAAAvB,KAAK,IACLY;AAEJ,SAAOA;AACX;AAEA,SAAS6L,GAAkBC,GAAaC,GAAY;AAChD,QAAMC,IAAsBD,EAAW,IAAID,EAAY,GACjDG,IAAsBF,EAAW,IAAID,EAAY,GACjDI,IAA2B,KAAK,KAAKF,IAAsBA,IAAsBC,IAAsBA,CAAmB;AAChI,MAAIE,IAAQ,KAAK,MAAMF,GAAqBD,CAAmB;AAC/D,SAAIG,IAAQ,OAAOtC,MACfsC,KAASrC,IAEN;AAAA,IACH,OAAAqC;AAAA,IACA,UAAUD;AAAA,EAClB;AACA;AACA,SAASE,GAAsBC,GAAKC,GAAK;AACrC,SAAO,KAAK,KAAK,KAAK,IAAIA,EAAI,IAAID,EAAI,GAAG,CAAC,IAAI,KAAK,IAAIC,EAAI,IAAID,EAAI,GAAG,CAAC,CAAC;AAC5E;AAII,SAASE,GAAWzM,GAAGM,GAAG;AAC1B,UAAQN,IAAIM,IAAI2J,MAASD,IAAMD;AACnC;AAII,SAAS2C,EAAgB1M,GAAG;AAC5B,UAAQA,IAAIgK,IAAMA,KAAOA;AAC7B;AAGI,SAAS2C,GAAcN,GAAOO,GAAOC,GAAKC,GAAuB;AACjE,QAAM9M,IAAI0M,EAAgBL,CAAK,GACzB9M,IAAImN,EAAgBE,CAAK,GACzBtN,IAAIoN,EAAgBG,CAAG,GACvBE,IAAeL,EAAgBnN,IAAIS,CAAC,GACpCgN,IAAaN,EAAgBpN,IAAIU,CAAC,GAClCiN,IAAeP,EAAgB1M,IAAIT,CAAC,GACpC2N,IAAaR,EAAgB1M,IAAIV,CAAC;AACxC,SAAOU,MAAMT,KAAKS,MAAMV,KAAKwN,KAAyBvN,MAAMD,KAAKyN,IAAeC,KAAcC,IAAeC;AACjH;AAOI,SAASC,EAAYtG,GAAOpD,GAAKF,GAAK;AACtC,SAAO,KAAK,IAAIE,GAAK,KAAK,IAAIF,GAAKsD,CAAK,CAAC;AAC7C;AAII,SAASuG,GAAYvG,GAAO;AAC5B,SAAOsG,EAAYtG,GAAO,QAAQ,KAAK;AAC3C;AAOI,SAASwG,GAAWxG,GAAO+F,GAAOC,GAAKnC,IAAU,MAAM;AACvD,SAAO7D,KAAS,KAAK,IAAI+F,GAAOC,CAAG,IAAInC,KAAW7D,KAAS,KAAK,IAAI+F,GAAOC,CAAG,IAAInC;AACtF;AAEA,SAAS4C,GAAQC,GAAO1G,GAAO2G,GAAK;AAChC,EAAAA,IAAMA,MAAQ,CAACC,MAAQF,EAAME,CAAK,IAAI5G;AACtC,MAAI6G,IAAKH,EAAM,SAAS,GACpBI,IAAK,GACLC;AACJ,SAAMF,IAAKC,IAAK;AACZ,IAAAC,IAAMD,IAAKD,KAAM,GACbF,EAAII,CAAG,IACPD,IAAKC,IAELF,IAAKE;AAGb,SAAO;AAAA,IACH,IAAAD;AAAA,IACA,IAAAD;AAAA,EACR;AACA;AAQI,MAAMG,KAAe,CAACN,GAAO/E,GAAK3B,GAAOiH,MAAOR,GAAQC,GAAO1G,GAAOiH,IAAO,CAACL,MAAQ;AAClF,QAAMM,IAAKR,EAAME,CAAK,EAAEjF,CAAG;AAC3B,SAAOuF,IAAKlH,KAASkH,MAAOlH,KAAS0G,EAAME,IAAQ,CAAC,EAAEjF,CAAG,MAAM3B;AACnE,IAAI,CAAC4G,MAAQF,EAAME,CAAK,EAAEjF,CAAG,IAAI3B,CAAK,GAOhCmH,KAAgB,CAACT,GAAO/E,GAAK3B,MAAQyG,GAAQC,GAAO1G,GAAO,CAAC4G,MAAQF,EAAME,CAAK,EAAEjF,CAAG,KAAK3B,CAAK;AAOpG,SAASoH,GAAeC,GAAQzK,GAAKF,GAAK;AAC1C,MAAIqJ,IAAQ,GACRC,IAAMqB,EAAO;AACjB,SAAMtB,IAAQC,KAAOqB,EAAOtB,CAAK,IAAInJ;AACjC,IAAAmJ;AAEJ,SAAMC,IAAMD,KAASsB,EAAOrB,IAAM,CAAC,IAAItJ;AACnC,IAAAsJ;AAEJ,SAAOD,IAAQ,KAAKC,IAAMqB,EAAO,SAASA,EAAO,MAAMtB,GAAOC,CAAG,IAAIqB;AACzE;AACA,MAAMC,KAAc;AAAA,EAChB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AACA,SAASC,GAAkB5C,GAAO6C,GAAU;AACxC,MAAI7C,EAAM,UAAU;AAChB,IAAAA,EAAM,SAAS,UAAU,KAAK6C,CAAQ;AACtC;AAAA,EACJ;AACA,SAAO,eAAe7C,GAAO,YAAY;AAAA,IACrC,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,OAAO;AAAA,MACH,WAAW;AAAA,QACP6C;AAAA,MAChB;AAAA,IACA;AAAA,EACA,CAAK,GACDF,GAAY,QAAQ,CAAC3F,MAAM;AACvB,UAAM8F,IAAS,YAAY7E,GAAYjB,CAAG,GACpC+F,IAAO/C,EAAMhD,CAAG;AACtB,WAAO,eAAegD,GAAOhD,GAAK;AAAA,MAC9B,cAAc;AAAA,MACd,YAAY;AAAA,MACZ,SAAUf,GAAM;AACZ,cAAM+G,IAAMD,EAAK,MAAM,MAAM9G,CAAI;AACjC,eAAA+D,EAAM,SAAS,UAAU,QAAQ,CAACiD,MAAS;AACvC,UAAI,OAAOA,EAAOH,CAAM,KAAM,cAC1BG,EAAOH,CAAM,EAAE,GAAG7G,CAAI;AAAA,QAE9B,CAAC,GACM+G;AAAA,MACX;AAAA,IACZ,CAAS;AAAA,EACL,CAAC;AACL;AACA,SAASE,GAAoBlD,GAAO6C,GAAU;AAC1C,QAAMM,IAAOnD,EAAM;AACnB,MAAI,CAACmD;AACD;AAEJ,QAAMC,IAAYD,EAAK,WACjBlB,IAAQmB,EAAU,QAAQP,CAAQ;AAIxC,EAHIZ,MAAU,MACVmB,EAAU,OAAOnB,GAAO,CAAC,GAEzB,EAAAmB,EAAU,SAAS,OAGvBT,GAAY,QAAQ,CAAC3F,MAAM;AACvB,WAAOgD,EAAMhD,CAAG;AAAA,EACpB,CAAC,GACD,OAAOgD,EAAM;AACjB;AAGI,SAASqD,GAAaC,GAAO;AAC7B,QAAMC,IAAM,IAAI,IAAID,CAAK;AACzB,SAAIC,EAAI,SAASD,EAAM,SACZA,IAEJ,MAAM,KAAKC,CAAG;AACzB;AAOG,MAAMC,KAAmB,WAAW;AACnC,SAAI,OAAO,SAAW,MACX,SAASzH,GAAU;AACtB,WAAOA,EAAQ;AAAA,EACnB,IAEG,OAAO;AAClB,EAAC;AAIG,SAAS0H,GAAUzH,GAAIE,GAAS;AAChC,MAAIwH,IAAY,CAAA,GACZC,IAAU;AACd,SAAO,YAAY1H,GAAM;AAErB,IAAAyH,IAAYzH,GACP0H,MACDA,IAAU,IACVH,GAAiB,KAAK,QAAQ,MAAI;AAC9B,MAAAG,IAAU,IACV3H,EAAG,MAAME,GAASwH,CAAS;AAAA,IAC/B,CAAC;AAAA,EAET;AACJ;AAGI,SAASE,GAAS5H,GAAI6H,GAAO;AAC7B,MAAIC;AACJ,SAAO,YAAY7H,GAAM;AACrB,WAAI4H,KACA,aAAaC,CAAO,GACpBA,IAAU,WAAW9H,GAAI6H,GAAO5H,CAAI,KAEpCD,EAAG,MAAM,MAAMC,CAAI,GAEhB4H;AAAA,EACX;AACJ;AAII,MAAME,KAAqB,CAACC,MAAQA,MAAU,UAAU,SAASA,MAAU,QAAQ,UAAU,UAIvFC,IAAiB,CAACD,GAAO5C,GAAOC,MAAM2C,MAAU,UAAU5C,IAAQ4C,MAAU,QAAQ3C,KAAOD,IAAQC,KAAO,GAI1G6C,KAAS,CAACF,GAAOG,GAAMC,GAAOC,MAE7BL,OADOK,IAAM,SAAS,WACJD,IAAQJ,MAAU,YAAYG,IAAOC,KAAS,IAAID;AAK3E,SAASG,GAAiCC,GAAMC,GAAQC,GAAoB;AAC5E,QAAMC,IAAaF,EAAO;AAC1B,MAAIpD,IAAQ,GACRuD,IAAQD;AACZ,MAAIH,EAAK,SAAS;AACd,UAAM,EAAE,QAAAK,GAAS,QAAAC,GAAS,SAAAC,EAAO,IAAMP,GACjCQ,IAAWR,EAAK,WAAUA,EAAK,QAAQ,UAAUA,EAAK,QAAQ,QAAQ,WAAkB,MACxFS,IAAOJ,EAAO,MACd,EAAE,KAAA3M,GAAM,KAAAF,GAAM,YAAAkN,GAAa,YAAAC,EAAU,IAAMN,EAAO,cAAa;AACrE,QAAIK,GAAY;AAIZ,UAHA7D,IAAQ,KAAK;AAAA;AAAA,QACbiB,GAAayC,GAASE,GAAM/M,CAAG,EAAE;AAAA;AAAA,QACjCwM,IAAqBC,IAAarC,GAAamC,GAAQQ,GAAMJ,EAAO,iBAAiB3M,CAAG,CAAC,EAAE;AAAA,MAAE,GACzF8M,GAAU;AACV,cAAMI,IAAsBL,EAAQ,MAAM,GAAG1D,IAAQ,CAAC,EAAE,QAAO,EAAG,UAAU,CAACgE,MAAQ,CAAChK,EAAcgK,EAAMP,EAAO,IAAI,CAAC,CAAC;AACvH,QAAAzD,KAAS,KAAK,IAAI,GAAG+D,CAAmB;AAAA,MAC5C;AACA,MAAA/D,IAAQO,EAAYP,GAAO,GAAGsD,IAAa,CAAC;AAAA,IAChD;AACA,QAAIQ,GAAY;AACZ,UAAI7D,IAAM,KAAK;AAAA;AAAA,QACfgB,GAAayC,GAASF,EAAO,MAAM7M,GAAK,EAAI,EAAE,KAAK;AAAA;AAAA,QACnD0M,IAAqB,IAAIpC,GAAamC,GAAQQ,GAAMJ,EAAO,iBAAiB7M,CAAG,GAAG,EAAI,EAAE,KAAK;AAAA,MAAC;AAC9F,UAAIgN,GAAU;AACV,cAAMM,IAAsBP,EAAQ,MAAMzD,IAAM,CAAC,EAAE,UAAU,CAAC+D,MAAQ,CAAChK,EAAcgK,EAAMP,EAAO,IAAI,CAAC,CAAC;AACxG,QAAAxD,KAAO,KAAK,IAAI,GAAGgE,CAAmB;AAAA,MAC1C;AACA,MAAAV,IAAQhD,EAAYN,GAAKD,GAAOsD,CAAU,IAAItD;AAAA,IAClD;AACI,MAAAuD,IAAQD,IAAatD;AAAA,EAE7B;AACA,SAAO;AAAA,IACH,OAAAA;AAAA,IACA,OAAAuD;AAAA,EACR;AACA;AAMI,SAASW,GAAoBf,GAAM;AACnC,QAAM,EAAE,QAAAgB,GAAS,QAAAC,GAAS,cAAAC,EAAY,IAAMlB,GACtCmB,IAAY;AAAA,IACd,MAAMH,EAAO;AAAA,IACb,MAAMA,EAAO;AAAA,IACb,MAAMC,EAAO;AAAA,IACb,MAAMA,EAAO;AAAA,EACrB;AACI,MAAI,CAACC;AACD,WAAAlB,EAAK,eAAemB,GACb;AAEX,QAAMC,IAAUF,EAAa,SAASF,EAAO,OAAOE,EAAa,SAASF,EAAO,OAAOE,EAAa,SAASD,EAAO,OAAOC,EAAa,SAASD,EAAO;AACzJ,gBAAO,OAAOC,GAAcC,CAAS,GAC9BC;AACX;AAEA,MAAMC,KAAS,CAAC/R,MAAIA,MAAM,KAAKA,MAAM,GAC/BgS,KAAY,CAAChS,GAAGE,GAAGW,MAAI,EAAE,KAAK,IAAI,GAAG,MAAMb,KAAK,EAAE,IAAI,KAAK,KAAKA,IAAIE,KAAKyK,IAAM9J,CAAC,IAChFoR,KAAa,CAACjS,GAAGE,GAAGW,MAAI,KAAK,IAAI,GAAG,MAAMb,CAAC,IAAI,KAAK,KAAKA,IAAIE,KAAKyK,IAAM9J,CAAC,IAAI,GAKzEqR,KAAU;AAAA,EAChB,QAAQ,CAAClS,MAAIA;AAAA,EACb,YAAY,CAACA,MAAIA,IAAIA;AAAA,EACrB,aAAa,CAACA,MAAI,CAACA,KAAKA,IAAI;AAAA,EAC5B,eAAe,CAACA,OAAKA,KAAK,OAAO,IAAI,MAAMA,IAAIA,IAAI,QAAQ,EAAEA,KAAKA,IAAI,KAAK;AAAA,EAC3E,aAAa,CAACA,MAAIA,IAAIA,IAAIA;AAAA,EAC1B,cAAc,CAACA,OAAKA,KAAK,KAAKA,IAAIA,IAAI;AAAA,EACtC,gBAAgB,CAACA,OAAKA,KAAK,OAAO,IAAI,MAAMA,IAAIA,IAAIA,IAAI,QAAQA,KAAK,KAAKA,IAAIA,IAAI;AAAA,EAClF,aAAa,CAACA,MAAIA,IAAIA,IAAIA,IAAIA;AAAA,EAC9B,cAAc,CAACA,MAAI,GAAGA,KAAK,KAAKA,IAAIA,IAAIA,IAAI;AAAA,EAC5C,gBAAgB,CAACA,OAAKA,KAAK,OAAO,IAAI,MAAMA,IAAIA,IAAIA,IAAIA,IAAI,SAASA,KAAK,KAAKA,IAAIA,IAAIA,IAAI;AAAA,EAC3F,aAAa,CAACA,MAAIA,IAAIA,IAAIA,IAAIA,IAAIA;AAAA,EAClC,cAAc,CAACA,OAAKA,KAAK,KAAKA,IAAIA,IAAIA,IAAIA,IAAI;AAAA,EAC9C,gBAAgB,CAACA,OAAKA,KAAK,OAAO,IAAI,MAAMA,IAAIA,IAAIA,IAAIA,IAAIA,IAAI,QAAQA,KAAK,KAAKA,IAAIA,IAAIA,IAAIA,IAAI;AAAA,EAClG,YAAY,CAACA,MAAI,CAAC,KAAK,IAAIA,IAAI+K,CAAO,IAAI;AAAA,EAC1C,aAAa,CAAC/K,MAAI,KAAK,IAAIA,IAAI+K,CAAO;AAAA,EACtC,eAAe,CAAC/K,MAAI,QAAQ,KAAK,IAAI0K,IAAK1K,CAAC,IAAI;AAAA,EAC/C,YAAY,CAACA,MAAIA,MAAM,IAAI,IAAI,KAAK,IAAI,GAAG,MAAMA,IAAI,EAAE;AAAA,EACvD,aAAa,CAACA,MAAIA,MAAM,IAAI,IAAI,CAAC,KAAK,IAAI,GAAG,MAAMA,CAAC,IAAI;AAAA,EACxD,eAAe,CAACA,MAAI+R,GAAO/R,CAAC,IAAIA,IAAIA,IAAI,MAAM,MAAM,KAAK,IAAI,GAAG,MAAMA,IAAI,IAAI,EAAE,IAAI,OAAO,CAAC,KAAK,IAAI,GAAG,OAAOA,IAAI,IAAI,EAAE,IAAI;AAAA,EAC7H,YAAY,CAACA,MAAIA,KAAK,IAAIA,IAAI,EAAE,KAAK,KAAK,IAAIA,IAAIA,CAAC,IAAI;AAAA,EACvD,aAAa,CAACA,MAAI,KAAK,KAAK,KAAKA,KAAK,KAAKA,CAAC;AAAA,EAC5C,eAAe,CAACA,OAAKA,KAAK,OAAO,IAAI,QAAQ,KAAK,KAAK,IAAIA,IAAIA,CAAC,IAAI,KAAK,OAAO,KAAK,KAAK,KAAKA,KAAK,KAAKA,CAAC,IAAI;AAAA,EAC9G,eAAe,CAACA,MAAI+R,GAAO/R,CAAC,IAAIA,IAAIgS,GAAUhS,GAAG,OAAO,GAAG;AAAA,EAC3D,gBAAgB,CAACA,MAAI+R,GAAO/R,CAAC,IAAIA,IAAIiS,GAAWjS,GAAG,OAAO,GAAG;AAAA,EAC7D,iBAAkBA,GAAG;AAGjB,WAAO+R,GAAO/R,CAAC,IAAIA,IAAIA,IAAI,MAAM,MAAMgS,GAAUhS,IAAI,GAAG,QAAG,IAAC,IAAI,MAAM,MAAMiS,GAAWjS,IAAI,IAAI,GAAG,QAAG,IAAC;AAAA,EAC1G;AAAA,EACA,WAAYA,GAAG;AAEX,WAAOA,IAAIA,MAAM,UAAI,KAAKA,IAAI;AAAA,EAClC;AAAA,EACA,YAAaA,GAAG;AAEZ,YAAQA,KAAK,KAAKA,MAAM,UAAI,KAAKA,IAAI,WAAK;AAAA,EAC9C;AAAA,EACA,cAAeA,GAAG;AACd,QAAIE,IAAI;AACR,YAAKF,KAAK,OAAO,IACN,OAAOA,IAAIA,OAAOE,KAAK,SAAS,KAAKF,IAAIE,MAE7C,QAAQF,KAAK,KAAKA,OAAOE,KAAK,SAAS,KAAKF,IAAIE,KAAK;AAAA,EAChE;AAAA,EACA,cAAc,CAACF,MAAI,IAAIkS,GAAQ,cAAc,IAAIlS,CAAC;AAAA,EAClD,cAAeA,GAAG;AAGd,WAAIA,IAAI,IAAI,OACD,SAAIA,IAAIA,IAEfA,IAAI,IAAI,OACD,UAAKA,KAAK,MAAM,QAAKA,IAAI,OAEhCA,IAAI,MAAM,OACH,UAAKA,KAAK,OAAO,QAAKA,IAAI,SAE9B,UAAKA,KAAK,QAAQ,QAAKA,IAAI;AAAA,EACtC;AAAA,EACA,iBAAiB,CAACA,MAAIA,IAAI,MAAMkS,GAAQ,aAAalS,IAAI,CAAC,IAAI,MAAMkS,GAAQ,cAAclS,IAAI,IAAI,CAAC,IAAI,MAAM;AACjH;AAEA,SAASmS,GAAoB3K,GAAO;AAChC,MAAIA,KAAS,OAAOA,KAAU,UAAU;AACpC,UAAMb,IAAOa,EAAM,SAAQ;AAC3B,WAAOb,MAAS,4BAA4BA,MAAS;AAAA,EACzD;AACA,SAAO;AACX;AACA,SAASE,GAAMW,GAAO;AAClB,SAAO2K,GAAoB3K,CAAK,IAAIA,IAAQ,IAAId,GAAMc,CAAK;AAC/D;AACA,SAAS4K,GAAc5K,GAAO;AAC1B,SAAO2K,GAAoB3K,CAAK,IAAIA,IAAQ,IAAId,GAAMc,CAAK,EAAE,SAAS,GAAG,EAAE,OAAO,GAAG,EAAE,UAAS;AACpG;AAEA,MAAM6K,KAAU;AAAA,EACZ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,GACMC,KAAS;AAAA,EACX;AAAA,EACA;AAAA,EACA;AACJ;AACA,SAASC,GAAwBC,GAAU;AACvC,EAAAA,EAAS,IAAI,aAAa;AAAA,IACtB,OAAO;AAAA,IACP,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,MAAM;AAAA,EACd,CAAK,GACDA,EAAS,SAAS,aAAa;AAAA,IAC3B,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,aAAa,CAACC,MAAOA,MAAS,gBAAgBA,MAAS,gBAAgBA,MAAS;AAAA,EACxF,CAAK,GACDD,EAAS,IAAI,cAAc;AAAA,IACvB,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,YAAYF;AAAA,IACxB;AAAA,IACQ,SAAS;AAAA,MACL,MAAM;AAAA,MACN,YAAYD;AAAA,IACxB;AAAA,EACA,CAAK,GACDG,EAAS,SAAS,cAAc;AAAA,IAC5B,WAAW;AAAA,EACnB,CAAK,GACDA,EAAS,IAAI,eAAe;AAAA,IACxB,QAAQ;AAAA,MACJ,WAAW;AAAA,QACP,UAAU;AAAA,MAC1B;AAAA,IACA;AAAA,IACQ,QAAQ;AAAA,MACJ,WAAW;AAAA,QACP,UAAU;AAAA,MAC1B;AAAA,IACA;AAAA,IACQ,MAAM;AAAA,MACF,YAAY;AAAA,QACR,QAAQ;AAAA,UACJ,MAAM;AAAA,QAC1B;AAAA,QACgB,SAAS;AAAA,UACL,MAAM;AAAA,UACN,UAAU;AAAA,QAC9B;AAAA,MACA;AAAA,IACA;AAAA,IACQ,MAAM;AAAA,MACF,YAAY;AAAA,QACR,QAAQ;AAAA,UACJ,IAAI;AAAA,QACxB;AAAA,QACgB,SAAS;AAAA,UACL,MAAM;AAAA,UACN,QAAQ;AAAA,UACR,IAAI,CAACrR,MAAIA,IAAI;AAAA,QACjC;AAAA,MACA;AAAA,IACA;AAAA,EACA,CAAK;AACL;AAEA,SAASuR,GAAqBF,GAAU;AACpC,EAAAA,EAAS,IAAI,UAAU;AAAA,IACnB,aAAa;AAAA,IACb,SAAS;AAAA,MACL,KAAK;AAAA,MACL,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,MAAM;AAAA,IAClB;AAAA,EACA,CAAK;AACL;AAEA,MAAMG,KAAY,oBAAI,IAAG;AACzB,SAASC,GAAgBC,GAAQxJ,GAAS;AACtC,EAAAA,IAAUA,KAAW,CAAA;AACrB,QAAMyJ,IAAWD,IAAS,KAAK,UAAUxJ,CAAO;AAChD,MAAI0J,IAAYJ,GAAU,IAAIG,CAAQ;AACtC,SAAKC,MACDA,IAAY,IAAI,KAAK,aAAaF,GAAQxJ,CAAO,GACjDsJ,GAAU,IAAIG,GAAUC,CAAS,IAE9BA;AACX;AACA,SAASC,GAAaC,GAAKJ,GAAQxJ,GAAS;AACxC,SAAOuJ,GAAgBC,GAAQxJ,CAAO,EAAE,OAAO4J,CAAG;AACtD;AAEA,MAAMC,KAAa;AAAA,EAClB,OAAQ1L,GAAO;AACR,WAAOC,EAAQD,CAAK,IAAKA,IAAQ,KAAKA;AAAA,EAC1C;AAAA,EACH,QAAS2L,GAAW/E,GAAOgF,GAAO;AAC3B,QAAID,MAAc;AACd,aAAO;AAEX,UAAMN,IAAS,KAAK,MAAM,QAAQ;AAClC,QAAIQ,GACAC,IAAQH;AACZ,QAAIC,EAAM,SAAS,GAAG;AAClB,YAAMG,IAAU,KAAK,IAAI,KAAK,IAAIH,EAAM,CAAC,EAAE,KAAK,GAAG,KAAK,IAAIA,EAAMA,EAAM,SAAS,CAAC,EAAE,KAAK,CAAC;AAC1F,OAAIG,IAAU,QAAQA,IAAU,UAC5BF,IAAW,eAEfC,IAAQE,GAAeL,GAAWC,CAAK;AAAA,IAC3C;AACA,UAAMK,IAAWvI,GAAM,KAAK,IAAIoI,CAAK,CAAC,GAChCI,IAAa,MAAMD,CAAQ,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,MAAMA,CAAQ,GAAG,EAAE,GAAG,CAAC,GACtFpK,IAAU;AAAA,MACZ,UAAAgK;AAAA,MACA,uBAAuBK;AAAA,MACvB,uBAAuBA;AAAA,IACnC;AACQ,kBAAO,OAAOrK,GAAS,KAAK,QAAQ,MAAM,MAAM,GACzC2J,GAAaG,GAAWN,GAAQxJ,CAAO;AAAA,EAClD;AAAA,EACH,YAAa8J,GAAW/E,GAAOgF,GAAO;AAC/B,QAAID,MAAc;AACd,aAAO;AAEX,UAAMQ,IAASP,EAAMhF,CAAK,EAAE,eAAe+E,IAAY,KAAK,IAAI,IAAI,KAAK,MAAMjI,GAAMiI,CAAS,CAAC,CAAC;AAChG,WAAI;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACZ,EAAU,SAASQ,CAAM,KAAKvF,IAAQ,MAAMgF,EAAM,SAC/BF,GAAW,QAAQ,KAAK,MAAMC,GAAW/E,GAAOgF,CAAK,IAEzD;AAAA,EACX;AACJ;AACA,SAASI,GAAeL,GAAWC,GAAO;AACtC,MAAIE,IAAQF,EAAM,SAAS,IAAIA,EAAM,CAAC,EAAE,QAAQA,EAAM,CAAC,EAAE,QAAQA,EAAM,CAAC,EAAE,QAAQA,EAAM,CAAC,EAAE;AAC3F,SAAI,KAAK,IAAIE,CAAK,KAAK,KAAKH,MAAc,KAAK,MAAMA,CAAS,MAC1DG,IAAQH,IAAY,KAAK,MAAMA,CAAS,IAErCG;AACX;AACC,IAAIM,KAAQ;AAAA,EACT,YAAAV;AACJ;AAEA,SAASW,GAAmBrB,GAAU;AAClC,EAAAA,EAAS,IAAI,SAAS;AAAA,IAClB,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,aAAa;AAAA,IACpB,QAAQ;AAAA,IACD,MAAM;AAAA,IACb,OAAO;AAAA,IACA,MAAM;AAAA,MACF,SAAS;AAAA,MACT,WAAW;AAAA,MACX,iBAAiB;AAAA,MACjB,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,WAAW,CAACsB,GAAMzK,MAAUA,EAAQ;AAAA,MACpC,WAAW,CAACyK,GAAMzK,MAAUA,EAAQ;AAAA,MACpC,QAAQ;AAAA,IACpB;AAAA,IACQ,QAAQ;AAAA,MACJ,SAAS;AAAA,MACT,MAAM,CAAA;AAAA,MACN,YAAY;AAAA,MACZ,OAAO;AAAA,IACnB;AAAA,IACQ,OAAO;AAAA,MACH,SAAS;AAAA,MACT,MAAM;AAAA,MACN,SAAS;AAAA,QACL,KAAK;AAAA,QACL,QAAQ;AAAA,MACxB;AAAA,IACA;AAAA,IACQ,OAAO;AAAA,MACH,aAAa;AAAA,MACb,aAAa;AAAA,MACb,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,SAAS;AAAA,MACT,SAAS;AAAA,MACT,UAAU;AAAA,MACV,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,UAAUuK,GAAM,WAAW;AAAA,MAC3B,OAAO,CAAA;AAAA,MACP,OAAO,CAAA;AAAA,MACP,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,mBAAmB;AAAA,MACnB,eAAe;AAAA,MACf,iBAAiB;AAAA,IAC7B;AAAA,EACA,CAAK,GACDpB,EAAS,MAAM,eAAe,SAAS,IAAI,OAAO,GAClDA,EAAS,MAAM,cAAc,SAAS,IAAI,aAAa,GACvDA,EAAS,MAAM,gBAAgB,SAAS,IAAI,aAAa,GACzDA,EAAS,MAAM,eAAe,SAAS,IAAI,OAAO,GAClDA,EAAS,SAAS,SAAS;AAAA,IACvB,WAAW;AAAA,IACX,aAAa,CAACC,MAAO,CAACA,EAAK,WAAW,QAAQ,KAAK,CAACA,EAAK,WAAW,OAAO,KAAKA,MAAS,cAAcA,MAAS;AAAA,IAChH,YAAY,CAACA,MAAOA,MAAS,gBAAgBA,MAAS,oBAAoBA,MAAS;AAAA,EAC3F,CAAK,GACDD,EAAS,SAAS,UAAU;AAAA,IACxB,WAAW;AAAA,EACnB,CAAK,GACDA,EAAS,SAAS,eAAe;AAAA,IAC7B,aAAa,CAACC,MAAOA,MAAS,qBAAqBA,MAAS;AAAA,IAC5D,YAAY,CAACA,MAAOA,MAAS;AAAA,EACrC,CAAK;AACL;AAEA,MAAMsB,KAAY,uBAAO,OAAO,IAAI,GAC9BC,KAAc,uBAAO,OAAO,IAAI;AACrC,SAASC,GAAWC,GAAM/K,GAAK;AAC5B,MAAI,CAACA;AACD,WAAO+K;AAEX,QAAM9O,IAAO+D,EAAI,MAAM,GAAG;AAC1B,WAAQ5I,IAAI,GAAG,IAAI6E,EAAK,QAAQ7E,IAAI,GAAG,EAAEA,GAAE;AACvC,UAAM4B,IAAIiD,EAAK7E,CAAC;AAChB,IAAA2T,IAAOA,EAAK/R,CAAC,MAAM+R,EAAK/R,CAAC,IAAI,uBAAO,OAAO,IAAI;AAAA,EACnD;AACA,SAAO+R;AACX;AACA,SAASxE,GAAIyE,GAAMC,GAAOvF,GAAQ;AAC9B,SAAI,OAAOuF,KAAU,WACV5K,GAAMyK,GAAWE,GAAMC,CAAK,GAAGvF,CAAM,IAEzCrF,GAAMyK,GAAWE,GAAM,EAAE,GAAGC,CAAK;AAC5C;AACC,MAAMC,GAAS;AAAA,EACZ,YAAYC,GAAcC,GAAU;AAChC,SAAK,YAAY,QACjB,KAAK,kBAAkB,mBACvB,KAAK,cAAc,mBACnB,KAAK,QAAQ,QACb,KAAK,WAAW,CAAA,GAChB,KAAK,mBAAmB,CAACC,MAAUA,EAAQ,MAAM,SAAS,oBAAmB,GAC7E,KAAK,WAAW,CAAA,GAChB,KAAK,SAAS;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACZ,GACQ,KAAK,OAAO;AAAA,MACR,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,QAAQ;AAAA,IACpB,GACQ,KAAK,QAAQ,CAAA,GACb,KAAK,uBAAuB,CAACC,GAAKpL,MAAU+I,GAAc/I,EAAQ,eAAe,GACjF,KAAK,mBAAmB,CAACoL,GAAKpL,MAAU+I,GAAc/I,EAAQ,WAAW,GACzE,KAAK,aAAa,CAACoL,GAAKpL,MAAU+I,GAAc/I,EAAQ,KAAK,GAC7D,KAAK,YAAY,KACjB,KAAK,cAAc;AAAA,MACf,MAAM;AAAA,MACN,WAAW;AAAA,MACX,kBAAkB;AAAA,IAC9B,GACQ,KAAK,sBAAsB,IAC3B,KAAK,UAAU,MACf,KAAK,UAAU,MACf,KAAK,UAAU,IACf,KAAK,UAAU,CAAA,GACf,KAAK,aAAa,IAClB,KAAK,QAAQ,QACb,KAAK,SAAS,CAAA,GACd,KAAK,WAAW,IAChB,KAAK,0BAA0B,IAC/B,KAAK,SAASiL,CAAY,GAC1B,KAAK,MAAMC,CAAS;AAAA,EACxB;AAAA,EACH,IAAIH,GAAOvF,GAAQ;AACZ,WAAOa,GAAI,MAAM0E,GAAOvF,CAAM;AAAA,EAClC;AAAA,EACH,IAAIuF,GAAO;AACJ,WAAOH,GAAW,MAAMG,CAAK;AAAA,EACjC;AAAA,EACH,SAASA,GAAOvF,GAAQ;AACjB,WAAOa,GAAIsE,IAAaI,GAAOvF,CAAM;AAAA,EACzC;AAAA,EACA,SAASuF,GAAOvF,GAAQ;AACpB,WAAOa,GAAIqE,IAAWK,GAAOvF,CAAM;AAAA,EACvC;AAAA,EACH,MAAMuF,GAAO3B,GAAMiC,GAAaC,GAAY;AACrC,UAAMC,IAAcX,GAAW,MAAMG,CAAK,GACpCS,IAAoBZ,GAAW,MAAMS,CAAW,GAChDI,IAAc,MAAMrC;AAC1B,WAAO,iBAAiBmC,GAAa;AAAA,MACjC,CAACE,CAAW,GAAG;AAAA,QACX,OAAOF,EAAYnC,CAAI;AAAA,QACvB,UAAU;AAAA,MAC1B;AAAA,MACY,CAACA,CAAI,GAAG;AAAA,QACJ,YAAY;AAAA,QACZ,MAAO;AACH,gBAAMsC,IAAQ,KAAKD,CAAW,GACxB9L,IAAS6L,EAAkBF,CAAU;AAC3C,iBAAIjN,EAASqN,CAAK,IACP,OAAO,OAAO,IAAI/L,GAAQ+L,CAAK,IAEnCjN,EAAeiN,GAAO/L,CAAM;AAAA,QACvC;AAAA,QACA,IAAKxB,GAAO;AACR,eAAKsN,CAAW,IAAItN;AAAA,QACxB;AAAA,MAChB;AAAA,IACA,CAAS;AAAA,EACL;AAAA,EACA,MAAMwN,GAAU;AACZ,IAAAA,EAAS,QAAQ,CAACC,MAAQA,EAAM,IAAI,CAAC;AAAA,EACzC;AACJ;AACA,IAAIzC,IAA2B,oBAAI6B,GAAS;AAAA,EACxC,aAAa,CAAC5B,MAAO,CAACA,EAAK,WAAW,IAAI;AAAA,EAC1C,YAAY,CAACA,MAAOA,MAAS;AAAA,EAC7B,OAAO;AAAA,IACH,WAAW;AAAA,EACnB;AAAA,EACI,aAAa;AAAA,IACT,aAAa;AAAA,IACb,YAAY;AAAA,EACpB;AACA,GAAG;AAAA,EACCF;AAAA,EACAG;AAAA,EACAmB;AACJ,CAAC;AAOG,SAASqB,GAAaC,GAAM;AAC5B,SAAI,CAACA,KAAQ5N,EAAc4N,EAAK,IAAI,KAAK5N,EAAc4N,EAAK,MAAM,IACvD,QAEHA,EAAK,QAAQA,EAAK,QAAQ,MAAM,OAAOA,EAAK,SAASA,EAAK,SAAS,MAAM,MAAMA,EAAK,OAAO,QAAQA,EAAK;AACpH;AAGI,SAASC,GAAaX,GAAKY,GAAMC,GAAIC,GAASC,GAAQ;AACtD,MAAIC,IAAYJ,EAAKG,CAAM;AAC3B,SAAKC,MACDA,IAAYJ,EAAKG,CAAM,IAAIf,EAAI,YAAYe,CAAM,EAAE,OACnDF,EAAG,KAAKE,CAAM,IAEdC,IAAYF,MACZA,IAAUE,IAEPF;AACX;AAIA,SAASG,GAAajB,GAAKU,GAAMQ,GAAeC,GAAO;AACnD,EAAAA,IAAQA,KAAS,CAAA;AACjB,MAAIP,IAAOO,EAAM,OAAOA,EAAM,QAAQ,CAAA,GAClCN,IAAKM,EAAM,iBAAiBA,EAAM,kBAAkB,CAAA;AACxD,EAAIA,EAAM,SAAST,MACfE,IAAOO,EAAM,OAAO,CAAA,GACpBN,IAAKM,EAAM,iBAAiB,CAAA,GAC5BA,EAAM,OAAOT,IAEjBV,EAAI,KAAI,GACRA,EAAI,OAAOU;AACX,MAAII,IAAU;AACd,QAAM3M,IAAO+M,EAAc;AAC3B,MAAIpV,GAAGgC,GAAGsT,GAAMC,GAAOC;AACvB,OAAIxV,IAAI,GAAGA,IAAIqI,GAAMrI;AAGjB,QAFAuV,IAAQH,EAAcpV,CAAC,GAEIuV,KAAU,QAAQ,CAACrO,EAAQqO,CAAK;AACvD,MAAAP,IAAUH,GAAaX,GAAKY,GAAMC,GAAIC,GAASO,CAAK;AAAA,aAC7CrO,EAAQqO,CAAK;AAGpB,WAAIvT,IAAI,GAAGsT,IAAOC,EAAM,QAAQvT,IAAIsT,GAAMtT;AACtC,QAAAwT,IAAcD,EAAMvT,CAAC,GAEYwT,KAAgB,QAAQ,CAACtO,EAAQsO,CAAW,MACzER,IAAUH,GAAaX,GAAKY,GAAMC,GAAIC,GAASQ,CAAW;AAK1E,EAAAtB,EAAI,QAAO;AACX,QAAMuB,IAAQV,EAAG,SAAS;AAC1B,MAAIU,IAAQL,EAAc,QAAQ;AAC9B,SAAIpV,IAAI,GAAGA,IAAIyV,GAAOzV;AAClB,aAAO8U,EAAKC,EAAG/U,CAAC,CAAC;AAErB,IAAA+U,EAAG,OAAO,GAAGU,CAAK;AAAA,EACtB;AACA,SAAOT;AACX;AAQI,SAASU,GAAYC,GAAOC,GAAOC,GAAO;AAC1C,QAAMC,IAAmBH,EAAM,yBACzBI,IAAYF,MAAU,IAAI,KAAK,IAAIA,IAAQ,GAAG,GAAG,IAAI;AAC3D,SAAO,KAAK,OAAOD,IAAQG,KAAaD,CAAgB,IAAIA,IAAmBC;AACnF;AAGI,SAASC,GAAYC,GAAQ/B,GAAK;AAClC,EAAI,CAACA,KAAO,CAAC+B,MAGb/B,IAAMA,KAAO+B,EAAO,WAAW,IAAI,GACnC/B,EAAI,KAAI,GAGRA,EAAI,eAAc,GAClBA,EAAI,UAAU,GAAG,GAAG+B,EAAO,OAAOA,EAAO,MAAM,GAC/C/B,EAAI,QAAO;AACf;AACA,SAASgC,GAAUhC,GAAKpL,GAAS7H,GAAGN,GAAG;AAEnC,EAAAwV,GAAgBjC,GAAKpL,GAAS7H,GAAGN,GAAG,IAAI;AAC5C;AAEA,SAASwV,GAAgBjC,GAAKpL,GAAS7H,GAAGN,GAAG6C,GAAG;AAC5C,MAAI4C,GAAMgQ,GAASC,GAASC,GAAMC,GAAcV,GAAOW,GAAUC;AACjE,QAAMC,IAAQ5N,EAAQ,YAChB6N,IAAW7N,EAAQ,UACnB8N,IAAS9N,EAAQ;AACvB,MAAI+N,KAAOF,KAAY,KAAKpM;AAC5B,MAAImM,KAAS,OAAOA,KAAU,aAC1BtQ,IAAOsQ,EAAM,SAAQ,GACjBtQ,MAAS,+BAA+BA,MAAS,+BAA8B;AAC/E,IAAA8N,EAAI,KAAI,GACRA,EAAI,UAAUjT,GAAGN,CAAC,GAClBuT,EAAI,OAAO2C,CAAG,GACd3C,EAAI,UAAUwC,GAAO,CAACA,EAAM,QAAQ,GAAG,CAACA,EAAM,SAAS,GAAGA,EAAM,OAAOA,EAAM,MAAM,GACnFxC,EAAI,QAAO;AACX;AAAA,EACJ;AAEJ,MAAI,QAAM0C,CAAM,KAAKA,KAAU,IAI/B;AAAA,YADA1C,EAAI,UAAS,GACNwC,GAAK;AAAA;AAAA,MAER;AACI,QAAIlT,IACA0Q,EAAI,QAAQjT,GAAGN,GAAG6C,IAAI,GAAGoT,GAAQ,GAAG,GAAGxM,CAAG,IAE1C8J,EAAI,IAAIjT,GAAGN,GAAGiW,GAAQ,GAAGxM,CAAG,GAEhC8J,EAAI,UAAS;AACb;AAAA,MACJ,KAAK;AACD,QAAA2B,IAAQrS,IAAIA,IAAI,IAAIoT,GACpB1C,EAAI,OAAOjT,IAAI,KAAK,IAAI4V,CAAG,IAAIhB,GAAOlV,IAAI,KAAK,IAAIkW,CAAG,IAAID,CAAM,GAChEC,KAAOnM,IACPwJ,EAAI,OAAOjT,IAAI,KAAK,IAAI4V,CAAG,IAAIhB,GAAOlV,IAAI,KAAK,IAAIkW,CAAG,IAAID,CAAM,GAChEC,KAAOnM,IACPwJ,EAAI,OAAOjT,IAAI,KAAK,IAAI4V,CAAG,IAAIhB,GAAOlV,IAAI,KAAK,IAAIkW,CAAG,IAAID,CAAM,GAChE1C,EAAI,UAAS;AACb;AAAA,MACJ,KAAK;AAQD,QAAAqC,IAAeK,IAAS,OACxBN,IAAOM,IAASL,GAChBH,IAAU,KAAK,IAAIS,IAAMpM,EAAU,IAAI6L,GACvCE,IAAW,KAAK,IAAIK,IAAMpM,EAAU,KAAKjH,IAAIA,IAAI,IAAI+S,IAAeD,IACpED,IAAU,KAAK,IAAIQ,IAAMpM,EAAU,IAAI6L,GACvCG,IAAW,KAAK,IAAII,IAAMpM,EAAU,KAAKjH,IAAIA,IAAI,IAAI+S,IAAeD,IACpEpC,EAAI,IAAIjT,IAAIuV,GAAU7V,IAAI0V,GAASE,GAAcM,IAAM1M,GAAI0M,IAAMrM,CAAO,GACxE0J,EAAI,IAAIjT,IAAIwV,GAAU9V,IAAIyV,GAASG,GAAcM,IAAMrM,GAASqM,CAAG,GACnE3C,EAAI,IAAIjT,IAAIuV,GAAU7V,IAAI0V,GAASE,GAAcM,GAAKA,IAAMrM,CAAO,GACnE0J,EAAI,IAAIjT,IAAIwV,GAAU9V,IAAIyV,GAASG,GAAcM,IAAMrM,GAASqM,IAAM1M,CAAE,GACxE+J,EAAI,UAAS;AACb;AAAA,MACJ,KAAK;AACD,YAAI,CAACyC,GAAU;AACX,UAAAL,IAAO,KAAK,UAAUM,GACtBf,IAAQrS,IAAIA,IAAI,IAAI8S,GACpBpC,EAAI,KAAKjT,IAAI4U,GAAOlV,IAAI2V,GAAM,IAAIT,GAAO,IAAIS,CAAI;AACjD;AAAA,QACJ;AACA,QAAAO,KAAOpM;AAAA;AAAA,MACS,KAAK;AACrB,QAAA+L,IAAW,KAAK,IAAIK,CAAG,KAAKrT,IAAIA,IAAI,IAAIoT,IACxCR,IAAU,KAAK,IAAIS,CAAG,IAAID,GAC1BP,IAAU,KAAK,IAAIQ,CAAG,IAAID,GAC1BH,IAAW,KAAK,IAAII,CAAG,KAAKrT,IAAIA,IAAI,IAAIoT,IACxC1C,EAAI,OAAOjT,IAAIuV,GAAU7V,IAAI0V,CAAO,GACpCnC,EAAI,OAAOjT,IAAIwV,GAAU9V,IAAIyV,CAAO,GACpClC,EAAI,OAAOjT,IAAIuV,GAAU7V,IAAI0V,CAAO,GACpCnC,EAAI,OAAOjT,IAAIwV,GAAU9V,IAAIyV,CAAO,GACpClC,EAAI,UAAS;AACb;AAAA,MACJ,KAAK;AACD,QAAA2C,KAAOpM;AAAA;AAAA,MACS,KAAK;AACrB,QAAA+L,IAAW,KAAK,IAAIK,CAAG,KAAKrT,IAAIA,IAAI,IAAIoT,IACxCR,IAAU,KAAK,IAAIS,CAAG,IAAID,GAC1BP,IAAU,KAAK,IAAIQ,CAAG,IAAID,GAC1BH,IAAW,KAAK,IAAII,CAAG,KAAKrT,IAAIA,IAAI,IAAIoT,IACxC1C,EAAI,OAAOjT,IAAIuV,GAAU7V,IAAI0V,CAAO,GACpCnC,EAAI,OAAOjT,IAAIuV,GAAU7V,IAAI0V,CAAO,GACpCnC,EAAI,OAAOjT,IAAIwV,GAAU9V,IAAIyV,CAAO,GACpClC,EAAI,OAAOjT,IAAIwV,GAAU9V,IAAIyV,CAAO;AACpC;AAAA,MACJ,KAAK;AACD,QAAAI,IAAW,KAAK,IAAIK,CAAG,KAAKrT,IAAIA,IAAI,IAAIoT,IACxCR,IAAU,KAAK,IAAIS,CAAG,IAAID,GAC1BP,IAAU,KAAK,IAAIQ,CAAG,IAAID,GAC1BH,IAAW,KAAK,IAAII,CAAG,KAAKrT,IAAIA,IAAI,IAAIoT,IACxC1C,EAAI,OAAOjT,IAAIuV,GAAU7V,IAAI0V,CAAO,GACpCnC,EAAI,OAAOjT,IAAIuV,GAAU7V,IAAI0V,CAAO,GACpCnC,EAAI,OAAOjT,IAAIwV,GAAU9V,IAAIyV,CAAO,GACpClC,EAAI,OAAOjT,IAAIwV,GAAU9V,IAAIyV,CAAO,GACpCS,KAAOpM,IACP+L,IAAW,KAAK,IAAIK,CAAG,KAAKrT,IAAIA,IAAI,IAAIoT,IACxCR,IAAU,KAAK,IAAIS,CAAG,IAAID,GAC1BP,IAAU,KAAK,IAAIQ,CAAG,IAAID,GAC1BH,IAAW,KAAK,IAAII,CAAG,KAAKrT,IAAIA,IAAI,IAAIoT,IACxC1C,EAAI,OAAOjT,IAAIuV,GAAU7V,IAAI0V,CAAO,GACpCnC,EAAI,OAAOjT,IAAIuV,GAAU7V,IAAI0V,CAAO,GACpCnC,EAAI,OAAOjT,IAAIwV,GAAU9V,IAAIyV,CAAO,GACpClC,EAAI,OAAOjT,IAAIwV,GAAU9V,IAAIyV,CAAO;AACpC;AAAA,MACJ,KAAK;AACD,QAAAA,IAAU5S,IAAIA,IAAI,IAAI,KAAK,IAAIqT,CAAG,IAAID,GACtCP,IAAU,KAAK,IAAIQ,CAAG,IAAID,GAC1B1C,EAAI,OAAOjT,IAAImV,GAASzV,IAAI0V,CAAO,GACnCnC,EAAI,OAAOjT,IAAImV,GAASzV,IAAI0V,CAAO;AACnC;AAAA,MACJ,KAAK;AACD,QAAAnC,EAAI,OAAOjT,GAAGN,CAAC,GACfuT,EAAI,OAAOjT,IAAI,KAAK,IAAI4V,CAAG,KAAKrT,IAAIA,IAAI,IAAIoT,IAASjW,IAAI,KAAK,IAAIkW,CAAG,IAAID,CAAM;AAC/E;AAAA,MACJ,KAAK;AACD,QAAA1C,EAAI,UAAS;AACb;AAAA,IACZ;AACI,IAAAA,EAAI,KAAI,GACJpL,EAAQ,cAAc,KACtBoL,EAAI,OAAM;AAAA;AAElB;AAOI,SAAS4C,GAAe9F,GAAO+F,GAAMC,GAAQ;AAC7C,SAAAA,IAASA,KAAU,KACZ,CAACD,KAAQ/F,KAASA,EAAM,IAAI+F,EAAK,OAAOC,KAAUhG,EAAM,IAAI+F,EAAK,QAAQC,KAAUhG,EAAM,IAAI+F,EAAK,MAAMC,KAAUhG,EAAM,IAAI+F,EAAK,SAASC;AACrJ;AACA,SAASC,GAAS/C,GAAK6C,GAAM;AACzB,EAAA7C,EAAI,KAAI,GACRA,EAAI,UAAS,GACbA,EAAI,KAAK6C,EAAK,MAAMA,EAAK,KAAKA,EAAK,QAAQA,EAAK,MAAMA,EAAK,SAASA,EAAK,GAAG,GAC5E7C,EAAI,KAAI;AACZ;AACA,SAASgD,GAAWhD,GAAK;AACrB,EAAAA,EAAI,QAAO;AACf;AAGI,SAASiD,GAAejD,GAAKkD,GAAU3O,GAAQ4O,GAAMC,GAAM;AAC3D,MAAI,CAACF;AACD,WAAOlD,EAAI,OAAOzL,EAAO,GAAGA,EAAO,CAAC;AAExC,MAAI6O,MAAS,UAAU;AACnB,UAAMC,KAAYH,EAAS,IAAI3O,EAAO,KAAK;AAC3C,IAAAyL,EAAI,OAAOqD,GAAUH,EAAS,CAAC,GAC/BlD,EAAI,OAAOqD,GAAU9O,EAAO,CAAC;AAAA,EACjC,MAAO,CAAI6O,MAAS,WAAY,CAAC,CAACD,IAC9BnD,EAAI,OAAOkD,EAAS,GAAG3O,EAAO,CAAC,IAE/ByL,EAAI,OAAOzL,EAAO,GAAG2O,EAAS,CAAC;AAEnC,EAAAlD,EAAI,OAAOzL,EAAO,GAAGA,EAAO,CAAC;AACjC;AAGI,SAAS+O,GAAetD,GAAKkD,GAAU3O,GAAQ4O,GAAM;AACrD,MAAI,CAACD;AACD,WAAOlD,EAAI,OAAOzL,EAAO,GAAGA,EAAO,CAAC;AAExC,EAAAyL,EAAI,cAAcmD,IAAOD,EAAS,OAAOA,EAAS,MAAMC,IAAOD,EAAS,OAAOA,EAAS,MAAMC,IAAO5O,EAAO,OAAOA,EAAO,MAAM4O,IAAO5O,EAAO,OAAOA,EAAO,MAAMA,EAAO,GAAGA,EAAO,CAAC;AACxL;AACA,SAASgP,GAAcvD,GAAKwD,GAAM;AAC9B,EAAIA,EAAK,eACLxD,EAAI,UAAUwD,EAAK,YAAY,CAAC,GAAGA,EAAK,YAAY,CAAC,CAAC,GAErD1Q,EAAc0Q,EAAK,QAAQ,KAC5BxD,EAAI,OAAOwD,EAAK,QAAQ,GAExBA,EAAK,UACLxD,EAAI,YAAYwD,EAAK,QAErBA,EAAK,cACLxD,EAAI,YAAYwD,EAAK,YAErBA,EAAK,iBACLxD,EAAI,eAAewD,EAAK;AAEhC;AACA,SAASC,GAAazD,GAAKjT,GAAGN,GAAGiX,GAAMF,GAAM;AACzC,MAAIA,EAAK,iBAAiBA,EAAK,WAAW;AAOtC,UAAMG,IAAU3D,EAAI,YAAY0D,CAAI,GAC9B7H,IAAO9O,IAAI4W,EAAQ,uBACnB7H,IAAQ/O,IAAI4W,EAAQ,wBACpBC,IAAMnX,IAAIkX,EAAQ,yBAClBE,IAASpX,IAAIkX,EAAQ,0BACrBG,IAAcN,EAAK,iBAAiBI,IAAMC,KAAU,IAAIA;AAC9D,IAAA7D,EAAI,cAAcA,EAAI,WACtBA,EAAI,UAAS,GACbA,EAAI,YAAYwD,EAAK,mBAAmB,GACxCxD,EAAI,OAAOnE,GAAMiI,CAAW,GAC5B9D,EAAI,OAAOlE,GAAOgI,CAAW,GAC7B9D,EAAI,OAAM;AAAA,EACd;AACJ;AACA,SAAS+D,GAAa/D,GAAKwD,GAAM;AAC7B,QAAMQ,IAAWhE,EAAI;AACrB,EAAAA,EAAI,YAAYwD,EAAK,OACrBxD,EAAI,SAASwD,EAAK,MAAMA,EAAK,KAAKA,EAAK,OAAOA,EAAK,MAAM,GACzDxD,EAAI,YAAYgE;AACpB;AAGI,SAASC,GAAWjE,GAAKkE,GAAMnX,GAAGN,GAAGiU,GAAM8C,IAAO,IAAI;AACtD,QAAMW,IAAQnR,EAAQkR,CAAI,IAAIA,IAAO;AAAA,IACjCA;AAAA,EACR,GACUE,IAASZ,EAAK,cAAc,KAAKA,EAAK,gBAAgB;AAC5D,MAAI1X,GAAG4X;AAIP,OAHA1D,EAAI,KAAI,GACRA,EAAI,OAAOU,EAAK,QAChB6C,GAAcvD,GAAKwD,CAAI,GACnB1X,IAAI,GAAGA,IAAIqY,EAAM,QAAQ,EAAErY;AAC3B,IAAA4X,IAAOS,EAAMrY,CAAC,GACV0X,EAAK,YACLO,GAAa/D,GAAKwD,EAAK,QAAQ,GAE/BY,MACIZ,EAAK,gBACLxD,EAAI,cAAcwD,EAAK,cAEtB1Q,EAAc0Q,EAAK,WAAW,MAC/BxD,EAAI,YAAYwD,EAAK,cAEzBxD,EAAI,WAAW0D,GAAM3W,GAAGN,GAAG+W,EAAK,QAAQ,IAE5CxD,EAAI,SAAS0D,GAAM3W,GAAGN,GAAG+W,EAAK,QAAQ,GACtCC,GAAazD,GAAKjT,GAAGN,GAAGiX,GAAMF,CAAI,GAClC/W,KAAK,OAAOiU,EAAK,UAAU;AAE/B,EAAAV,EAAI,QAAO;AACf;AAKI,SAASqE,GAAmBrE,GAAKsE,GAAM;AACvC,QAAM,EAAE,GAAAvX,GAAI,GAAAN,GAAI,GAAA6C,GAAI,GAAArD,GAAI,QAAAyW,EAAM,IAAM4B;AAEpC,EAAAtE,EAAI,IAAIjT,IAAI2V,EAAO,SAASjW,IAAIiW,EAAO,SAASA,EAAO,SAAS,MAAMzM,GAAIA,GAAI,EAAI,GAElF+J,EAAI,OAAOjT,GAAGN,IAAIR,IAAIyW,EAAO,UAAU,GAEvC1C,EAAI,IAAIjT,IAAI2V,EAAO,YAAYjW,IAAIR,IAAIyW,EAAO,YAAYA,EAAO,YAAYzM,GAAIK,GAAS,EAAI,GAE9F0J,EAAI,OAAOjT,IAAIuC,IAAIoT,EAAO,aAAajW,IAAIR,CAAC,GAE5C+T,EAAI,IAAIjT,IAAIuC,IAAIoT,EAAO,aAAajW,IAAIR,IAAIyW,EAAO,aAAaA,EAAO,aAAapM,GAAS,GAAG,EAAI,GAEpG0J,EAAI,OAAOjT,IAAIuC,GAAG7C,IAAIiW,EAAO,QAAQ,GAErC1C,EAAI,IAAIjT,IAAIuC,IAAIoT,EAAO,UAAUjW,IAAIiW,EAAO,UAAUA,EAAO,UAAU,GAAG,CAACpM,GAAS,EAAI,GAExF0J,EAAI,OAAOjT,IAAI2V,EAAO,SAASjW,CAAC;AACpC;AAEA,MAAM8X,KAAc,wCACdC,KAAa;AAWf,SAASC,GAAa1R,GAAOqP,GAAM;AACnC,QAAMsC,KAAW,KAAK3R,GAAO,MAAMwR,EAAW;AAC9C,MAAI,CAACG,KAAWA,EAAQ,CAAC,MAAM;AAC3B,WAAOtC,IAAO;AAGlB,UADArP,IAAQ,CAAC2R,EAAQ,CAAC,GACXA,EAAQ,CAAC,GAAC;AAAA,IACb,KAAK;AACD,aAAO3R;AAAA,IACX,KAAK;AACD,MAAAA,KAAS;AACT;AAAA,EACZ;AACI,SAAOqP,IAAOrP;AAClB;AACA,MAAM4R,KAAe,CAACjY,MAAI,CAACA,KAAK;AAChC,SAASkY,GAAkB7R,GAAO8R,GAAO;AACrC,QAAM9V,IAAM,CAAA,GACN+V,IAAW7R,EAAS4R,CAAK,GACzBlU,IAAOmU,IAAW,OAAO,KAAKD,CAAK,IAAIA,GACvCE,IAAO9R,EAASF,CAAK,IAAI+R,IAAW,CAACE,MAAO3R,EAAeN,EAAMiS,CAAI,GAAGjS,EAAM8R,EAAMG,CAAI,CAAC,CAAC,IAAI,CAACA,MAAOjS,EAAMiS,CAAI,IAAI,MAAIjS;AAC9H,aAAWiS,KAAQrU;AACf,IAAA5B,EAAIiW,CAAI,IAAIL,GAAaI,EAAKC,CAAI,CAAC;AAEvC,SAAOjW;AACX;AAQI,SAASkW,GAAOlS,GAAO;AACvB,SAAO6R,GAAkB7R,GAAO;AAAA,IAC5B,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,EACd,CAAK;AACL;AAOI,SAASmS,GAAcnS,GAAO;AAC9B,SAAO6R,GAAkB7R,GAAO;AAAA,IAC5B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACR,CAAK;AACL;AAQI,SAASoS,EAAUpS,GAAO;AAC1B,QAAMZ,IAAM8S,GAAOlS,CAAK;AACxB,SAAAZ,EAAI,QAAQA,EAAI,OAAOA,EAAI,OAC3BA,EAAI,SAASA,EAAI,MAAMA,EAAI,QACpBA;AACX;AAOI,SAASiT,EAAOxQ,GAASyQ,GAAU;AACnC,EAAAzQ,IAAUA,KAAW,CAAA,GACrByQ,IAAWA,KAAYtH,EAAS;AAChC,MAAIqE,IAAO/O,EAAeuB,EAAQ,MAAMyQ,EAAS,IAAI;AACrD,EAAI,OAAOjD,KAAS,aAChBA,IAAO,SAASA,GAAM,EAAE;AAE5B,MAAII,IAAQnP,EAAeuB,EAAQ,OAAOyQ,EAAS,KAAK;AACxD,EAAI7C,KAAS,EAAE,KAAKA,GAAO,MAAMgC,EAAU,MACvC,QAAQ,KAAK,oCAAoChC,IAAQ,GAAG,GAC5DA,IAAQ;AAEZ,QAAM9B,IAAO;AAAA,IACT,QAAQrN,EAAeuB,EAAQ,QAAQyQ,EAAS,MAAM;AAAA,IACtD,YAAYZ,GAAapR,EAAeuB,EAAQ,YAAYyQ,EAAS,UAAU,GAAGjD,CAAI;AAAA,IACtF,MAAAA;AAAA,IACA,OAAAI;AAAA,IACA,QAAQnP,EAAeuB,EAAQ,QAAQyQ,EAAS,MAAM;AAAA,IACtD,QAAQ;AAAA,EAChB;AACI,SAAA3E,EAAK,SAASD,GAAaC,CAAI,GACxBA;AACX;AAWI,SAAS4E,GAAQC,GAAQxF,GAASpG,GAAO6L,GAAM;AAE/C,MAAI1Z,GAAGqI,GAAMpB;AACb,OAAIjH,IAAI,GAAGqI,IAAOoR,EAAO,QAAQzZ,IAAIqI,GAAM,EAAErI;AAEzC,QADAiH,IAAQwS,EAAOzZ,CAAC,GACZiH,MAAU,UAWVA,MAAU;AAIV,aAAOA;AAGnB;AAMI,SAAS0S,GAAUC,GAAQC,GAAOC,GAAa;AAC/C,QAAM,EAAE,KAAAjW,GAAM,KAAAF,EAAG,IAAMiW,GACjBG,IAASrS,GAAYmS,IAAQlW,IAAME,KAAO,CAAC,GAC3CmW,IAAW,CAAC/S,GAAOgT,MAAMH,KAAe7S,MAAU,IAAI,IAAIA,IAAQgT;AACxE,SAAO;AAAA,IACH,KAAKD,EAASnW,GAAK,CAAC,KAAK,IAAIkW,CAAM,CAAC;AAAA,IACpC,KAAKC,EAASrW,GAAKoW,CAAM;AAAA,EACjC;AACA;AACA,SAASG,GAAcC,GAAelG,GAAS;AAC3C,SAAO,OAAO,OAAO,OAAO,OAAOkG,CAAa,GAAGlG,CAAO;AAC9D;AAWI,SAASmG,GAAgBC,GAAQC,IAAW;AAAA,EAC5C;AACJ,GAAGC,GAAYhB,GAAUiB,IAAY,MAAIH,EAAO,CAAC,GAAG;AAChD,QAAMI,IAAkBF,KAAcF;AACtC,EAAI,OAAOd,IAAa,QACpBA,IAAWmB,GAAS,aAAaL,CAAM;AAE3C,QAAMhF,IAAQ;AAAA,IACV,CAAC,OAAO,WAAW,GAAG;AAAA,IACtB,YAAY;AAAA,IACZ,SAASgF;AAAA,IACT,aAAaI;AAAA,IACb,WAAWlB;AAAA,IACX,YAAYiB;AAAA,IACZ,UAAU,CAAC3G,MAAQuG,GAAgB;AAAA,MAC3BvG;AAAA,MACA,GAAGwG;AAAA,IACnB,GAAeC,GAAUG,GAAiBlB,CAAQ;AAAA,EAClD;AACI,SAAO,IAAI,MAAMlE,GAAO;AAAA;AAAA;AAAA;AAAA,IAGpB,eAAgB5M,GAAQyQ,GAAM;AAC1B,oBAAOzQ,EAAOyQ,CAAI,GAClB,OAAOzQ,EAAO,OACd,OAAO4R,EAAO,CAAC,EAAEnB,CAAI,GACd;AAAA,IACX;AAAA;AAAA;AAAA;AAAA,IAGA,IAAKzQ,GAAQyQ,GAAM;AACf,aAAOyB,GAAQlS,GAAQyQ,GAAM,MAAI0B,GAAqB1B,GAAMoB,GAAUD,GAAQ5R,CAAM,CAAC;AAAA,IACzF;AAAA;AAAA;AAAA;AAAA;AAAA,IAIA,yBAA0BA,GAAQyQ,GAAM;AACpC,aAAO,QAAQ,yBAAyBzQ,EAAO,QAAQ,CAAC,GAAGyQ,CAAI;AAAA,IACnE;AAAA;AAAA;AAAA;AAAA,IAGA,iBAAkB;AACd,aAAO,QAAQ,eAAemB,EAAO,CAAC,CAAC;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA,IAGA,IAAK5R,GAAQyQ,GAAM;AACf,aAAO2B,GAAqBpS,CAAM,EAAE,SAASyQ,CAAI;AAAA,IACrD;AAAA;AAAA;AAAA;AAAA,IAGA,QAASzQ,GAAQ;AACb,aAAOoS,GAAqBpS,CAAM;AAAA,IACtC;AAAA;AAAA;AAAA;AAAA,IAGA,IAAKA,GAAQyQ,GAAMjS,GAAO;AACtB,YAAM6T,IAAUrS,EAAO,aAAaA,EAAO,WAAW+R;AACtD,aAAA/R,EAAOyQ,CAAI,IAAI4B,EAAQ5B,CAAI,IAAIjS,GAC/B,OAAOwB,EAAO,OACP;AAAA,IACX;AAAA,EACR,CAAK;AACL;AAQI,SAASsS,GAAeC,GAAO/G,GAASgH,GAAUC,GAAoB;AACtE,QAAM7F,IAAQ;AAAA,IACV,YAAY;AAAA,IACZ,QAAQ2F;AAAA,IACR,UAAU/G;AAAA,IACV,WAAWgH;AAAA,IACX,QAAQ,oBAAI,IAAG;AAAA,IACf,cAAclH,GAAaiH,GAAOE,CAAkB;AAAA,IACpD,YAAY,CAAChH,MAAM6G,GAAeC,GAAO9G,GAAK+G,GAAUC,CAAkB;AAAA,IAC1E,UAAU,CAACrH,MAAQkH,GAAeC,EAAM,SAASnH,CAAK,GAAGI,GAASgH,GAAUC,CAAkB;AAAA,EACtG;AACI,SAAO,IAAI,MAAM7F,GAAO;AAAA;AAAA;AAAA;AAAA,IAGpB,eAAgB5M,GAAQyQ,GAAM;AAC1B,oBAAOzQ,EAAOyQ,CAAI,GAClB,OAAO8B,EAAM9B,CAAI,GACV;AAAA,IACX;AAAA;AAAA;AAAA;AAAA,IAGA,IAAKzQ,GAAQyQ,GAAMiC,GAAU;AACzB,aAAOR,GAAQlS,GAAQyQ,GAAM,MAAIkC,GAAoB3S,GAAQyQ,GAAMiC,CAAQ,CAAC;AAAA,IAChF;AAAA;AAAA;AAAA;AAAA;AAAA,IAIA,yBAA0B1S,GAAQyQ,GAAM;AACpC,aAAOzQ,EAAO,aAAa,UAAU,QAAQ,IAAIuS,GAAO9B,CAAI,IAAI;AAAA,QAC5D,YAAY;AAAA,QACZ,cAAc;AAAA,MAC9B,IAAgB,SAAY,QAAQ,yBAAyB8B,GAAO9B,CAAI;AAAA,IAChE;AAAA;AAAA;AAAA;AAAA,IAGA,iBAAkB;AACd,aAAO,QAAQ,eAAe8B,CAAK;AAAA,IACvC;AAAA;AAAA;AAAA;AAAA,IAGA,IAAKvS,GAAQyQ,GAAM;AACf,aAAO,QAAQ,IAAI8B,GAAO9B,CAAI;AAAA,IAClC;AAAA;AAAA;AAAA;AAAA,IAGA,UAAW;AACP,aAAO,QAAQ,QAAQ8B,CAAK;AAAA,IAChC;AAAA;AAAA;AAAA;AAAA,IAGA,IAAKvS,GAAQyQ,GAAMjS,GAAO;AACtB,aAAA+T,EAAM9B,CAAI,IAAIjS,GACd,OAAOwB,EAAOyQ,CAAI,GACX;AAAA,IACX;AAAA,EACR,CAAK;AACL;AAGI,SAASnF,GAAaiH,GAAO/I,IAAW;AAAA,EACxC,YAAY;AAAA,EACZ,WAAW;AACf,GAAG;AACC,QAAM,EAAE,aAAAoJ,IAAapJ,EAAS,YAAa,YAAAqJ,IAAYrJ,EAAS,WAAY,UAAAsJ,IAAUtJ,EAAS,QAAO,IAAM+I;AAC5G,SAAO;AAAA,IACH,SAASO;AAAA,IACT,YAAYF;AAAA,IACZ,WAAWC;AAAA,IACX,cAAcvR,GAAWsR,CAAW,IAAIA,IAAc,MAAIA;AAAA,IAC1D,aAAatR,GAAWuR,CAAU,IAAIA,IAAa,MAAIA;AAAA,EAC/D;AACA;AACA,MAAME,KAAU,CAACC,GAAQvJ,MAAOuJ,IAASA,IAAS5R,GAAYqI,CAAI,IAAIA,GAChEwJ,KAAmB,CAACxC,GAAMjS,MAAQE,EAASF,CAAK,KAAKiS,MAAS,eAAe,OAAO,eAAejS,CAAK,MAAM,QAAQA,EAAM,gBAAgB;AAClJ,SAAS0T,GAAQlS,GAAQyQ,GAAMM,GAAS;AACpC,MAAI,OAAO,UAAU,eAAe,KAAK/Q,GAAQyQ,CAAI,KAAKA,MAAS;AAC/D,WAAOzQ,EAAOyQ,CAAI;AAEtB,QAAMjS,IAAQuS,EAAO;AAErB,SAAA/Q,EAAOyQ,CAAI,IAAIjS,GACRA;AACX;AACA,SAASmU,GAAoB3S,GAAQyQ,GAAMiC,GAAU;AACjD,QAAM,EAAE,QAAAQ,GAAS,UAAAC,GAAW,WAAAC,GAAY,cAAcpI,EAAW,IAAMhL;AACvE,MAAIxB,IAAQ0U,EAAOzC,CAAI;AAEvB,SAAInP,GAAW9C,CAAK,KAAKwM,EAAY,aAAayF,CAAI,MAClDjS,IAAQ6U,GAAmB5C,GAAMjS,GAAOwB,GAAQ0S,CAAQ,IAExDjU,EAAQD,CAAK,KAAKA,EAAM,WACxBA,IAAQ8U,GAAc7C,GAAMjS,GAAOwB,GAAQgL,EAAY,WAAW,IAElEiI,GAAiBxC,GAAMjS,CAAK,MAE5BA,IAAQ8T,GAAe9T,GAAO2U,GAAUC,KAAaA,EAAU3C,CAAI,GAAGzF,CAAW,IAE9ExM;AACX;AACA,SAAS6U,GAAmB5C,GAAM8C,GAAUvT,GAAQ0S,GAAU;AAC1D,QAAM,EAAE,QAAAQ,GAAS,UAAAC,GAAW,WAAAC,GAAY,QAAAI,EAAM,IAAMxT;AACpD,MAAIwT,EAAO,IAAI/C,CAAI;AACf,UAAM,IAAI,MAAM,yBAAyB,MAAM,KAAK+C,CAAM,EAAE,KAAK,IAAI,IAAI,OAAO/C,CAAI;AAExF,EAAA+C,EAAO,IAAI/C,CAAI;AACf,MAAIjS,IAAQ+U,EAASJ,GAAUC,KAAaV,CAAQ;AACpD,SAAAc,EAAO,OAAO/C,CAAI,GACdwC,GAAiBxC,GAAMjS,CAAK,MAE5BA,IAAQiV,GAAkBP,EAAO,SAASA,GAAQzC,GAAMjS,CAAK,IAE1DA;AACX;AACA,SAAS8U,GAAc7C,GAAMjS,GAAOwB,GAAQ0T,GAAa;AACrD,QAAM,EAAE,QAAAR,GAAS,UAAAC,GAAW,WAAAC,GAAY,cAAcpI,EAAW,IAAMhL;AACvE,MAAI,OAAOmT,EAAS,QAAU,OAAeO,EAAYjD,CAAI;AACzD,WAAOjS,EAAM2U,EAAS,QAAQ3U,EAAM,MAAM;AACvC,MAAIE,EAASF,EAAM,CAAC,CAAC,GAAG;AAE3B,UAAMmV,IAAMnV,GACNoT,IAASsB,EAAO,QAAQ,OAAO,CAAChc,MAAIA,MAAMyc,CAAG;AACnD,IAAAnV,IAAQ,CAAA;AACR,eAAWgD,KAAQmS,GAAI;AACnB,YAAMC,IAAWH,GAAkB7B,GAAQsB,GAAQzC,GAAMjP,CAAI;AAC7D,MAAAhD,EAAM,KAAK8T,GAAesB,GAAUT,GAAUC,KAAaA,EAAU3C,CAAI,GAAGzF,CAAW,CAAC;AAAA,IAC5F;AAAA,EACJ;AACA,SAAOxM;AACX;AACA,SAASqV,GAAgB/C,GAAUL,GAAMjS,GAAO;AAC5C,SAAO8C,GAAWwP,CAAQ,IAAIA,EAASL,GAAMjS,CAAK,IAAIsS;AAC1D;AACA,MAAMgD,KAAW,CAAC3T,GAAK4T,MAAS5T,MAAQ,KAAO4T,IAAS,OAAO5T,KAAQ,WAAWgB,GAAiB4S,GAAQ5T,CAAG,IAAI;AAClH,SAAS6T,GAAUtN,GAAKuN,GAAc9T,GAAK+T,GAAgB1V,GAAO;AAC9D,aAAWuV,KAAUE,GAAa;AAC9B,UAAM7I,IAAQ0I,GAAS3T,GAAK4T,CAAM;AAClC,QAAI3I,GAAO;AACP,MAAA1E,EAAI,IAAI0E,CAAK;AACb,YAAM0F,IAAW+C,GAAgBzI,EAAM,WAAWjL,GAAK3B,CAAK;AAC5D,UAAI,OAAOsS,IAAa,OAAeA,MAAa3Q,KAAO2Q,MAAaoD;AAGpE,eAAOpD;AAAA,IAEf,WAAW1F,MAAU,MAAS,OAAO8I,IAAmB,OAAe/T,MAAQ+T;AAG3E,aAAO;AAAA,EAEf;AACA,SAAO;AACX;AACA,SAAST,GAAkBQ,GAAcL,GAAUnD,GAAMjS,GAAO;AAC5D,QAAMsT,IAAa8B,EAAS,aACtB9C,IAAW+C,GAAgBD,EAAS,WAAWnD,GAAMjS,CAAK,GAC1D2V,IAAY;AAAA,IACd,GAAGF;AAAA,IACH,GAAGnC;AAAA,EACX,GACUpL,IAAM,oBAAI,IAAG;AACnB,EAAAA,EAAI,IAAIlI,CAAK;AACb,MAAI2B,IAAMiU,GAAiB1N,GAAKyN,GAAW1D,GAAMK,KAAYL,GAAMjS,CAAK;AAIxE,SAHI2B,MAAQ,QAGR,OAAO2Q,IAAa,OAAeA,MAAaL,MAChDtQ,IAAMiU,GAAiB1N,GAAKyN,GAAWrD,GAAU3Q,GAAK3B,CAAK,GACvD2B,MAAQ,QACD,KAGRwR,GAAgB,MAAM,KAAKjL,CAAG,GAAG;AAAA,IACpC;AAAA,EACR,GAAOoL,GAAYhB,GAAU,MAAIuD,GAAaT,GAAUnD,GAAMjS,CAAK,CAAC;AACpE;AACA,SAAS4V,GAAiB1N,GAAKyN,GAAWhU,GAAK2Q,GAAUtP,GAAM;AAC3D,SAAMrB;AACF,IAAAA,IAAM6T,GAAUtN,GAAKyN,GAAWhU,GAAK2Q,GAAUtP,CAAI;AAEvD,SAAOrB;AACX;AACA,SAASkU,GAAaT,GAAUnD,GAAMjS,GAAO;AACzC,QAAMuV,IAASH,EAAS,WAAU;AAClC,EAAMnD,KAAQsD,MACVA,EAAOtD,CAAI,IAAI,CAAA;AAEnB,QAAMzQ,IAAS+T,EAAOtD,CAAI;AAC1B,SAAIhS,EAAQuB,CAAM,KAAKtB,EAASF,CAAK,IAE1BA,IAEJwB,KAAU,CAAA;AACrB;AACA,SAASmS,GAAqB1B,GAAMoB,GAAUD,GAAQW,GAAO;AACzD,MAAI/T;AACJ,aAAWwU,KAAUnB;AAEjB,QADArT,IAAQyT,GAASc,GAAQC,GAAQvC,CAAI,GAAGmB,CAAM,GAC1C,OAAOpT,IAAU;AACjB,aAAOyU,GAAiBxC,GAAMjS,CAAK,IAAIiV,GAAkB7B,GAAQW,GAAO9B,GAAMjS,CAAK,IAAIA;AAGnG;AACA,SAASyT,GAAS9R,GAAKyR,GAAQ;AAC3B,aAAWxG,KAASwG,GAAO;AACvB,QAAI,CAACxG;AACD;AAEJ,UAAM5M,IAAQ4M,EAAMjL,CAAG;AACvB,QAAI,OAAO3B,IAAU;AACjB,aAAOA;AAAA,EAEf;AACJ;AACA,SAAS4T,GAAqBpS,GAAQ;AAClC,MAAI5D,IAAO4D,EAAO;AAClB,SAAK5D,MACDA,IAAO4D,EAAO,QAAQsU,GAAyBtU,EAAO,OAAO,IAE1D5D;AACX;AACA,SAASkY,GAAyB1C,GAAQ;AACtC,QAAMlL,IAAM,oBAAI,IAAG;AACnB,aAAW0E,KAASwG;AAChB,eAAWzR,KAAO,OAAO,KAAKiL,CAAK,EAAE,OAAO,CAACjS,MAAI,CAACA,EAAE,WAAW,GAAG,CAAC;AAC/D,MAAAuN,EAAI,IAAIvG,CAAG;AAGnB,SAAO,MAAM,KAAKuG,CAAG;AACzB;AACA,SAAS6N,GAA4B7M,GAAM2E,GAAM9H,GAAOuD,GAAO;AAC3D,QAAM,EAAE,QAAAC,EAAM,IAAML,GACd,EAAE,KAAAvH,IAAK,IAAG,IAAM,KAAK,UACrBqU,IAAS,IAAI,MAAM1M,CAAK;AAC9B,MAAIvQ,GAAGqI,GAAMwF,GAAO5D;AACpB,OAAIjK,IAAI,GAAGqI,IAAOkI,GAAOvQ,IAAIqI,GAAM,EAAErI;AACjC,IAAA6N,IAAQ7N,IAAIgN,GACZ/C,IAAO6K,EAAKjH,CAAK,GACjBoP,EAAOjd,CAAC,IAAI;AAAA,MACR,GAAGwQ,EAAO,MAAM5G,GAAiBK,GAAMrB,CAAG,GAAGiF,CAAK;AAAA,IAC9D;AAEI,SAAOoP;AACX;AAEA,MAAMC,KAAU,OAAO,WAAW,OAC5BC,KAAW,CAAC/M,GAAQpQ,MAAIA,IAAIoQ,EAAO,UAAU,CAACA,EAAOpQ,CAAC,EAAE,QAAQoQ,EAAOpQ,CAAC,GACxEod,KAAe,CAACC,MAAYA,MAAc,MAAM,MAAM;AAC5D,SAASC,GAAYC,GAAYC,GAAaC,GAAYhe,GAAG;AAIzD,QAAM2X,IAAWmG,EAAW,OAAOC,IAAcD,GAC3CnU,IAAUoU,GACVE,IAAOD,EAAW,OAAOD,IAAcC,GACvCE,IAAMjR,GAAsBtD,GAASgO,CAAQ,GAC7CwG,IAAMlR,GAAsBgR,GAAMtU,CAAO;AAC/C,MAAIyU,IAAMF,KAAOA,IAAMC,IACnBE,IAAMF,KAAOD,IAAMC;AAEvB,EAAAC,IAAM,MAAMA,CAAG,IAAI,IAAIA,GACvBC,IAAM,MAAMA,CAAG,IAAI,IAAIA;AACvB,QAAMC,IAAKte,IAAIoe,GACTG,IAAKve,IAAIqe;AACf,SAAO;AAAA,IACH,UAAU;AAAA,MACN,GAAG1U,EAAQ,IAAI2U,KAAML,EAAK,IAAItG,EAAS;AAAA,MACvC,GAAGhO,EAAQ,IAAI2U,KAAML,EAAK,IAAItG,EAAS;AAAA,IACnD;AAAA,IACQ,MAAM;AAAA,MACF,GAAGhO,EAAQ,IAAI4U,KAAMN,EAAK,IAAItG,EAAS;AAAA,MACvC,GAAGhO,EAAQ,IAAI4U,KAAMN,EAAK,IAAItG,EAAS;AAAA,IACnD;AAAA,EACA;AACA;AAGI,SAAS6G,GAAe7N,GAAQ8N,GAAQC,GAAI;AAC5C,QAAMC,IAAYhO,EAAO;AACzB,MAAIiO,GAAQC,GAAOC,GAAMC,GAAkBC,GACvCC,IAAavB,GAAS/M,GAAQ,CAAC;AACnC,WAAQpQ,IAAI,GAAGA,IAAIoe,IAAY,GAAG,EAAEpe;AAGhC,QAFAye,IAAeC,GACfA,IAAavB,GAAS/M,GAAQpQ,IAAI,CAAC,GAC/B,GAACye,KAAgB,CAACC,IAGtB;AAAA,UAAI7T,GAAaqT,EAAOle,CAAC,GAAG,GAAGkd,EAAO,GAAG;AACrC,QAAAiB,EAAGne,CAAC,IAAIme,EAAGne,IAAI,CAAC,IAAI;AACpB;AAAA,MACJ;AAIA,MAHAqe,IAASF,EAAGne,CAAC,IAAIke,EAAOle,CAAC,GACzBse,IAAQH,EAAGne,IAAI,CAAC,IAAIke,EAAOle,CAAC,GAC5Bwe,IAAmB,KAAK,IAAIH,GAAQ,CAAC,IAAI,KAAK,IAAIC,GAAO,CAAC,GACtD,EAAAE,KAAoB,OAGxBD,IAAO,IAAI,KAAK,KAAKC,CAAgB,GACrCL,EAAGne,CAAC,IAAIqe,IAASE,IAAOL,EAAOle,CAAC,GAChCme,EAAGne,IAAI,CAAC,IAAIse,IAAQC,IAAOL,EAAOle,CAAC;AAAA;AAE3C;AACA,SAAS2e,GAAgBvO,GAAQ+N,GAAId,IAAY,KAAK;AAClD,QAAMuB,IAAYxB,GAAaC,CAAS,GAClCe,IAAYhO,EAAO;AACzB,MAAI2C,GAAO8L,GAAaJ,GACpBC,IAAavB,GAAS/M,GAAQ,CAAC;AACnC,WAAQpQ,IAAI,GAAGA,IAAIoe,GAAW,EAAEpe,GAAE;AAI9B,QAHA6e,IAAcJ,GACdA,IAAeC,GACfA,IAAavB,GAAS/M,GAAQpQ,IAAI,CAAC,GAC/B,CAACye;AACD;AAEJ,UAAMK,IAASL,EAAapB,CAAS,GAC/B0B,IAASN,EAAaG,CAAS;AACrC,IAAIC,MACA9L,KAAS+L,IAASD,EAAYxB,CAAS,KAAK,GAC5CoB,EAAa,MAAMpB,CAAS,EAAE,IAAIyB,IAAS/L,GAC3C0L,EAAa,MAAMG,CAAS,EAAE,IAAIG,IAAShM,IAAQoL,EAAGne,CAAC,IAEvD0e,MACA3L,KAAS2L,EAAWrB,CAAS,IAAIyB,KAAU,GAC3CL,EAAa,MAAMpB,CAAS,EAAE,IAAIyB,IAAS/L,GAC3C0L,EAAa,MAAMG,CAAS,EAAE,IAAIG,IAAShM,IAAQoL,EAAGne,CAAC;AAAA,EAE/D;AACJ;AAMI,SAASgf,GAAoB5O,GAAQiN,IAAY,KAAK;AACtD,QAAMuB,IAAYxB,GAAaC,CAAS,GAClCe,IAAYhO,EAAO,QACnB8N,IAAS,MAAME,CAAS,EAAE,KAAK,CAAC,GAChCD,IAAK,MAAMC,CAAS;AAE1B,MAAIpe,GAAG6e,GAAaJ,GAChBC,IAAavB,GAAS/M,GAAQ,CAAC;AACnC,OAAIpQ,IAAI,GAAGA,IAAIoe,GAAW,EAAEpe;AAIxB,QAHA6e,IAAcJ,GACdA,IAAeC,GACfA,IAAavB,GAAS/M,GAAQpQ,IAAI,CAAC,GAC/B,EAACye,GAGL;AAAA,UAAIC,GAAY;AACZ,cAAMO,IAAaP,EAAWrB,CAAS,IAAIoB,EAAapB,CAAS;AAEjE,QAAAa,EAAOle,CAAC,IAAIif,MAAe,KAAKP,EAAWE,CAAS,IAAIH,EAAaG,CAAS,KAAKK,IAAa;AAAA,MACpG;AACA,MAAAd,EAAGne,CAAC,IAAK6e,IAA2BH,IAA6B9T,GAAKsT,EAAOle,IAAI,CAAC,CAAC,MAAM4K,GAAKsT,EAAOle,CAAC,CAAC,IAAI,KAAKke,EAAOle,IAAI,CAAC,IAAIke,EAAOle,CAAC,KAAK,IAA5Fke,EAAOle,IAAI,CAAC,IAAtCke,EAAOle,CAAC;AAAA;AAEnC,EAAAie,GAAe7N,GAAQ8N,GAAQC,CAAE,GACjCQ,GAAgBvO,GAAQ+N,GAAId,CAAS;AACzC;AACA,SAAS6B,GAAgBC,GAAItb,GAAKF,GAAK;AACnC,SAAO,KAAK,IAAI,KAAK,IAAIwb,GAAIxb,CAAG,GAAGE,CAAG;AAC1C;AACA,SAASub,GAAgBhP,GAAQ2G,GAAM;AACnC,MAAI/W,GAAGqI,GAAM2I,GAAOqO,GAAQC,GACxBC,IAAazI,GAAe1G,EAAO,CAAC,GAAG2G,CAAI;AAC/C,OAAI/W,IAAI,GAAGqI,IAAO+H,EAAO,QAAQpQ,IAAIqI,GAAM,EAAErI;AAIzC,IAHAsf,IAAaD,GACbA,IAASE,GACTA,IAAavf,IAAIqI,IAAO,KAAKyO,GAAe1G,EAAOpQ,IAAI,CAAC,GAAG+W,CAAI,GAC1DsI,MAGLrO,IAAQZ,EAAOpQ,CAAC,GACZsf,MACAtO,EAAM,OAAOkO,GAAgBlO,EAAM,MAAM+F,EAAK,MAAMA,EAAK,KAAK,GAC9D/F,EAAM,OAAOkO,GAAgBlO,EAAM,MAAM+F,EAAK,KAAKA,EAAK,MAAM,IAE9DwI,MACAvO,EAAM,OAAOkO,GAAgBlO,EAAM,MAAM+F,EAAK,MAAMA,EAAK,KAAK,GAC9D/F,EAAM,OAAOkO,GAAgBlO,EAAM,MAAM+F,EAAK,KAAKA,EAAK,MAAM;AAG1E;AAGI,SAASyI,GAA2BpP,GAAQtH,GAASiO,GAAM0I,GAAMpC,GAAW;AAC5E,MAAIrd,GAAGqI,GAAM2I,GAAO0O;AAKpB,MAHI5W,EAAQ,aACRsH,IAASA,EAAO,OAAO,CAAC+O,MAAK,CAACA,EAAG,IAAI,IAErCrW,EAAQ,2BAA2B;AACnC,IAAAkW,GAAoB5O,GAAQiN,CAAS;AAAA,OAClC;AACH,QAAIsC,IAAOF,IAAOrP,EAAOA,EAAO,SAAS,CAAC,IAAIA,EAAO,CAAC;AACtD,SAAIpQ,IAAI,GAAGqI,IAAO+H,EAAO,QAAQpQ,IAAIqI,GAAM,EAAErI;AACzC,MAAAgR,IAAQZ,EAAOpQ,CAAC,GAChB0f,IAAgBpC,GAAYqC,GAAM3O,GAAOZ,EAAO,KAAK,IAAIpQ,IAAI,GAAGqI,KAAQoX,IAAO,IAAI,EAAE,IAAIpX,CAAI,GAAGS,EAAQ,OAAO,GAC/GkI,EAAM,OAAO0O,EAAc,SAAS,GACpC1O,EAAM,OAAO0O,EAAc,SAAS,GACpC1O,EAAM,OAAO0O,EAAc,KAAK,GAChC1O,EAAM,OAAO0O,EAAc,KAAK,GAChCC,IAAO3O;AAAA,EAEf;AACA,EAAIlI,EAAQ,mBACRsW,GAAgBhP,GAAQ2G,CAAI;AAEpC;AAII,SAAS6I,KAAkB;AAC3B,SAAO,OAAO,SAAW,OAAe,OAAO,WAAa;AAChE;AAGI,SAASC,GAAeC,GAAS;AACjC,MAAItD,IAASsD,EAAQ;AACrB,SAAItD,KAAUA,EAAO,SAAQ,MAAO,0BAChCA,IAASA,EAAO,OAEbA;AACX;AAII,SAASuD,GAAcC,GAAYrM,GAAMsM,GAAgB;AACzD,MAAIC;AACJ,SAAI,OAAOF,KAAe,YACtBE,IAAgB,SAASF,GAAY,EAAE,GACnCA,EAAW,QAAQ,GAAG,MAAM,OAE5BE,IAAgBA,IAAgB,MAAMvM,EAAK,WAAWsM,CAAc,MAGxEC,IAAgBF,GAEbE;AACX;AACA,MAAMC,KAAmB,CAACC,MAAUA,EAAQ,cAAc,YAAY,iBAAiBA,GAAS,IAAI;AACpG,SAASC,GAASC,GAAIzU,GAAU;AAC5B,SAAOsU,GAAiBG,CAAE,EAAE,iBAAiBzU,CAAQ;AACzD;AACA,MAAM0U,KAAY;AAAA,EACd;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AACA,SAASC,GAAmBC,GAAQ/J,GAAOgK,GAAQ;AAC/C,QAAMrV,IAAS,CAAA;AACf,EAAAqV,IAASA,IAAS,MAAMA,IAAS;AACjC,WAAQ1gB,IAAI,GAAGA,IAAI,GAAGA,KAAI;AACtB,UAAM2gB,IAAMJ,GAAUvgB,CAAC;AACvB,IAAAqL,EAAOsV,CAAG,IAAI,WAAWF,EAAO/J,IAAQ,MAAMiK,IAAMD,CAAM,CAAC,KAAK;AAAA,EACpE;AACA,SAAArV,EAAO,QAAQA,EAAO,OAAOA,EAAO,OACpCA,EAAO,SAASA,EAAO,MAAMA,EAAO,QAC7BA;AACX;AACA,MAAMuV,KAAe,CAAC3f,GAAGN,GAAG8H,OAAUxH,IAAI,KAAKN,IAAI,OAAO,CAAC8H,KAAU,CAACA,EAAO;AAKzE,SAASoY,GAAkBnhB,GAAGuW,GAAQ;AACtC,QAAM6K,IAAUphB,EAAE,SACZ8I,IAASsY,KAAWA,EAAQ,SAASA,EAAQ,CAAC,IAAIphB,GAClD,EAAE,SAAAqhB,GAAU,SAAAC,EAAO,IAAMxY;AAC/B,MAAIyY,IAAM,IACNhgB,GAAGN;AACP,MAAIigB,GAAaG,GAASC,GAASthB,EAAE,MAAM;AACvC,IAAAuB,IAAI8f,GACJpgB,IAAIqgB;AAAA,OACD;AACH,UAAMxI,IAAOvC,EAAO,sBAAqB;AACzC,IAAAhV,IAAIuH,EAAO,UAAUgQ,EAAK,MAC1B7X,IAAI6H,EAAO,UAAUgQ,EAAK,KAC1ByI,IAAM;AAAA,EACV;AACA,SAAO;AAAA,IACH,GAAAhgB;AAAA,IACA,GAAAN;AAAA,IACA,KAAAsgB;AAAA,EACR;AACA;AAMI,SAASC,GAAoBC,GAAOxL,GAAO;AAC3C,MAAI,YAAYwL;AACZ,WAAOA;AAEX,QAAM,EAAE,QAAAlL,GAAS,yBAAAmL,EAAuB,IAAMzL,GACxCe,IAAQyJ,GAAiBlK,CAAM,GAC/BoL,IAAY3K,EAAM,cAAc,cAChC4K,IAAWd,GAAmB9J,GAAO,SAAS,GAC9C6K,IAAUf,GAAmB9J,GAAO,UAAU,OAAO,GACrD,EAAE,GAAAzV,GAAI,GAAAN,GAAI,KAAAsgB,EAAG,IAAMJ,GAAkBM,GAAOlL,CAAM,GAClDG,IAAUkL,EAAS,QAAQL,KAAOM,EAAQ,OAC1ClL,IAAUiL,EAAS,OAAOL,KAAOM,EAAQ;AAC/C,MAAI,EAAE,OAAA1L,GAAQ,QAAA2L,EAAM,IAAM7L;AAC1B,SAAI0L,MACAxL,KAASyL,EAAS,QAAQC,EAAQ,OAClCC,KAAUF,EAAS,SAASC,EAAQ,SAEjC;AAAA,IACH,GAAG,KAAK,OAAOtgB,IAAImV,KAAWP,IAAQI,EAAO,QAAQmL,CAAuB;AAAA,IAC5E,GAAG,KAAK,OAAOzgB,IAAI0V,KAAWmL,IAASvL,EAAO,SAASmL,CAAuB;AAAA,EACtF;AACA;AACA,SAASK,GAAiBxL,GAAQJ,GAAO2L,GAAQ;AAC7C,MAAIE,GAAUC;AACd,MAAI9L,MAAU,UAAa2L,MAAW,QAAW;AAC7C,UAAMI,IAAY3L,KAAU4J,GAAe5J,CAAM;AACjD,QAAI,CAAC2L;AACD,MAAA/L,IAAQI,EAAO,aACfuL,IAASvL,EAAO;AAAA,SACb;AACH,YAAMuC,IAAOoJ,EAAU,yBACjBC,IAAiB1B,GAAiByB,CAAS,GAC3CE,IAAkBtB,GAAmBqB,GAAgB,UAAU,OAAO,GACtEE,IAAmBvB,GAAmBqB,GAAgB,SAAS;AACrE,MAAAhM,IAAQ2C,EAAK,QAAQuJ,EAAiB,QAAQD,EAAgB,OAC9DN,IAAShJ,EAAK,SAASuJ,EAAiB,SAASD,EAAgB,QACjEJ,IAAW3B,GAAc8B,EAAe,UAAUD,GAAW,aAAa,GAC1ED,IAAY5B,GAAc8B,EAAe,WAAWD,GAAW,cAAc;AAAA,IACjF;AAAA,EACJ;AACA,SAAO;AAAA,IACH,OAAA/L;AAAA,IACA,QAAA2L;AAAA,IACA,UAAUE,KAAYpX;AAAA,IACtB,WAAWqX,KAAarX;AAAA,EAChC;AACA;AACA,MAAM0X,KAAS,CAACphB,MAAI,KAAK,MAAMA,IAAI,EAAE,IAAI;AAEzC,SAASqhB,GAAehM,GAAQiM,GAASC,GAAUC,GAAa;AAC5D,QAAM1L,IAAQyJ,GAAiBlK,CAAM,GAC/BoM,IAAU7B,GAAmB9J,GAAO,QAAQ,GAC5CgL,IAAW3B,GAAcrJ,EAAM,UAAUT,GAAQ,aAAa,KAAK3L,IACnEqX,IAAY5B,GAAcrJ,EAAM,WAAWT,GAAQ,cAAc,KAAK3L,IACtEgY,IAAgBb,GAAiBxL,GAAQiM,GAASC,CAAQ;AAChE,MAAI,EAAE,OAAAtM,GAAQ,QAAA2L,EAAM,IAAMc;AAC1B,MAAI5L,EAAM,cAAc,eAAe;AACnC,UAAM6K,IAAUf,GAAmB9J,GAAO,UAAU,OAAO,GACrD4K,IAAWd,GAAmB9J,GAAO,SAAS;AACpD,IAAAb,KAASyL,EAAS,QAAQC,EAAQ,OAClCC,KAAUF,EAAS,SAASC,EAAQ;AAAA,EACxC;AACA,SAAA1L,IAAQ,KAAK,IAAI,GAAGA,IAAQwM,EAAQ,KAAK,GACzCb,IAAS,KAAK,IAAI,GAAGY,IAAcvM,IAAQuM,IAAcZ,IAASa,EAAQ,MAAM,GAChFxM,IAAQmM,GAAO,KAAK,IAAInM,GAAO6L,GAAUY,EAAc,QAAQ,CAAC,GAChEd,IAASQ,GAAO,KAAK,IAAIR,GAAQG,GAAWW,EAAc,SAAS,CAAC,GAChEzM,KAAS,CAAC2L,MAGVA,IAASQ,GAAOnM,IAAQ,CAAC,KAENqM,MAAY,UAAaC,MAAa,WACvCC,KAAeE,EAAc,UAAUd,IAASc,EAAc,WAChFd,IAASc,EAAc,QACvBzM,IAAQmM,GAAO,KAAK,MAAMR,IAASY,CAAW,CAAC,IAE5C;AAAA,IACH,OAAAvM;AAAA,IACA,QAAA2L;AAAA,EACR;AACA;AAMI,SAASe,GAAY5M,GAAO6M,GAAYC,GAAY;AACpD,QAAMC,IAAaF,KAAc,GAC3BG,IAAe,KAAK,MAAMhN,EAAM,SAAS+M,CAAU,GACnDE,IAAc,KAAK,MAAMjN,EAAM,QAAQ+M,CAAU;AACvD,EAAA/M,EAAM,SAAS,KAAK,MAAMA,EAAM,MAAM,GACtCA,EAAM,QAAQ,KAAK,MAAMA,EAAM,KAAK;AACpC,QAAMM,IAASN,EAAM;AAQrB,SAJIM,EAAO,UAAUwM,KAAc,CAACxM,EAAO,MAAM,UAAU,CAACA,EAAO,MAAM,WACrEA,EAAO,MAAM,SAAS,GAAGN,EAAM,MAAM,MACrCM,EAAO,MAAM,QAAQ,GAAGN,EAAM,KAAK,OAEnCA,EAAM,4BAA4B+M,KAAczM,EAAO,WAAW0M,KAAgB1M,EAAO,UAAU2M,KACnGjN,EAAM,0BAA0B+M,GAChCzM,EAAO,SAAS0M,GAChB1M,EAAO,QAAQ2M,GACfjN,EAAM,IAAI,aAAa+M,GAAY,GAAG,GAAGA,GAAY,GAAG,CAAC,GAClD,MAEJ;AACX;AAKI,MAAMG,KAA+B,WAAW;AAChD,MAAIC,IAAmB;AACvB,MAAI;AACA,UAAMha,IAAU;AAAA,MACZ,IAAI,UAAW;AACX,eAAAga,IAAmB,IACZ;AAAA,MACX;AAAA,IACZ;AACQ,IAAIlD,GAAe,MACf,OAAO,iBAAiB,QAAQ,MAAM9W,CAAO,GAC7C,OAAO,oBAAoB,QAAQ,MAAMA,CAAO;AAAA,EAExD,QAAY;AAAA,EAEZ;AACA,SAAOga;AACX,EAAC;AASG,SAASC,GAAa3C,GAASvU,GAAU;AACzC,QAAM5E,IAAQoZ,GAASD,GAASvU,CAAQ,GAClC+M,IAAU3R,KAASA,EAAM,MAAM,mBAAmB;AACxD,SAAO2R,IAAU,CAACA,EAAQ,CAAC,IAAI;AACnC;AAII,SAASoK,GAAa5e,GAAIC,GAAI5E,GAAG6X,GAAM;AACvC,SAAO;AAAA,IACH,GAAGlT,EAAG,IAAI3E,KAAK4E,EAAG,IAAID,EAAG;AAAA,IACzB,GAAGA,EAAG,IAAI3E,KAAK4E,EAAG,IAAID,EAAG;AAAA,EACjC;AACA;AAGI,SAAS6e,GAAsB7e,GAAIC,GAAI5E,GAAG6X,GAAM;AAChD,SAAO;AAAA,IACH,GAAGlT,EAAG,IAAI3E,KAAK4E,EAAG,IAAID,EAAG;AAAA,IACzB,GAAGkT,MAAS,WAAW7X,IAAI,MAAM2E,EAAG,IAAIC,EAAG,IAAIiT,MAAS,UAAU7X,IAAI,IAAI2E,EAAG,IAAIC,EAAG,IAAI5E,IAAI,IAAI4E,EAAG,IAAID,EAAG;AAAA,EAClH;AACA;AAGI,SAAS8e,GAAqB9e,GAAIC,GAAI5E,GAAG6X,GAAM;AAC/C,QAAM6L,IAAM;AAAA,IACR,GAAG/e,EAAG;AAAA,IACN,GAAGA,EAAG;AAAA,EACd,GACUgf,IAAM;AAAA,IACR,GAAG/e,EAAG;AAAA,IACN,GAAGA,EAAG;AAAA,EACd,GACUjE,IAAI4iB,GAAa5e,GAAI+e,GAAK1jB,CAAC,GAC3BiB,IAAIsiB,GAAaG,GAAKC,GAAK3jB,CAAC,GAC5BS,IAAI8iB,GAAaI,GAAK/e,GAAI5E,CAAC,GAC3Bc,IAAIyiB,GAAa5iB,GAAGM,GAAGjB,CAAC,GACxBC,IAAIsjB,GAAatiB,GAAGR,GAAGT,CAAC;AAC9B,SAAOujB,GAAaziB,GAAGb,GAAGD,CAAC;AAC/B;AAEA,MAAM4jB,KAAwB,SAASC,GAAOzN,GAAO;AACjD,SAAO;AAAA,IACH,EAAG5U,GAAG;AACF,aAAOqiB,IAAQA,IAAQzN,IAAQ5U;AAAA,IACnC;AAAA,IACA,SAAUuC,GAAG;AACT,MAAAqS,IAAQrS;AAAA,IACZ;AAAA,IACA,UAAWoM,GAAO;AACd,aAAIA,MAAU,WACHA,IAEJA,MAAU,UAAU,SAAS;AAAA,IACxC;AAAA,IACA,MAAO3O,GAAGgG,GAAO;AACb,aAAOhG,IAAIgG;AAAA,IACf;AAAA,IACA,WAAYhG,GAAGsiB,GAAW;AACtB,aAAOtiB,IAAIsiB;AAAA,IACf;AAAA,EACR;AACA,GACMC,KAAwB,WAAW;AACrC,SAAO;AAAA,IACH,EAAGviB,GAAG;AACF,aAAOA;AAAA,IACX;AAAA,IACA,SAAUuC,GAAG;AAAA,IAAC;AAAA,IACd,UAAWoM,GAAO;AACd,aAAOA;AAAA,IACX;AAAA,IACA,MAAO3O,GAAGgG,GAAO;AACb,aAAOhG,IAAIgG;AAAA,IACf;AAAA,IACA,WAAYhG,GAAGwiB,GAAY;AACvB,aAAOxiB;AAAA,IACX;AAAA,EACR;AACA;AACA,SAASyiB,GAAczT,GAAKqT,GAAOzN,GAAO;AACtC,SAAO5F,IAAMoT,GAAsBC,GAAOzN,CAAK,IAAI2N,GAAqB;AAC5E;AACA,SAASG,GAAsBzP,GAAK0P,GAAW;AAC3C,MAAIlN,GAAOmN;AACX,GAAID,MAAc,SAASA,MAAc,WACrClN,IAAQxC,EAAI,OAAO,OACnB2P,IAAW;AAAA,IACPnN,EAAM,iBAAiB,WAAW;AAAA,IAClCA,EAAM,oBAAoB,WAAW;AAAA,EACjD,GACQA,EAAM,YAAY,aAAakN,GAAW,WAAW,GACrD1P,EAAI,oBAAoB2P;AAEhC;AACA,SAASC,GAAqB5P,GAAK2P,GAAU;AACzC,EAAIA,MAAa,WACb,OAAO3P,EAAI,mBACXA,EAAI,OAAO,MAAM,YAAY,aAAa2P,EAAS,CAAC,GAAGA,EAAS,CAAC,CAAC;AAE1E;AAEA,SAASE,GAAWlY,GAAU;AAC1B,SAAIA,MAAa,UACN;AAAA,IACH,SAASkB;AAAA,IACT,SAASF;AAAA,IACT,WAAWC;AAAA,EACvB,IAEW;AAAA,IACH,SAASW;AAAA,IACT,SAAS,CAACrN,GAAGM,MAAIN,IAAIM;AAAA,IACrB,WAAW,CAACO,MAAIA;AAAA,EACxB;AACA;AACA,SAAS+iB,GAAiB,EAAE,OAAAhX,GAAQ,KAAAC,GAAM,OAAAsD,GAAQ,MAAAkP,GAAO,OAAA/I,KAAU;AAC/D,SAAO;AAAA,IACH,OAAO1J,IAAQuD;AAAA,IACf,KAAKtD,IAAMsD;AAAA,IACX,MAAMkP,MAASxS,IAAMD,IAAQ,KAAKuD,MAAU;AAAA,IAC5C,OAAAmG;AAAA,EACR;AACA;AACA,SAASuN,GAAWC,GAAS9T,GAAQ+T,GAAQ;AACzC,QAAM,EAAE,UAAAtY,GAAW,OAAOuY,GAAa,KAAKC,EAAQ,IAAMF,GACpD,EAAE,SAAAG,GAAU,WAAAC,MAAeR,GAAWlY,CAAQ,GAC9C0E,IAAQH,EAAO;AACrB,MAAI,EAAE,OAAApD,GAAQ,KAAAC,GAAM,MAAAwS,EAAI,IAAMyE,GAC1BlkB,GAAGqI;AACP,MAAIoX,GAAM;AAGN,SAFAzS,KAASuD,GACTtD,KAAOsD,GACHvQ,IAAI,GAAGqI,IAAOkI,GAAOvQ,IAAIqI,KACpBic,EAAQC,EAAUnU,EAAOpD,IAAQuD,CAAK,EAAE1E,CAAQ,CAAC,GAAGuY,GAAYC,CAAQ,GAD9C,EAAErkB;AAIjC,MAAAgN,KACAC;AAEJ,IAAAD,KAASuD,GACTtD,KAAOsD;AAAA,EACX;AACA,SAAItD,IAAMD,MACNC,KAAOsD,IAEJ;AAAA,IACH,OAAAvD;AAAA,IACA,KAAAC;AAAA,IACA,MAAAwS;AAAA,IACA,OAAOyE,EAAQ;AAAA,EACvB;AACA;AACC,SAASM,GAAcN,GAAS9T,GAAQ+T,GAAQ;AAC7C,MAAI,CAACA;AACD,WAAO;AAAA,MACHD;AAAA,IACZ;AAEI,QAAM,EAAE,UAAArY,GAAW,OAAOuY,GAAa,KAAKC,EAAQ,IAAMF,GACpD5T,IAAQH,EAAO,QACf,EAAE,SAAAqU,GAAU,SAAAH,GAAU,WAAAC,EAAS,IAAMR,GAAWlY,CAAQ,GACxD,EAAE,OAAAmB,GAAQ,KAAAC,GAAM,MAAAwS,GAAO,OAAA/I,EAAK,IAAMuN,GAAWC,GAAS9T,GAAQ+T,CAAM,GACpE9Y,IAAS,CAAA;AACf,MAAIqZ,IAAS,IACTC,IAAW,MACX1d,GAAO+J,GAAO4T;AAClB,QAAMC,IAAgB,MAAIP,EAAQF,GAAYQ,GAAW3d,CAAK,KAAKwd,EAAQL,GAAYQ,CAAS,MAAM,GAChGE,IAAc,MAAIL,EAAQJ,GAAUpd,CAAK,MAAM,KAAKqd,EAAQD,GAAUO,GAAW3d,CAAK,GACtF8d,IAAc,MAAIL,KAAUG,EAAa,GACzCG,IAAa,MAAI,CAACN,KAAUI,EAAW;AAC7C,WAAQ9kB,IAAIgN,GAAO2S,IAAO3S,GAAOhN,KAAKiN,GAAK,EAAEjN;AAEzC,IADAgR,IAAQZ,EAAOpQ,IAAIuQ,CAAK,GACpB,CAAAS,EAAM,SAGV/J,IAAQsd,EAAUvT,EAAMnF,CAAQ,CAAC,GAC7B5E,MAAU2d,MAGdF,IAASJ,EAAQrd,GAAOmd,GAAYC,CAAQ,GACxCM,MAAa,QAAQI,QACrBJ,IAAWF,EAAQxd,GAAOmd,CAAU,MAAM,IAAIpkB,IAAI2f,IAElDgF,MAAa,QAAQK,QACrB3Z,EAAO,KAAK2Y,GAAiB;AAAA,MACzB,OAAOW;AAAA,MACP,KAAK3kB;AAAA,MACL,MAAAyf;AAAA,MACA,OAAAlP;AAAA,MACA,OAAAmG;AAAA,IAChB,CAAa,CAAC,GACFiO,IAAW,OAEfhF,IAAO3f,GACP4kB,IAAY3d;AAEhB,SAAI0d,MAAa,QACbtZ,EAAO,KAAK2Y,GAAiB;AAAA,IACzB,OAAOW;AAAA,IACP,KAAA1X;AAAA,IACA,MAAAwS;AAAA,IACA,OAAAlP;AAAA,IACA,OAAAmG;AAAA,EACZ,CAAS,CAAC,GAECrL;AACX;AACC,SAAS4Z,GAAerN,GAAMuM,GAAQ;AACnC,QAAM9Y,IAAS,CAAA,GACT6Z,IAAWtN,EAAK;AACtB,WAAQ5X,IAAI,GAAGA,IAAIklB,EAAS,QAAQllB,KAAI;AACpC,UAAMmlB,IAAMX,GAAcU,EAASllB,CAAC,GAAG4X,EAAK,QAAQuM,CAAM;AAC1D,IAAIgB,EAAI,UACJ9Z,EAAO,KAAK,GAAG8Z,CAAG;AAAA,EAE1B;AACA,SAAO9Z;AACX;AACC,SAAS+Z,GAAgBhV,GAAQG,GAAOkP,GAAM9O,GAAU;AACrD,MAAI3D,IAAQ,GACRC,IAAMsD,IAAQ;AAClB,MAAIkP,KAAQ,CAAC9O;AACT,WAAM3D,IAAQuD,KAAS,CAACH,EAAOpD,CAAK,EAAE;AAClC,MAAAA;AAGR,SAAMA,IAAQuD,KAASH,EAAOpD,CAAK,EAAE;AACjC,IAAAA;AAMJ,OAJAA,KAASuD,GACLkP,MACAxS,KAAOD,IAELC,IAAMD,KAASoD,EAAOnD,IAAMsD,CAAK,EAAE;AACrC,IAAAtD;AAEJ,SAAAA,KAAOsD,GACA;AAAA,IACH,OAAAvD;AAAA,IACA,KAAAC;AAAA,EACR;AACA;AACC,SAASoY,GAAcjV,GAAQpD,GAAOrJ,GAAK8b,GAAM;AAC9C,QAAMlP,IAAQH,EAAO,QACf/E,IAAS,CAAA;AACf,MAAI6C,IAAOlB,GACP2S,IAAOvP,EAAOpD,CAAK,GACnBC;AACJ,OAAIA,IAAMD,IAAQ,GAAGC,KAAOtJ,GAAK,EAAEsJ,GAAI;AACnC,UAAMqY,IAAMlV,EAAOnD,IAAMsD,CAAK;AAC9B,IAAI+U,EAAI,QAAQA,EAAI,OACX3F,EAAK,SACNF,IAAO,IACPpU,EAAO,KAAK;AAAA,MACR,OAAO2B,IAAQuD;AAAA,MACf,MAAMtD,IAAM,KAAKsD;AAAA,MACjB,MAAAkP;AAAA,IACpB,CAAiB,GACDzS,IAAQkB,IAAOoX,EAAI,OAAOrY,IAAM,SAGpCiB,IAAOjB,GACH0S,EAAK,SACL3S,IAAQC,KAGhB0S,IAAO2F;AAAA,EACX;AACA,SAAIpX,MAAS,QACT7C,EAAO,KAAK;AAAA,IACR,OAAO2B,IAAQuD;AAAA,IACf,KAAKrC,IAAOqC;AAAA,IACZ,MAAAkP;AAAA,EACZ,CAAS,GAEEpU;AACX;AACC,SAASka,GAAiB3N,GAAM4N,GAAgB;AAC7C,QAAMpV,IAASwH,EAAK,QACdjH,IAAWiH,EAAK,QAAQ,UACxBrH,IAAQH,EAAO;AACrB,MAAI,CAACG;AACD,WAAO,CAAA;AAEX,QAAMkP,IAAO,CAAC,CAAC7H,EAAK,OACd,EAAE,OAAA5K,GAAQ,KAAAC,MAASmY,GAAgBhV,GAAQG,GAAOkP,GAAM9O,CAAQ;AACtE,MAAIA,MAAa;AACb,WAAO8U,GAAc7N,GAAM;AAAA,MACvB;AAAA,QACI,OAAA5K;AAAA,QACA,KAAAC;AAAA,QACA,MAAAwS;AAAA,MAChB;AAAA,IACA,GAAWrP,GAAQoV,CAAc;AAE7B,QAAM7hB,IAAMsJ,IAAMD,IAAQC,IAAMsD,IAAQtD,GAClCyY,IAAe,CAAC,CAAC9N,EAAK,aAAa5K,MAAU,KAAKC,MAAQsD,IAAQ;AACxE,SAAOkV,GAAc7N,GAAMyN,GAAcjV,GAAQpD,GAAOrJ,GAAK+hB,CAAY,GAAGtV,GAAQoV,CAAc;AACtG;AACC,SAASC,GAAc7N,GAAMsN,GAAU9U,GAAQoV,GAAgB;AAC5D,SAAI,CAACA,KAAkB,CAACA,EAAe,cAAc,CAACpV,IAC3C8U,IAEJS,GAAgB/N,GAAMsN,GAAU9U,GAAQoV,CAAc;AACjE;AACC,SAASG,GAAgB/N,GAAMsN,GAAU9U,GAAQoV,GAAgB;AAC9D,QAAMI,IAAehO,EAAK,OAAO,WAAU,GACrCiO,IAAYC,GAAUlO,EAAK,OAAO,GAClC,EAAE,eAAemO,GAAe,SAAS,EAAE,UAAApV,EAAQ,EAAG,IAAMiH,GAC5DrH,IAAQH,EAAO,QACf/E,IAAS,CAAA;AACf,MAAI2a,IAAYH,GACZ7Y,IAAQkY,EAAS,CAAC,EAAE,OACpBllB,IAAIgN;AACR,WAASiZ,EAAStmB,GAAGD,GAAGW,GAAG6lB,GAAI;AAC3B,UAAMC,IAAMxV,IAAW,KAAK;AAC5B,QAAIhR,MAAMD,GAIV;AAAA,WADAC,KAAK4Q,GACCH,EAAOzQ,IAAI4Q,CAAK,EAAE;AACpB,QAAA5Q,KAAKwmB;AAET,aAAM/V,EAAO1Q,IAAI6Q,CAAK,EAAE;AACpB,QAAA7Q,KAAKymB;AAET,MAAIxmB,IAAI4Q,MAAU7Q,IAAI6Q,MAClBlF,EAAO,KAAK;AAAA,QACR,OAAO1L,IAAI4Q;AAAA,QACX,KAAK7Q,IAAI6Q;AAAA,QACT,MAAMlQ;AAAA,QACN,OAAO6lB;AAAA,MACvB,CAAa,GACDF,IAAYE,GACZlZ,IAAQtN,IAAI6Q;AAAA;AAAA,EAEpB;AACA,aAAW2T,KAAWgB,GAAS;AAC3B,IAAAlY,IAAQ2D,IAAW3D,IAAQkX,EAAQ;AACnC,QAAIvE,IAAOvP,EAAOpD,IAAQuD,CAAK,GAC3BmG;AACJ,SAAI1W,IAAIgN,IAAQ,GAAGhN,KAAKkkB,EAAQ,KAAKlkB,KAAI;AACrC,YAAMmf,IAAK/O,EAAOpQ,IAAIuQ,CAAK;AAC3B,MAAAmG,IAAQoP,GAAUN,EAAe,WAAWtL,GAAc0L,GAAc;AAAA,QACpE,MAAM;AAAA,QACN,IAAIjG;AAAA,QACJ,IAAIR;AAAA,QACJ,cAAcnf,IAAI,KAAKuQ;AAAA,QACvB,aAAavQ,IAAIuQ;AAAA,QACjB,cAAAwV;AAAA,MAChB,CAAa,CAAC,CAAC,GACCK,GAAa1P,GAAOsP,CAAS,KAC7BC,EAASjZ,GAAOhN,IAAI,GAAGkkB,EAAQ,MAAM8B,CAAS,GAElDrG,IAAOR,GACP6G,IAAYtP;AAAA,IAChB;AACA,IAAI1J,IAAQhN,IAAI,KACZimB,EAASjZ,GAAOhN,IAAI,GAAGkkB,EAAQ,MAAM8B,CAAS;AAAA,EAEtD;AACA,SAAO3a;AACX;AACA,SAASya,GAAUhd,GAAS;AACxB,SAAO;AAAA,IACH,iBAAiBA,EAAQ;AAAA,IACzB,gBAAgBA,EAAQ;AAAA,IACxB,YAAYA,EAAQ;AAAA,IACpB,kBAAkBA,EAAQ;AAAA,IAC1B,iBAAiBA,EAAQ;AAAA,IACzB,aAAaA,EAAQ;AAAA,IACrB,aAAaA,EAAQ;AAAA,EAC7B;AACA;AACA,SAASsd,GAAa1P,GAAOsP,GAAW;AACpC,MAAI,CAACA;AACD,WAAO;AAEX,QAAM3Q,IAAQ,CAAA,GACRgR,IAAW,SAASzd,GAAK3B,GAAO;AAClC,WAAK2K,GAAoB3K,CAAK,KAGzBoO,EAAM,SAASpO,CAAK,KACrBoO,EAAM,KAAKpO,CAAK,GAEboO,EAAM,QAAQpO,CAAK,KALfA;AAAA,EAMf;AACA,SAAO,KAAK,UAAUyP,GAAO2P,CAAQ,MAAM,KAAK,UAAUL,GAAWK,CAAQ;AACjF;AAEA,SAASC,GAAeC,GAAOC,GAAWC,GAAO;AAC7C,SAAOF,EAAM,QAAQ,OAAOA,EAAME,CAAK,IAAID,EAAUC,CAAK;AAC9D;AACA,SAASC,GAAevW,GAAMqW,GAAW;AACrC,QAAM,EAAE,QAAArV,GAAS,QAAAC,EAAM,IAAMjB;AAC7B,SAAIgB,KAAUC,IACH;AAAA,IACH,MAAMkV,GAAenV,GAAQqV,GAAW,MAAM;AAAA,IAC9C,OAAOF,GAAenV,GAAQqV,GAAW,OAAO;AAAA,IAChD,KAAKF,GAAelV,GAAQoV,GAAW,KAAK;AAAA,IAC5C,QAAQF,GAAelV,GAAQoV,GAAW,QAAQ;AAAA,EAC9D,IAEWA;AACX;AACA,SAASG,GAAmBhR,GAAOxF,GAAM;AACrC,QAAMyW,IAAOzW,EAAK;AAClB,MAAIyW,EAAK;AACL,WAAO;AAEX,QAAM7P,IAAO2P,GAAevW,GAAMwF,EAAM,SAAS;AACjD,SAAO;AAAA,IACH,MAAMiR,EAAK,SAAS,KAAQ,IAAI7P,EAAK,QAAQ6P,EAAK,SAAS,KAAO,IAAIA,EAAK;AAAA,IAC3E,OAAOA,EAAK,UAAU,KAAQjR,EAAM,QAAQoB,EAAK,SAAS6P,EAAK,UAAU,KAAO,IAAIA,EAAK;AAAA,IACzF,KAAKA,EAAK,QAAQ,KAAQ,IAAI7P,EAAK,OAAO6P,EAAK,QAAQ,KAAO,IAAIA,EAAK;AAAA,IACvE,QAAQA,EAAK,WAAW,KAAQjR,EAAM,SAASoB,EAAK,UAAU6P,EAAK,WAAW,KAAO,IAAIA,EAAK;AAAA,EACtG;AACA;AChuFA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,MAAMC,GAAS;AAAA,EACX,cAAa;AACT,SAAK,WAAW,MAChB,KAAK,UAAU,oBAAI,IAAG,GACtB,KAAK,WAAW,IAChB,KAAK,YAAY;AAAA,EACrB;AAAA,EACH,QAAQlR,GAAOmR,GAAOC,GAAM3gB,GAAM;AAC3B,UAAM4gB,IAAYF,EAAM,UAAU1gB,CAAI,GAChC6gB,IAAWH,EAAM;AACvB,IAAAE,EAAU,QAAQ,CAACpf,MAAKA,EAAG;AAAA,MACnB,OAAA+N;AAAA,MACA,SAASmR,EAAM;AAAA,MACf,UAAAG;AAAA,MACA,aAAa,KAAK,IAAIF,IAAOD,EAAM,OAAOG,CAAQ;AAAA,IAClE,CAAa,CAAC;AAAA,EACV;AAAA,EACH,WAAW;AACJ,IAAI,KAAK,aAGT,KAAK,WAAW,IAChB,KAAK,WAAW7X,GAAiB,KAAK,QAAQ,MAAI;AAC9C,WAAK,QAAO,GACZ,KAAK,WAAW,MACZ,KAAK,YACL,KAAK,SAAQ;AAAA,IAErB,CAAC;AAAA,EACL;AAAA,EACH,QAAQ2X,IAAO,KAAK,OAAO;AACpB,QAAIG,IAAY;AAChB,SAAK,QAAQ,QAAQ,CAACJ,GAAOnR,MAAQ;AACjC,UAAI,CAACmR,EAAM,WAAW,CAACA,EAAM,MAAM;AAC/B;AAEJ,YAAM5X,IAAQ4X,EAAM;AACpB,UAAI9mB,IAAIkP,EAAM,SAAS,GACnBiY,IAAO,IACPld;AACJ,aAAMjK,KAAK,GAAG,EAAEA;AACZ,QAAAiK,IAAOiF,EAAMlP,CAAC,GACViK,EAAK,WACDA,EAAK,SAAS6c,EAAM,aACpBA,EAAM,WAAW7c,EAAK,SAE1BA,EAAK,KAAK8c,CAAI,GACdI,IAAO,OAEPjY,EAAMlP,CAAC,IAAIkP,EAAMA,EAAM,SAAS,CAAC,GACjCA,EAAM,IAAG;AAGjB,MAAIiY,MACAxR,EAAM,KAAI,GACV,KAAK,QAAQA,GAAOmR,GAAOC,GAAM,UAAU,IAE1C7X,EAAM,WACP4X,EAAM,UAAU,IAChB,KAAK,QAAQnR,GAAOmR,GAAOC,GAAM,UAAU,GAC3CD,EAAM,UAAU,KAEpBI,KAAahY,EAAM;AAAA,IACvB,CAAC,GACD,KAAK,YAAY6X,GACbG,MAAc,MACd,KAAK,WAAW;AAAA,EAExB;AAAA,EACH,UAAUvR,GAAO;AACV,UAAMyR,IAAS,KAAK;AACpB,QAAIN,IAAQM,EAAO,IAAIzR,CAAK;AAC5B,WAAKmR,MACDA,IAAQ;AAAA,MACJ,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO,CAAA;AAAA,MACP,WAAW;AAAA,QACP,UAAU,CAAA;AAAA,QACV,UAAU,CAAA;AAAA,MAC9B;AAAA,IACA,GACYM,EAAO,IAAIzR,GAAOmR,CAAK,IAEpBA;AAAA,EACX;AAAA,EACH,OAAOnR,GAAOwL,GAAOkG,GAAI;AAClB,SAAK,UAAU1R,CAAK,EAAE,UAAUwL,CAAK,EAAE,KAAKkG,CAAE;AAAA,EAClD;AAAA,EACH,IAAI1R,GAAOzG,GAAO;AACX,IAAI,CAACA,KAAS,CAACA,EAAM,UAGrB,KAAK,UAAUyG,CAAK,EAAE,MAAM,KAAK,GAAGzG,CAAK;AAAA,EAC7C;AAAA,EACH,IAAIyG,GAAO;AACJ,WAAO,KAAK,UAAUA,CAAK,EAAE,MAAM,SAAS;AAAA,EAChD;AAAA,EACH,MAAMA,GAAO;AACN,UAAMmR,IAAQ,KAAK,QAAQ,IAAInR,CAAK;AACpC,IAAKmR,MAGLA,EAAM,UAAU,IAChBA,EAAM,QAAQ,KAAK,IAAG,GACtBA,EAAM,WAAWA,EAAM,MAAM,OAAO,CAACQ,GAAKhC,MAAM,KAAK,IAAIgC,GAAKhC,EAAI,SAAS,GAAG,CAAC,GAC/E,KAAK,SAAQ;AAAA,EACjB;AAAA,EACA,QAAQ3P,GAAO;AACX,QAAI,CAAC,KAAK;AACN,aAAO;AAEX,UAAMmR,IAAQ,KAAK,QAAQ,IAAInR,CAAK;AACpC,WAAI,GAACmR,KAAS,CAACA,EAAM,WAAW,CAACA,EAAM,MAAM;AAAA,EAIjD;AAAA,EACH,KAAKnR,GAAO;AACL,UAAMmR,IAAQ,KAAK,QAAQ,IAAInR,CAAK;AACpC,QAAI,CAACmR,KAAS,CAACA,EAAM,MAAM;AACvB;AAEJ,UAAM5X,IAAQ4X,EAAM;AACpB,QAAI9mB,IAAIkP,EAAM,SAAS;AACvB,WAAMlP,KAAK,GAAG,EAAEA;AACZ,MAAAkP,EAAMlP,CAAC,EAAE,OAAM;AAEnB,IAAA8mB,EAAM,QAAQ,CAAA,GACd,KAAK,QAAQnR,GAAOmR,GAAO,KAAK,IAAG,GAAI,UAAU;AAAA,EACrD;AAAA,EACH,OAAOnR,GAAO;AACP,WAAO,KAAK,QAAQ,OAAOA,CAAK;AAAA,EACpC;AACJ;AACA,IAAI4R,KAA2B,oBAAIV,GAAQ;AAE3C,MAAMW,KAAc,eACdC,KAAgB;AAAA,EAClB,QAASliB,GAAMD,GAAIoiB,GAAQ;AACvB,WAAOA,IAAS,MAAMpiB,IAAKC;AAAA,EAC/B;AAAA,EACH,MAAOA,GAAMD,GAAIoiB,GAAQ;AAClB,UAAMC,IAAKrhB,GAAMf,KAAQiiB,EAAW,GAC9BhhB,IAAKmhB,EAAG,SAASrhB,GAAMhB,KAAMkiB,EAAW;AAC9C,WAAOhhB,KAAMA,EAAG,QAAQA,EAAG,IAAImhB,GAAID,CAAM,EAAE,UAAS,IAAKpiB;AAAA,EAC7D;AAAA,EACA,OAAQC,GAAMD,GAAIoiB,GAAQ;AACtB,WAAOniB,KAAQD,IAAKC,KAAQmiB;AAAA,EAChC;AACJ;AACA,MAAME,GAAU;AAAA,EACZ,YAAYC,GAAKpf,GAAQyQ,GAAM5T,GAAG;AAC9B,UAAMwiB,IAAerf,EAAOyQ,CAAI;AAChC,IAAA5T,IAAKkU,GAAQ;AAAA,MACTqO,EAAI;AAAA,MACJviB;AAAA,MACAwiB;AAAA,MACAD,EAAI;AAAA,IAChB,CAAS;AACD,UAAMtiB,IAAOiU,GAAQ;AAAA,MACjBqO,EAAI;AAAA,MACJC;AAAA,MACAxiB;AAAA,IACZ,CAAS;AACD,SAAK,UAAU,IACf,KAAK,MAAMuiB,EAAI,MAAMJ,GAAcI,EAAI,QAAQ,OAAOtiB,CAAI,GAC1D,KAAK,UAAUoM,GAAQkW,EAAI,MAAM,KAAKlW,GAAQ,QAC9C,KAAK,SAAS,KAAK,MAAM,KAAK,IAAG,KAAMkW,EAAI,SAAS,EAAE,GACtD,KAAK,YAAY,KAAK,SAAS,KAAK,MAAMA,EAAI,QAAQ,GACtD,KAAK,QAAQ,CAAC,CAACA,EAAI,MACnB,KAAK,UAAUpf,GACf,KAAK,QAAQyQ,GACb,KAAK,QAAQ3T,GACb,KAAK,MAAMD,GACX,KAAK,YAAY;AAAA,EACrB;AAAA,EACA,SAAS;AACL,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,OAAOuiB,GAAKviB,GAAIyhB,GAAM;AAClB,QAAI,KAAK,SAAS;AACd,WAAK,QAAQ,EAAK;AAClB,YAAMe,IAAe,KAAK,QAAQ,KAAK,KAAK,GACtCC,IAAUhB,IAAO,KAAK,QACtB3T,IAAS,KAAK,YAAY2U;AAChC,WAAK,SAAShB,GACd,KAAK,YAAY,KAAK,MAAM,KAAK,IAAI3T,GAAQyU,EAAI,QAAQ,CAAC,GAC1D,KAAK,UAAUE,GACf,KAAK,QAAQ,CAAC,CAACF,EAAI,MACnB,KAAK,MAAMrO,GAAQ;AAAA,QACfqO,EAAI;AAAA,QACJviB;AAAA,QACAwiB;AAAA,QACAD,EAAI;AAAA,MACpB,CAAa,GACD,KAAK,QAAQrO,GAAQ;AAAA,QACjBqO,EAAI;AAAA,QACJC;AAAA,QACAxiB;AAAA,MAChB,CAAa;AAAA,IACL;AAAA,EACJ;AAAA,EACA,SAAS;AACL,IAAI,KAAK,YACL,KAAK,KAAK,KAAK,KAAK,GACpB,KAAK,UAAU,IACf,KAAK,QAAQ,EAAK;AAAA,EAE1B;AAAA,EACA,KAAKyhB,GAAM;AACP,UAAMgB,IAAUhB,IAAO,KAAK,QACtBiB,IAAW,KAAK,WAChB9O,IAAO,KAAK,OACZ3T,IAAO,KAAK,OACZka,IAAO,KAAK,OACZna,IAAK,KAAK;AAChB,QAAIoiB;AAEJ,QADA,KAAK,UAAUniB,MAASD,MAAOma,KAAQsI,IAAUC,IAC7C,CAAC,KAAK,SAAS;AACf,WAAK,QAAQ9O,CAAI,IAAI5T,GACrB,KAAK,QAAQ,EAAI;AACjB;AAAA,IACJ;AACA,QAAIyiB,IAAU,GAAG;AACb,WAAK,QAAQ7O,CAAI,IAAI3T;AACrB;AAAA,IACJ;AACA,IAAAmiB,IAASK,IAAUC,IAAW,GAC9BN,IAASjI,KAAQiI,IAAS,IAAI,IAAIA,IAASA,GAC3CA,IAAS,KAAK,QAAQ,KAAK,IAAI,GAAG,KAAK,IAAI,GAAGA,CAAM,CAAC,CAAC,GACtD,KAAK,QAAQxO,CAAI,IAAI,KAAK,IAAI3T,GAAMD,GAAIoiB,CAAM;AAAA,EAClD;AAAA,EACA,OAAO;AACH,UAAMO,IAAW,KAAK,cAAc,KAAK,YAAY,CAAA;AACrD,WAAO,IAAI,QAAQ,CAACrZ,GAAKsZ,MAAM;AAC3B,MAAAD,EAAS,KAAK;AAAA,QACV,KAAArZ;AAAA,QACA,KAAAsZ;AAAA,MAChB,CAAa;AAAA,IACL,CAAC;AAAA,EACL;AAAA,EACA,QAAQC,GAAU;AACd,UAAMzZ,IAASyZ,IAAW,QAAQ,OAC5BF,IAAW,KAAK,aAAa,CAAA;AACnC,aAAQjoB,IAAI,GAAGA,IAAIioB,EAAS,QAAQjoB;AAChC,MAAAioB,EAASjoB,CAAC,EAAE0O,CAAM,EAAC;AAAA,EAE3B;AACJ;AAEA,MAAM0Z,GAAW;AAAA,EACb,YAAYzS,GAAO0S,GAAO;AACtB,SAAK,SAAS1S,GACd,KAAK,cAAc,oBAAI,IAAG,GAC1B,KAAK,UAAU0S,CAAM;AAAA,EACzB;AAAA,EACA,UAAUA,GAAQ;AACd,QAAI,CAAClhB,EAASkhB,CAAM;AAChB;AAEJ,UAAMC,IAAmB,OAAO,KAAKrW,EAAS,SAAS,GACjDsW,IAAgB,KAAK;AAC3B,WAAO,oBAAoBF,CAAM,EAAE,QAAQ,CAACzf,MAAM;AAC9C,YAAMif,IAAMQ,EAAOzf,CAAG;AACtB,UAAI,CAACzB,EAAS0gB,CAAG;AACb;AAEJ,YAAMM,IAAW,CAAA;AACjB,iBAAWK,KAAUF;AACjB,QAAAH,EAASK,CAAM,IAAIX,EAAIW,CAAM;AAEjC,OAACthB,EAAQ2gB,EAAI,UAAU,KAAKA,EAAI,cAAc;AAAA,QAC1Cjf;AAAA,MAChB,GAAe,QAAQ,CAACsQ,MAAO;AACf,SAAIA,MAAStQ,KAAO,CAAC2f,EAAc,IAAIrP,CAAI,MACvCqP,EAAc,IAAIrP,GAAMiP,CAAQ;AAAA,MAExC,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AAAA,EACH,gBAAgB1f,GAAQ6F,GAAQ;AACzB,UAAMma,IAAana,EAAO,SACpBxF,IAAU4f,GAAqBjgB,GAAQggB,CAAU;AACvD,QAAI,CAAC3f;AACD,aAAO,CAAA;AAEX,UAAM6f,IAAa,KAAK,kBAAkB7f,GAAS2f,CAAU;AAC7D,WAAIA,EAAW,WACXG,GAASngB,EAAO,QAAQ,aAAaggB,CAAU,EAAE,KAAK,MAAI;AACtD,MAAAhgB,EAAO,UAAUggB;AAAA,IACrB,GAAG,MAAI;AAAA,IACP,CAAC,GAEEE;AAAA,EACX;AAAA,EACH,kBAAkBlgB,GAAQ6F,GAAQ;AAC3B,UAAMia,IAAgB,KAAK,aACrBI,IAAa,CAAA,GACbE,IAAUpgB,EAAO,gBAAgBA,EAAO,cAAc,CAAA,IACtDsQ,IAAQ,OAAO,KAAKzK,CAAM,GAC1ByY,IAAO,KAAK,IAAG;AACrB,QAAI/mB;AACJ,SAAIA,IAAI+Y,EAAM,SAAS,GAAG/Y,KAAK,GAAG,EAAEA,GAAE;AAClC,YAAMkZ,IAAOH,EAAM/Y,CAAC;AACpB,UAAIkZ,EAAK,OAAO,CAAC,MAAM;AACnB;AAEJ,UAAIA,MAAS,WAAW;AACpB,QAAAyP,EAAW,KAAK,GAAG,KAAK,gBAAgBlgB,GAAQ6F,CAAM,CAAC;AACvD;AAAA,MACJ;AACA,YAAMrH,IAAQqH,EAAO4K,CAAI;AACzB,UAAI4P,IAAYD,EAAQ3P,CAAI;AAC5B,YAAM2O,IAAMU,EAAc,IAAIrP,CAAI;AAClC,UAAI4P;AACA,YAAIjB,KAAOiB,EAAU,UAAU;AAC3B,UAAAA,EAAU,OAAOjB,GAAK5gB,GAAO8f,CAAI;AACjC;AAAA,QACJ;AACI,UAAA+B,EAAU,OAAM;AAGxB,UAAI,CAACjB,KAAO,CAACA,EAAI,UAAU;AACvB,QAAApf,EAAOyQ,CAAI,IAAIjS;AACf;AAAA,MACJ;AACA,MAAA4hB,EAAQ3P,CAAI,IAAI4P,IAAY,IAAIlB,GAAUC,GAAKpf,GAAQyQ,GAAMjS,CAAK,GAClE0hB,EAAW,KAAKG,CAAS;AAAA,IAC7B;AACA,WAAOH;AAAA,EACX;AAAA,EACH,OAAOlgB,GAAQ6F,GAAQ;AAChB,QAAI,KAAK,YAAY,SAAS,GAAG;AAC7B,aAAO,OAAO7F,GAAQ6F,CAAM;AAC5B;AAAA,IACJ;AACA,UAAMqa,IAAa,KAAK,kBAAkBlgB,GAAQ6F,CAAM;AACxD,QAAIqa,EAAW;AACX,aAAApB,GAAS,IAAI,KAAK,QAAQoB,CAAU,GAC7B;AAAA,EAEf;AACJ;AACA,SAASC,GAASD,GAAYI,GAAY;AACtC,QAAMF,IAAU,CAAA,GACVhkB,IAAO,OAAO,KAAKkkB,CAAU;AACnC,WAAQ/oB,IAAI,GAAGA,IAAI6E,EAAK,QAAQ7E,KAAI;AAChC,UAAMgpB,IAAOL,EAAW9jB,EAAK7E,CAAC,CAAC;AAC/B,IAAIgpB,KAAQA,EAAK,YACbH,EAAQ,KAAKG,EAAK,MAAM;AAAA,EAEhC;AACA,SAAO,QAAQ,IAAIH,CAAO;AAC9B;AACA,SAASH,GAAqBjgB,GAAQggB,GAAY;AAC9C,MAAI,CAACA;AACD;AAEJ,MAAI3f,IAAUL,EAAO;AACrB,MAAI,CAACK,GAAS;AACV,IAAAL,EAAO,UAAUggB;AACjB;AAAA,EACJ;AACA,SAAI3f,EAAQ,YACRL,EAAO,UAAUK,IAAU,OAAO,OAAO,CAAA,GAAIA,GAAS;AAAA,IAClD,SAAS;AAAA,IACT,aAAa,CAAA;AAAA,EACzB,CAAS,IAEEA;AACX;AAEA,SAASmgB,GAAU1C,GAAO2C,GAAiB;AACvC,QAAMxR,IAAO6O,KAASA,EAAM,WAAW,CAAA,GACjCte,IAAUyP,EAAK,SACf7T,IAAM6T,EAAK,QAAQ,SAAYwR,IAAkB,GACjDvlB,IAAM+T,EAAK,QAAQ,SAAYwR,IAAkB;AACvD,SAAO;AAAA,IACH,OAAOjhB,IAAUtE,IAAME;AAAA,IACvB,KAAKoE,IAAUpE,IAAMF;AAAA,EAC7B;AACA;AACA,SAASwlB,GAAYhY,GAAQC,GAAQ8X,GAAiB;AAClD,MAAIA,MAAoB;AACpB,WAAO;AAEX,QAAMjoB,IAAIgoB,GAAU9X,GAAQ+X,CAAe,GACrCvoB,IAAIsoB,GAAU7X,GAAQ8X,CAAe;AAC3C,SAAO;AAAA,IACH,KAAKvoB,EAAE;AAAA,IACP,OAAOM,EAAE;AAAA,IACT,QAAQN,EAAE;AAAA,IACV,MAAMM,EAAE;AAAA,EAChB;AACA;AACA,SAASmoB,GAAOniB,GAAO;AACnB,MAAI,GAAGnH,GAAGY,GAAGL;AACb,SAAI8G,EAASF,CAAK,KACd,IAAIA,EAAM,KACVnH,IAAImH,EAAM,OACVvG,IAAIuG,EAAM,QACV5G,IAAI4G,EAAM,QAEV,IAAInH,IAAIY,IAAIL,IAAI4G,GAEb;AAAA,IACH,KAAK;AAAA,IACL,OAAOnH;AAAA,IACP,QAAQY;AAAA,IACR,MAAML;AAAA,IACN,UAAU4G,MAAU;AAAA,EAC5B;AACA;AACA,SAASoiB,GAAwB1T,GAAO2T,GAAe;AACnD,QAAMzkB,IAAO,CAAA,GACP0kB,IAAW5T,EAAM,uBAAuB2T,CAAa;AAC3D,MAAItpB,GAAGqI;AACP,OAAIrI,IAAI,GAAGqI,IAAOkhB,EAAS,QAAQvpB,IAAIqI,GAAM,EAAErI;AAC3C,IAAA6E,EAAK,KAAK0kB,EAASvpB,CAAC,EAAE,KAAK;AAE/B,SAAO6E;AACX;AACA,SAAS2kB,GAAWC,GAAOxiB,GAAOyiB,GAAS5gB,IAAU,CAAA,GAAI;AACrD,QAAMjE,IAAO4kB,EAAM,MACbE,IAAa7gB,EAAQ,SAAS;AACpC,MAAI9I,GAAGqI,GAAM0d,GAAc6D;AAC3B,MAAI3iB,MAAU;AACV;AAEJ,MAAI4iB,IAAQ;AACZ,OAAI7pB,IAAI,GAAGqI,IAAOxD,EAAK,QAAQ7E,IAAIqI,GAAM,EAAErI,GAAE;AAEzC,QADA+lB,IAAe,CAAClhB,EAAK7E,CAAC,GAClB+lB,MAAiB2D,GAAS;AAE1B,UADAG,IAAQ,IACJ/gB,EAAQ;AACR;AAEJ;AAAA,IACJ;AACA,IAAA8gB,IAAaH,EAAM,OAAO1D,CAAY,GAClC3e,EAAewiB,CAAU,MAAMD,KAAc1iB,MAAU,KAAK2D,GAAK3D,CAAK,MAAM2D,GAAKgf,CAAU,OAC3F3iB,KAAS2iB;AAAA,EAEjB;AACA,SAAI,CAACC,KAAS,CAAC/gB,EAAQ,MACZ,IAEJ7B;AACX;AACA,SAAS6iB,GAAyBhV,GAAM3E,GAAM;AAC1C,QAAM,EAAE,QAAAK,GAAS,QAAAC,EAAM,IAAMN,GACvB4Z,IAAWvZ,EAAO,SAAS,MAAM,MAAM,KACvCwZ,IAAWvZ,EAAO,SAAS,MAAM,MAAM,KACvC5L,IAAO,OAAO,KAAKiQ,CAAI,GACvBmV,IAAQ,IAAI,MAAMplB,EAAK,MAAM;AACnC,MAAI7E,GAAGqI,GAAMO;AACb,OAAI5I,IAAI,GAAGqI,IAAOxD,EAAK,QAAQ7E,IAAIqI,GAAM,EAAErI;AACvC,IAAA4I,IAAM/D,EAAK7E,CAAC,GACZiqB,EAAMjqB,CAAC,IAAI;AAAA,MACP,CAAC+pB,CAAQ,GAAGnhB;AAAA,MACZ,CAACohB,CAAQ,GAAGlV,EAAKlM,CAAG;AAAA,IAChC;AAEI,SAAOqhB;AACX;AACA,SAASC,GAAU3D,GAAOpW,GAAM;AAC5B,QAAMga,IAAU5D,KAASA,EAAM,QAAQ;AACvC,SAAO4D,KAAWA,MAAY,UAAaha,EAAK,UAAU;AAC9D;AACA,SAASia,GAAYC,GAAYC,GAAYna,GAAM;AAC/C,SAAO,GAAGka,EAAW,EAAE,IAAIC,EAAW,EAAE,IAAIna,EAAK,SAASA,EAAK,IAAI;AACvE;AACA,SAASoa,GAAchE,GAAO;AAC1B,QAAM,EAAE,KAAA1iB,GAAM,KAAAF,GAAM,YAAAkN,GAAa,YAAAC,EAAU,IAAMyV,EAAM,cAAa;AACpE,SAAO;AAAA,IACH,KAAK1V,IAAahN,IAAM,OAAO;AAAA,IAC/B,KAAKiN,IAAanN,IAAM,OAAO;AAAA,EACvC;AACA;AACA,SAAS6mB,GAAiBC,GAAQC,GAAUC,GAAY;AACpD,QAAMC,IAAWH,EAAOC,CAAQ,MAAMD,EAAOC,CAAQ,IAAI;AACzD,SAAOE,EAASD,CAAU,MAAMC,EAASD,CAAU,IAAI,CAAA;AAC3D;AACA,SAASE,GAAoBpB,GAAOhZ,GAAQqa,GAAU1kB,GAAM;AACxD,aAAW+J,KAAQM,EAAO,wBAAwBrK,CAAI,EAAE,WAAU;AAC9D,UAAMa,IAAQwiB,EAAMtZ,EAAK,KAAK;AAC9B,QAAI2a,KAAY7jB,IAAQ,KAAK,CAAC6jB,KAAY7jB,IAAQ;AAC9C,aAAOkJ,EAAK;AAAA,EAEpB;AACA,SAAO;AACX;AACA,SAAS4a,GAAaC,GAAY/N,GAAQ;AACtC,QAAM,EAAE,OAAAtH,GAAQ,aAAaxF,EAAI,IAAM6a,GACjCP,IAAS9U,EAAM,YAAYA,EAAM,UAAU,CAAA,IAC3C,EAAE,QAAAnF,GAAS,QAAAC,GAAS,OAAOsV,EAAY,IAAM5V,GAC7C8a,IAAQza,EAAO,MACf0a,IAAQza,EAAO,MACf7H,IAAMwhB,GAAY5Z,GAAQC,GAAQN,CAAI,GACtC9H,IAAO4U,EAAO;AACpB,MAAIwM;AACJ,WAAQzpB,IAAI,GAAGA,IAAIqI,GAAM,EAAErI,GAAE;AACzB,UAAMiK,IAAOgT,EAAOjd,CAAC,GACf,EAAE,CAACirB,CAAK,GAAGpd,GAAQ,CAACqd,CAAK,GAAGjkB,EAAK,IAAMgD,GACvCkhB,IAAalhB,EAAK,YAAYA,EAAK,UAAU,CAAA;AACnD,IAAAwf,IAAQ0B,EAAWD,CAAK,IAAIV,GAAiBC,GAAQ7hB,GAAKiF,CAAK,GAC/D4b,EAAM1D,CAAY,IAAI9e,GACtBwiB,EAAM,OAAOoB,GAAoBpB,GAAOhZ,GAAQ,IAAMN,EAAK,IAAI,GAC/DsZ,EAAM,UAAUoB,GAAoBpB,GAAOhZ,GAAQ,IAAON,EAAK,IAAI;AACnE,UAAMib,IAAe3B,EAAM,kBAAkBA,EAAM,gBAAgB,CAAA;AACnE,IAAA2B,EAAarF,CAAY,IAAI9e;AAAA,EACjC;AACJ;AACA,SAASokB,GAAgB1V,GAAO/E,GAAM;AAClC,QAAM0a,IAAS3V,EAAM;AACrB,SAAO,OAAO,KAAK2V,CAAM,EAAE,OAAO,CAAC1iB,MAAM0iB,EAAO1iB,CAAG,EAAE,SAASgI,CAAI,EAAE,MAAK;AAC7E;AACA,SAAS2a,GAAqB/O,GAAQ3O,GAAO;AACzC,SAAOqM,GAAcsC,GAAQ;AAAA,IACzB,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,cAAc3O;AAAA,IACd,OAAAA;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACd,CAAK;AACL;AACA,SAAS2d,GAAkBhP,GAAQ3O,GAAOuS,GAAS;AAC/C,SAAOlG,GAAcsC,GAAQ;AAAA,IACzB,QAAQ;AAAA,IACR,WAAW3O;AAAA,IACX,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,SAAAuS;AAAA,IACA,OAAAvS;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACd,CAAK;AACL;AACA,SAAS4d,GAAYtb,GAAMjB,GAAO;AAC9B,QAAM6W,IAAe5V,EAAK,WAAW,OAC/BS,IAAOT,EAAK,UAAUA,EAAK,OAAO;AACxC,MAAKS,GAGL;AAAA,IAAA1B,IAAQA,KAASiB,EAAK;AACtB,eAAW8M,KAAU/N,GAAM;AACvB,YAAMub,IAASxN,EAAO;AACtB,UAAI,CAACwN,KAAUA,EAAO7Z,CAAI,MAAM,UAAa6Z,EAAO7Z,CAAI,EAAEmV,CAAY,MAAM;AACxE;AAEJ,aAAO0E,EAAO7Z,CAAI,EAAEmV,CAAY,GAC5B0E,EAAO7Z,CAAI,EAAE,kBAAkB,UAAa6Z,EAAO7Z,CAAI,EAAE,cAAcmV,CAAY,MAAM,UACzF,OAAO0E,EAAO7Z,CAAI,EAAE,cAAcmV,CAAY;AAAA,IAEtD;AAAA;AACJ;AACA,MAAM2F,KAAqB,CAACpU,MAAOA,MAAS,WAAWA,MAAS,QAC1DqU,KAAmB,CAACC,GAAQC,MAASA,IAASD,IAAS,OAAO,OAAO,CAAA,GAAIA,CAAM,GAC/EE,KAAc,CAACC,GAAU5b,GAAMwF,MAAQoW,KAAY,CAAC5b,EAAK,UAAUA,EAAK,YAAY;AAAA,EAClF,MAAMkZ,GAAwB1T,GAAO,EAAI;AAAA,EACzC,QAAQ;AAChB;AACA,MAAMqW,GAAkB;AAAA,EACvB,OAAO,WAAW,CAAA;AAAA,EAClB,OAAO,qBAAqB;AAAA,EAC5B,OAAO,kBAAkB;AAAA,EACzB,YAAYrW,GAAOoQ,GAAa;AACzB,SAAK,QAAQpQ,GACb,KAAK,OAAOA,EAAM,KAClB,KAAK,QAAQoQ,GACb,KAAK,kBAAkB,CAAA,GACvB,KAAK,cAAc,KAAK,QAAO,GAC/B,KAAK,QAAQ,KAAK,YAAY,MAC9B,KAAK,UAAU,QACd,KAAK,WAAW,IACjB,KAAK,QAAQ,QACb,KAAK,cAAc,QACnB,KAAK,iBAAiB,QACtB,KAAK,aAAa,QAClB,KAAK,aAAa,QAClB,KAAK,sBAAsB,IAC3B,KAAK,qBAAqB,IAC1B,KAAK,WAAW,QAChB,KAAK,YAAY,CAAA,GACjB,KAAK,qBAAqB,WAAW,oBACrC,KAAK,kBAAkB,WAAW,iBAClC,KAAK,WAAU;AAAA,EACnB;AAAA,EACA,aAAa;AACT,UAAM5V,IAAO,KAAK;AAClB,SAAK,UAAS,GACd,KAAK,WAAU,GACfA,EAAK,WAAW+Z,GAAU/Z,EAAK,QAAQA,CAAI,GAC3C,KAAK,YAAW,GACZ,KAAK,QAAQ,QAAQ,CAAC,KAAK,MAAM,gBAAgB,QAAQ,KACzD,QAAQ,KAAK,oKAAoK;AAAA,EAEzL;AAAA,EACA,YAAY4V,GAAc;AACtB,IAAI,KAAK,UAAUA,KACf0F,GAAY,KAAK,WAAW,GAEhC,KAAK,QAAQ1F;AAAA,EACjB;AAAA,EACA,aAAa;AACT,UAAMpQ,IAAQ,KAAK,OACbxF,IAAO,KAAK,aACZ8b,IAAU,KAAK,WAAU,GACzBC,IAAW,CAACtb,GAAM3P,GAAGN,GAAGb,MAAI8Q,MAAS,MAAM3P,IAAI2P,MAAS,MAAM9Q,IAAIa,GAClEwrB,IAAMhc,EAAK,UAAU5I,EAAe0kB,EAAQ,SAASZ,GAAgB1V,GAAO,GAAG,CAAC,GAChFyW,IAAMjc,EAAK,UAAU5I,EAAe0kB,EAAQ,SAASZ,GAAgB1V,GAAO,GAAG,CAAC,GAChF0W,IAAMlc,EAAK,UAAU5I,EAAe0kB,EAAQ,SAASZ,GAAgB1V,GAAO,GAAG,CAAC,GAChF0H,IAAYlN,EAAK,WACjBmc,IAAMnc,EAAK,UAAU+b,EAAS7O,GAAW8O,GAAKC,GAAKC,CAAG,GACtDE,IAAMpc,EAAK,UAAU+b,EAAS7O,GAAW+O,GAAKD,GAAKE,CAAG;AAC5D,IAAAlc,EAAK,SAAS,KAAK,cAAcgc,CAAG,GACpChc,EAAK,SAAS,KAAK,cAAcic,CAAG,GACpCjc,EAAK,SAAS,KAAK,cAAckc,CAAG,GACpClc,EAAK,SAAS,KAAK,cAAcmc,CAAG,GACpCnc,EAAK,SAAS,KAAK,cAAcoc,CAAG;AAAA,EACxC;AAAA,EACA,aAAa;AACT,WAAO,KAAK,MAAM,KAAK,SAAS,KAAK,KAAK;AAAA,EAC9C;AAAA,EACA,UAAU;AACN,WAAO,KAAK,MAAM,eAAe,KAAK,KAAK;AAAA,EAC/C;AAAA,EACH,cAAcC,GAAS;AAChB,WAAO,KAAK,MAAM,OAAOA,CAAO;AAAA,EACpC;AAAA,EACH,eAAejG,GAAO;AACf,UAAMpW,IAAO,KAAK;AAClB,WAAOoW,MAAUpW,EAAK,SAASA,EAAK,SAASA,EAAK;AAAA,EACtD;AAAA,EACA,QAAQ;AACJ,SAAK,QAAQ,OAAO;AAAA,EACxB;AAAA,EACH,WAAW;AACJ,UAAMA,IAAO,KAAK;AAClB,IAAI,KAAK,SACLrB,GAAoB,KAAK,OAAO,IAAI,GAEpCqB,EAAK,YACLsb,GAAYtb,CAAI;AAAA,EAExB;AAAA,EACH,aAAa;AACN,UAAM8b,IAAU,KAAK,WAAU,GACzBnX,IAAOmX,EAAQ,SAASA,EAAQ,OAAO,CAAA,IACvCQ,IAAQ,KAAK;AACnB,QAAItlB,EAAS2N,CAAI,GAAG;AAChB,YAAM3E,IAAO,KAAK;AAClB,WAAK,QAAQ2Z,GAAyBhV,GAAM3E,CAAI;AAAA,IACpD,WAAWsc,MAAU3X,GAAM;AACvB,UAAI2X,GAAO;AACP,QAAA3d,GAAoB2d,GAAO,IAAI;AAC/B,cAAMtc,IAAO,KAAK;AAClB,QAAAsb,GAAYtb,CAAI,GAChBA,EAAK,UAAU,CAAA;AAAA,MACnB;AACA,MAAI2E,KAAQ,OAAO,aAAaA,CAAI,KAChCtG,GAAkBsG,GAAM,IAAI,GAEhC,KAAK,YAAY,CAAA,GACjB,KAAK,QAAQA;AAAA,IACjB;AAAA,EACJ;AAAA,EACA,cAAc;AACV,UAAM3E,IAAO,KAAK;AAClB,SAAK,WAAU,GACX,KAAK,uBACLA,EAAK,UAAU,IAAI,KAAK,mBAAkB;AAAA,EAElD;AAAA,EACA,sBAAsBuc,GAAkB;AACpC,UAAMvc,IAAO,KAAK,aACZ8b,IAAU,KAAK,WAAU;AAC/B,QAAIU,IAAe;AACnB,SAAK,WAAU;AACf,UAAMC,IAAazc,EAAK;AACxB,IAAAA,EAAK,WAAW+Z,GAAU/Z,EAAK,QAAQA,CAAI,GACvCA,EAAK,UAAU8b,EAAQ,UACvBU,IAAe,IACflB,GAAYtb,CAAI,GAChBA,EAAK,QAAQ8b,EAAQ,QAEzB,KAAK,gBAAgBS,CAAgB,IACjCC,KAAgBC,MAAezc,EAAK,cACpC4a,GAAa,MAAM5a,EAAK,OAAO,GAC/BA,EAAK,WAAW+Z,GAAU/Z,EAAK,QAAQA,CAAI;AAAA,EAEnD;AAAA,EACH,YAAY;AACL,UAAMkY,IAAS,KAAK,MAAM,QACpBwE,IAAYxE,EAAO,iBAAiB,KAAK,KAAK,GAC9ChO,IAASgO,EAAO,gBAAgB,KAAK,WAAU,GAAIwE,GAAW,EAAI;AACxE,SAAK,UAAUxE,EAAO,eAAehO,GAAQ,KAAK,YAAY,GAC9D,KAAK,WAAW,KAAK,QAAQ,SAC7B,KAAK,kBAAkB,CAAA;AAAA,EAC3B;AAAA,EACH,MAAMrN,GAAOuD,GAAO;AACb,UAAM,EAAE,aAAaJ,GAAO,OAAO2E,EAAI,IAAM,MACvC,EAAE,QAAAtE,GAAS,UAAAsc,EAAQ,IAAM3c,GACzB8a,IAAQza,EAAO;AACrB,QAAIuc,IAAS/f,MAAU,KAAKuD,MAAUuE,EAAK,SAAS,KAAO3E,EAAK,SAC5DwP,IAAO3S,IAAQ,KAAKmD,EAAK,QAAQnD,IAAQ,CAAC,GAC1ChN,GAAGslB,GAAKrI;AACZ,QAAI,KAAK,aAAa;AAClB,MAAA9M,EAAK,UAAU2E,GACf3E,EAAK,UAAU,IACf8M,IAASnI;AAAA,SACN;AACH,MAAI5N,EAAQ4N,EAAK9H,CAAK,CAAC,IACnBiQ,IAAS,KAAK,eAAe9M,GAAM2E,GAAM9H,GAAOuD,CAAK,IAC9CpJ,EAAS2N,EAAK9H,CAAK,CAAC,IAC3BiQ,IAAS,KAAK,gBAAgB9M,GAAM2E,GAAM9H,GAAOuD,CAAK,IAEtD0M,IAAS,KAAK,mBAAmB9M,GAAM2E,GAAM9H,GAAOuD,CAAK;AAE7D,YAAMyc,IAA6B,MAAI1H,EAAI2F,CAAK,MAAM,QAAQtL,KAAQ2F,EAAI2F,CAAK,IAAItL,EAAKsL,CAAK;AAC7F,WAAIjrB,IAAI,GAAGA,IAAIuQ,GAAO,EAAEvQ;AACpB,QAAAmQ,EAAK,QAAQnQ,IAAIgN,CAAK,IAAIsY,IAAMrI,EAAOjd,CAAC,GACpC+sB,MACIC,EAA0B,MAC1BD,IAAS,KAEbpN,IAAO2F;AAGf,MAAAnV,EAAK,UAAU4c;AAAA,IACnB;AACA,IAAID,KACA/B,GAAa,MAAM9N,CAAM;AAAA,EAEjC;AAAA,EACH,mBAAmB9M,GAAM2E,GAAM9H,GAAOuD,GAAO;AACtC,UAAM,EAAE,QAAAC,GAAS,QAAAC,EAAM,IAAMN,GACvB8a,IAAQza,EAAO,MACf0a,IAAQza,EAAO,MACfwc,IAASzc,EAAO,UAAS,GACzB0c,IAAc1c,MAAWC,GACzBwM,IAAS,IAAI,MAAM1M,CAAK;AAC9B,QAAIvQ,GAAGqI,GAAMwF;AACb,SAAI7N,IAAI,GAAGqI,IAAOkI,GAAOvQ,IAAIqI,GAAM,EAAErI;AACjC,MAAA6N,IAAQ7N,IAAIgN,GACZiQ,EAAOjd,CAAC,IAAI;AAAA,QACR,CAACirB,CAAK,GAAGiC,KAAe1c,EAAO,MAAMyc,EAAOpf,CAAK,GAAGA,CAAK;AAAA,QACzD,CAACqd,CAAK,GAAGza,EAAO,MAAMqE,EAAKjH,CAAK,GAAGA,CAAK;AAAA,MACxD;AAEQ,WAAOoP;AAAA,EACX;AAAA,EACH,eAAe9M,GAAM2E,GAAM9H,GAAOuD,GAAO;AAClC,UAAM,EAAE,QAAAY,GAAS,QAAAC,EAAM,IAAMjB,GACvB8M,IAAS,IAAI,MAAM1M,CAAK;AAC9B,QAAIvQ,GAAGqI,GAAMwF,GAAO5D;AACpB,SAAIjK,IAAI,GAAGqI,IAAOkI,GAAOvQ,IAAIqI,GAAM,EAAErI;AACjC,MAAA6N,IAAQ7N,IAAIgN,GACZ/C,IAAO6K,EAAKjH,CAAK,GACjBoP,EAAOjd,CAAC,IAAI;AAAA,QACR,GAAGmR,EAAO,MAAMlH,EAAK,CAAC,GAAG4D,CAAK;AAAA,QAC9B,GAAGuD,EAAO,MAAMnH,EAAK,CAAC,GAAG4D,CAAK;AAAA,MAC9C;AAEQ,WAAOoP;AAAA,EACX;AAAA,EACH,gBAAgB9M,GAAM2E,GAAM9H,GAAOuD,GAAO;AACnC,UAAM,EAAE,QAAAY,GAAS,QAAAC,EAAM,IAAMjB,GACvB,EAAE,UAAAgd,IAAU,KAAM,UAAAC,IAAU,IAAG,IAAM,KAAK,UAC1CnQ,IAAS,IAAI,MAAM1M,CAAK;AAC9B,QAAIvQ,GAAGqI,GAAMwF,GAAO5D;AACpB,SAAIjK,IAAI,GAAGqI,IAAOkI,GAAOvQ,IAAIqI,GAAM,EAAErI;AACjC,MAAA6N,IAAQ7N,IAAIgN,GACZ/C,IAAO6K,EAAKjH,CAAK,GACjBoP,EAAOjd,CAAC,IAAI;AAAA,QACR,GAAGmR,EAAO,MAAMvH,GAAiBK,GAAMkjB,CAAQ,GAAGtf,CAAK;AAAA,QACvD,GAAGuD,EAAO,MAAMxH,GAAiBK,GAAMmjB,CAAQ,GAAGvf,CAAK;AAAA,MACvE;AAEQ,WAAOoP;AAAA,EACX;AAAA,EACH,UAAUpP,GAAO;AACV,WAAO,KAAK,YAAY,QAAQA,CAAK;AAAA,EACzC;AAAA,EACH,eAAeA,GAAO;AACf,WAAO,KAAK,YAAY,KAAKA,CAAK;AAAA,EACtC;AAAA,EACH,WAAW0Y,GAAOtJ,GAAQ3F,GAAM;AACzB,UAAM3B,IAAQ,KAAK,OACbxF,IAAO,KAAK,aACZlJ,IAAQgW,EAAOsJ,EAAM,IAAI,GACzBkD,IAAQ;AAAA,MACV,MAAMJ,GAAwB1T,GAAO,EAAI;AAAA,MACzC,QAAQsH,EAAO,QAAQsJ,EAAM,IAAI,EAAE;AAAA,IAC/C;AACQ,WAAOiD,GAAWC,GAAOxiB,GAAOkJ,EAAK,OAAO;AAAA,MACxC,MAAAmH;AAAA,IACZ,CAAS;AAAA,EACL;AAAA,EACH,sBAAsBtM,GAAOub,GAAOtJ,GAAQwM,GAAO;AAC5C,UAAM4D,IAAcpQ,EAAOsJ,EAAM,IAAI;AACrC,QAAItf,IAAQomB,MAAgB,OAAO,MAAMA;AACzC,UAAM/e,IAASmb,KAASxM,EAAO,QAAQsJ,EAAM,IAAI;AACjD,IAAIkD,KAASnb,MACTmb,EAAM,SAASnb,GACfrH,IAAQuiB,GAAWC,GAAO4D,GAAa,KAAK,YAAY,KAAK,IAEjEriB,EAAM,MAAM,KAAK,IAAIA,EAAM,KAAK/D,CAAK,GACrC+D,EAAM,MAAM,KAAK,IAAIA,EAAM,KAAK/D,CAAK;AAAA,EACzC;AAAA,EACH,UAAUsf,GAAOwF,GAAU;AACpB,UAAM5b,IAAO,KAAK,aACZO,IAAUP,EAAK,SACf4c,IAAS5c,EAAK,WAAWoW,MAAUpW,EAAK,QACxC9H,IAAOqI,EAAQ,QACf4c,IAAa,KAAK,eAAe/G,CAAK,GACtCkD,IAAQqC,GAAYC,GAAU5b,GAAM,KAAK,KAAK,GAC9CnF,IAAQ;AAAA,MACV,KAAK,OAAO;AAAA,MACZ,KAAK,OAAO;AAAA,IACxB,GACc,EAAE,KAAKuiB,GAAW,KAAKC,EAAQ,IAAMjD,GAAc+C,CAAU;AACnE,QAAIttB,GAAGid;AACP,aAASwQ,IAAQ;AACb,MAAAxQ,IAASvM,EAAQ1Q,CAAC;AAClB,YAAM4pB,IAAa3M,EAAOqQ,EAAW,IAAI;AACzC,aAAO,CAAClmB,EAAe6V,EAAOsJ,EAAM,IAAI,CAAC,KAAKgH,IAAW3D,KAAc4D,IAAW5D;AAAA,IACtF;AACA,SAAI5pB,IAAI,GAAGA,IAAIqI,KACP,GAAAolB,EAAK,MAGT,KAAK,sBAAsBziB,GAAOub,GAAOtJ,GAAQwM,CAAK,GAClDsD,KALa,EAAE/sB;AACnB;AAQJ,QAAI+sB;AACA,WAAI/sB,IAAIqI,IAAO,GAAGrI,KAAK,GAAG,EAAEA;AACxB,YAAI,CAAAytB,EAAK,GAGT;AAAA,eAAK,sBAAsBziB,GAAOub,GAAOtJ,GAAQwM,CAAK;AACtD;AAAA;AAAA;AAGR,WAAOze;AAAA,EACX;AAAA,EACA,mBAAmBub,GAAO;AACtB,UAAMtJ,IAAS,KAAK,YAAY,SAC1B3O,IAAS,CAAA;AACf,QAAItO,GAAGqI,GAAMpB;AACb,SAAIjH,IAAI,GAAGqI,IAAO4U,EAAO,QAAQjd,IAAIqI,GAAM,EAAErI;AACzC,MAAAiH,IAAQgW,EAAOjd,CAAC,EAAEumB,EAAM,IAAI,GACxBnf,EAAeH,CAAK,KACpBqH,EAAO,KAAKrH,CAAK;AAGzB,WAAOqH;AAAA,EACX;AAAA,EACH,iBAAiB;AACV,WAAO;AAAA,EACX;AAAA,EACH,iBAAiBT,GAAO;AACjB,UAAMsC,IAAO,KAAK,aACZK,IAASL,EAAK,QACdM,IAASN,EAAK,QACd8M,IAAS,KAAK,UAAUpP,CAAK;AACnC,WAAO;AAAA,MACH,OAAO2C,IAAS,KAAKA,EAAO,iBAAiByM,EAAOzM,EAAO,IAAI,CAAC,IAAI;AAAA,MACpE,OAAOC,IAAS,KAAKA,EAAO,iBAAiBwM,EAAOxM,EAAO,IAAI,CAAC,IAAI;AAAA,IAChF;AAAA,EACI;AAAA,EACH,QAAQ6G,GAAM;AACP,UAAMnH,IAAO,KAAK;AAClB,SAAK,OAAOmH,KAAQ,SAAS,GAC7BnH,EAAK,QAAQiZ,GAAO7hB,EAAe,KAAK,QAAQ,MAAM4hB,GAAYhZ,EAAK,QAAQA,EAAK,QAAQ,KAAK,eAAc,CAAE,CAAC,CAAC;AAAA,EACvH;AAAA,EACH,OAAOmH,GAAM;AAAA,EAAC;AAAA,EACX,OAAO;AACH,UAAMpD,IAAM,KAAK,MACXyB,IAAQ,KAAK,OACbxF,IAAO,KAAK,aACZud,IAAWvd,EAAK,QAAQ,CAAA,GACxB4G,IAAOpB,EAAM,WACbgY,IAAS,CAAA,GACT3gB,IAAQ,KAAK,cAAc,GAC3BuD,IAAQ,KAAK,cAAcmd,EAAS,SAAS1gB,GAC7C4gB,IAA0B,KAAK,QAAQ;AAC7C,QAAI5tB;AAIJ,SAHImQ,EAAK,WACLA,EAAK,QAAQ,KAAK+D,GAAK6C,GAAM/J,GAAOuD,CAAK,GAEzCvQ,IAAIgN,GAAOhN,IAAIgN,IAAQuD,GAAO,EAAEvQ,GAAE;AAClC,YAAMogB,IAAUsN,EAAS1tB,CAAC;AAC1B,MAAIogB,EAAQ,WAGRA,EAAQ,UAAUwN,IAClBD,EAAO,KAAKvN,CAAO,IAEnBA,EAAQ,KAAKlM,GAAK6C,CAAI;AAAA,IAE9B;AACA,SAAI/W,IAAI,GAAGA,IAAI2tB,EAAO,QAAQ,EAAE3tB;AAC5B,MAAA2tB,EAAO3tB,CAAC,EAAE,KAAKkU,GAAK6C,CAAI;AAAA,EAEhC;AAAA,EACH,SAASlJ,GAAO8f,GAAQ;AACjB,UAAMrW,IAAOqW,IAAS,WAAW;AACjC,WAAO9f,MAAU,UAAa,KAAK,YAAY,UAAU,KAAK,6BAA6ByJ,CAAI,IAAI,KAAK,0BAA0BzJ,KAAS,GAAGyJ,CAAI;AAAA,EACtJ;AAAA,EACH,WAAWzJ,GAAO8f,GAAQrW,GAAM;AACzB,UAAM2U,IAAU,KAAK,WAAU;AAC/B,QAAIhY;AACJ,QAAIpG,KAAS,KAAKA,IAAQ,KAAK,YAAY,KAAK,QAAQ;AACpD,YAAMuS,IAAU,KAAK,YAAY,KAAKvS,CAAK;AAC3C,MAAAoG,IAAUmM,EAAQ,aAAaA,EAAQ,WAAWoL,GAAkB,KAAK,WAAU,GAAI3d,GAAOuS,CAAO,IACrGnM,EAAQ,SAAS,KAAK,UAAUpG,CAAK,GACrCoG,EAAQ,MAAMgY,EAAQ,KAAKpe,CAAK,GAChCoG,EAAQ,QAAQA,EAAQ,YAAYpG;AAAA,IACxC;AACI,MAAAoG,IAAU,KAAK,aAAa,KAAK,WAAWsX,GAAqB,KAAK,MAAM,WAAU,GAAI,KAAK,KAAK,IACpGtX,EAAQ,UAAUgY,GAClBhY,EAAQ,QAAQA,EAAQ,eAAe,KAAK;AAEhD,WAAAA,EAAQ,SAAS,CAAC,CAAC0Z,GACnB1Z,EAAQ,OAAOqD,GACRrD;AAAA,EACX;AAAA,EACH,6BAA6BqD,GAAM;AAC5B,WAAO,KAAK,uBAAuB,KAAK,mBAAmB,IAAIA,CAAI;AAAA,EACvE;AAAA,EACH,0BAA0BzJ,GAAOyJ,GAAM;AAChC,WAAO,KAAK,uBAAuB,KAAK,gBAAgB,IAAIA,GAAMzJ,CAAK;AAAA,EAC3E;AAAA,EACH,uBAAuBggB,GAAavW,IAAO,WAAWzJ,GAAO;AACtD,UAAM8f,IAASrW,MAAS,UAClBjC,IAAQ,KAAK,iBACb9C,IAAWsb,IAAc,MAAMvW,GAC/BsU,IAASvW,EAAM9C,CAAQ,GACvBub,IAAU,KAAK,uBAAuBhkB,GAAQ+D,CAAK;AACzD,QAAI+d;AACA,aAAOD,GAAiBC,GAAQkC,CAAO;AAE3C,UAAMzF,IAAS,KAAK,MAAM,QACpBwE,IAAYxE,EAAO,wBAAwB,KAAK,OAAOwF,CAAW,GAClEvT,IAAWqT,IAAS;AAAA,MACtB,GAAGE,CAAW;AAAA,MACd;AAAA,MACAA;AAAA,MACA;AAAA,IACZ,IAAY;AAAA,MACAA;AAAA,MACA;AAAA,IACZ,GACcxT,IAASgO,EAAO,gBAAgB,KAAK,WAAU,GAAIwE,CAAS,GAC5D5nB,IAAQ,OAAO,KAAKgN,EAAS,SAAS4b,CAAW,CAAC,GAClD5Z,IAAU,MAAI,KAAK,WAAWpG,GAAO8f,GAAQrW,CAAI,GACjDhJ,IAAS+Z,EAAO,oBAAoBhO,GAAQpV,GAAOgP,GAASqG,CAAQ;AAC1E,WAAIhM,EAAO,YACPA,EAAO,UAAUwf,GACjBzY,EAAM9C,CAAQ,IAAI,OAAO,OAAOoZ,GAAiBrd,GAAQwf,CAAO,CAAC,IAE9Dxf;AAAA,EACX;AAAA,EACH,mBAAmBT,GAAOkgB,GAAYJ,GAAQ;AACvC,UAAMhY,IAAQ,KAAK,OACbN,IAAQ,KAAK,iBACb9C,IAAW,aAAawb,CAAU,IAClCnC,IAASvW,EAAM9C,CAAQ;AAC7B,QAAIqZ;AACA,aAAOA;AAEX,QAAI9iB;AACJ,QAAI6M,EAAM,QAAQ,cAAc,IAAO;AACnC,YAAM0S,IAAS,KAAK,MAAM,QACpBwE,IAAYxE,EAAO,0BAA0B,KAAK,OAAO0F,CAAU,GACnE1T,IAASgO,EAAO,gBAAgB,KAAK,WAAU,GAAIwE,CAAS;AAClE,MAAA/jB,IAAUuf,EAAO,eAAehO,GAAQ,KAAK,WAAWxM,GAAO8f,GAAQI,CAAU,CAAC;AAAA,IACtF;AACA,UAAMpF,IAAa,IAAIP,GAAWzS,GAAO7M,KAAWA,EAAQ,UAAU;AACtE,WAAIA,KAAWA,EAAQ,eACnBuM,EAAM9C,CAAQ,IAAI,OAAO,OAAOoW,CAAU,IAEvCA;AAAA,EACX;AAAA,EACH,iBAAiB7f,GAAS;AACnB,QAAKA,EAAQ;AAGb,aAAO,KAAK,mBAAmB,KAAK,iBAAiB,OAAO,OAAO,IAAIA,CAAO;AAAA,EAClF;AAAA,EACH,eAAewO,GAAM0W,GAAe;AAC7B,WAAO,CAACA,KAAiBtC,GAAmBpU,CAAI,KAAK,KAAK,MAAM;AAAA,EACpE;AAAA,EACH,kBAAkBtK,GAAOsK,GAAM;AACxB,UAAM2W,IAAY,KAAK,0BAA0BjhB,GAAOsK,CAAI,GACtD4W,IAA0B,KAAK,gBAC/BF,IAAgB,KAAK,iBAAiBC,CAAS,GAC/CE,IAAiB,KAAK,eAAe7W,GAAM0W,CAAa,KAAKA,MAAkBE;AACrF,gBAAK,oBAAoBF,GAAe1W,GAAM2W,CAAS,GAChD;AAAA,MACH,eAAAD;AAAA,MACA,gBAAAG;AAAA,IACZ;AAAA,EACI;AAAA,EACH,cAAc/N,GAASvS,GAAOkb,GAAYzR,GAAM;AACzC,IAAIoU,GAAmBpU,CAAI,IACvB,OAAO,OAAO8I,GAAS2I,CAAU,IAEjC,KAAK,mBAAmBlb,GAAOyJ,CAAI,EAAE,OAAO8I,GAAS2I,CAAU;AAAA,EAEvE;AAAA,EACH,oBAAoBiF,GAAe1W,GAAMmR,GAAY;AAC9C,IAAIuF,KAAiB,CAACtC,GAAmBpU,CAAI,KACzC,KAAK,mBAAmB,QAAWA,CAAI,EAAE,OAAO0W,GAAevF,CAAU;AAAA,EAEjF;AAAA,EACH,UAAUrI,GAASvS,GAAOyJ,GAAMqW,GAAQ;AACjC,IAAAvN,EAAQ,SAASuN;AACjB,UAAM7kB,IAAU,KAAK,SAAS+E,GAAO8f,CAAM;AAC3C,SAAK,mBAAmB9f,GAAOyJ,GAAMqW,CAAM,EAAE,OAAOvN,GAAS;AAAA,MACzD,SAAS,CAACuN,KAAU,KAAK,iBAAiB7kB,CAAO,KAAKA;AAAA,IAClE,CAAS;AAAA,EACL;AAAA,EACA,iBAAiBsX,GAAS2F,GAAclY,GAAO;AAC3C,SAAK,UAAUuS,GAASvS,GAAO,UAAU,EAAK;AAAA,EAClD;AAAA,EACA,cAAcuS,GAAS2F,GAAclY,GAAO;AACxC,SAAK,UAAUuS,GAASvS,GAAO,UAAU,EAAI;AAAA,EACjD;AAAA,EACH,2BAA2B;AACpB,UAAMuS,IAAU,KAAK,YAAY;AACjC,IAAIA,KACA,KAAK,UAAUA,GAAS,QAAW,UAAU,EAAK;AAAA,EAE1D;AAAA,EACH,wBAAwB;AACjB,UAAMA,IAAU,KAAK,YAAY;AACjC,IAAIA,KACA,KAAK,UAAUA,GAAS,QAAW,UAAU,EAAI;AAAA,EAEzD;AAAA,EACH,gBAAgBsM,GAAkB;AAC3B,UAAM5X,IAAO,KAAK,OACZ4Y,IAAW,KAAK,YAAY;AAClC,eAAW,CAAChf,GAAQ0f,GAAMC,CAAI,KAAK,KAAK;AACpC,WAAK3f,CAAM,EAAE0f,GAAMC,CAAI;AAE3B,SAAK,YAAY,CAAA;AACjB,UAAMC,IAAUZ,EAAS,QACnBa,IAAUzZ,EAAK,QACfvE,IAAQ,KAAK,IAAIge,GAASD,CAAO;AACvC,IAAI/d,KACA,KAAK,MAAM,GAAGA,CAAK,GAEnBge,IAAUD,IACV,KAAK,gBAAgBA,GAASC,IAAUD,GAAS5B,CAAgB,IAC1D6B,IAAUD,KACjB,KAAK,gBAAgBC,GAASD,IAAUC,CAAO;AAAA,EAEvD;AAAA,EACH,gBAAgBvhB,GAAOuD,GAAOmc,IAAmB,IAAM;AAChD,UAAMvc,IAAO,KAAK,aACZ2E,IAAO3E,EAAK,MACZlD,IAAMD,IAAQuD;AACpB,QAAIvQ;AACJ,UAAMwuB,IAAO,CAACpS,MAAM;AAEhB,WADAA,EAAI,UAAU7L,GACVvQ,IAAIoc,EAAI,SAAS,GAAGpc,KAAKiN,GAAKjN;AAC9B,QAAAoc,EAAIpc,CAAC,IAAIoc,EAAIpc,IAAIuQ,CAAK;AAAA,IAE9B;AAEA,SADAie,EAAK1Z,CAAI,GACL9U,IAAIgN,GAAOhN,IAAIiN,GAAK,EAAEjN;AACtB,MAAA8U,EAAK9U,CAAC,IAAI,IAAI,KAAK,gBAAe;AAEtC,IAAI,KAAK,YACLwuB,EAAKre,EAAK,OAAO,GAErB,KAAK,MAAMnD,GAAOuD,CAAK,GACnBmc,KACA,KAAK,eAAe5X,GAAM9H,GAAOuD,GAAO,OAAO;AAAA,EAEvD;AAAA,EACA,eAAe6P,GAASpT,GAAOuD,GAAO+G,GAAM;AAAA,EAAC;AAAA,EAChD,gBAAgBtK,GAAOuD,GAAO;AACvB,UAAMJ,IAAO,KAAK;AAClB,QAAI,KAAK,UAAU;AACf,YAAMse,IAAUte,EAAK,QAAQ,OAAOnD,GAAOuD,CAAK;AAChD,MAAIJ,EAAK,YACLsb,GAAYtb,GAAMse,CAAO;AAAA,IAEjC;AACA,IAAAte,EAAK,KAAK,OAAOnD,GAAOuD,CAAK;AAAA,EACjC;AAAA,EACH,MAAM1I,GAAM;AACL,QAAI,KAAK;AACL,WAAK,UAAU,KAAKA,CAAI;AAAA,SACrB;AACH,YAAM,CAAC6G,GAAQ0f,GAAMC,CAAI,IAAIxmB;AAC7B,WAAK6G,CAAM,EAAE0f,GAAMC,CAAI;AAAA,IAC3B;AACA,SAAK,MAAM,aAAa,KAAK;AAAA,MACzB,KAAK;AAAA,MACL,GAAGxmB;AAAA,IACf,CAAS;AAAA,EACL;AAAA,EACA,cAAc;AACV,UAAM0I,IAAQ,UAAU;AACxB,SAAK,MAAM;AAAA,MACP;AAAA,MACA,KAAK,WAAU,EAAG,KAAK,SAASA;AAAA,MAChCA;AAAA,IACZ,CAAS;AAAA,EACL;AAAA,EACA,aAAa;AACT,SAAK,MAAM;AAAA,MACP;AAAA,MACA,KAAK,YAAY,KAAK,SAAS;AAAA,MAC/B;AAAA,IACZ,CAAS;AAAA,EACL;AAAA,EACA,eAAe;AACX,SAAK,MAAM;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,IACZ,CAAS;AAAA,EACL;AAAA,EACA,cAAcvD,GAAOuD,GAAO;AACxB,IAAIA,KACA,KAAK,MAAM;AAAA,MACP;AAAA,MACAvD;AAAA,MACAuD;AAAA,IAChB,CAAa;AAEL,UAAMme,IAAW,UAAU,SAAS;AACpC,IAAIA,KACA,KAAK,MAAM;AAAA,MACP;AAAA,MACA1hB;AAAA,MACA0hB;AAAA,IAChB,CAAa;AAAA,EAET;AAAA,EACA,iBAAiB;AACb,SAAK,MAAM;AAAA,MACP;AAAA,MACA;AAAA,MACA,UAAU;AAAA,IACtB,CAAS;AAAA,EACL;AACJ;AAEA,SAASC,GAAkBpI,GAAOngB,GAAM;AACpC,MAAI,CAACmgB,EAAM,OAAO,MAAM;AACpB,UAAMqI,IAAerI,EAAM,wBAAwBngB,CAAI;AACvD,QAAIkI,IAAS,CAAA;AACb,aAAQtO,IAAI,GAAGqI,IAAOumB,EAAa,QAAQ5uB,IAAIqI,GAAMrI;AACjD,MAAAsO,IAASA,EAAO,OAAOsgB,EAAa5uB,CAAC,EAAE,WAAW,mBAAmBumB,CAAK,CAAC;AAE/E,IAAAA,EAAM,OAAO,OAAOtX,GAAaX,EAAO,KAAK,CAAClO,GAAGM,MAAIN,IAAIM,CAAC,CAAC;AAAA,EAC/D;AACA,SAAO6lB,EAAM,OAAO;AACxB;AACC,SAASsI,GAAqB1e,GAAM;AACjC,QAAMoW,IAAQpW,EAAK,QACb7B,IAASqgB,GAAkBpI,GAAOpW,EAAK,IAAI;AACjD,MAAItM,IAAM0iB,EAAM,SACZvmB,GAAGqI,GAAMymB,GAAMnP;AACnB,QAAMoP,IAAmB,MAAI;AACzB,IAAID,MAAS,SAASA,MAAS,WAG3BhlB,GAAQ6V,CAAI,MACZ9b,IAAM,KAAK,IAAIA,GAAK,KAAK,IAAIirB,IAAOnP,CAAI,KAAK9b,CAAG,IAEpD8b,IAAOmP;AAAA,EACX;AACA,OAAI9uB,IAAI,GAAGqI,IAAOiG,EAAO,QAAQtO,IAAIqI,GAAM,EAAErI;AACzC,IAAA8uB,IAAOvI,EAAM,iBAAiBjY,EAAOtO,CAAC,CAAC,GACvC+uB,EAAgB;AAGpB,OADApP,IAAO,QACH3f,IAAI,GAAGqI,IAAOke,EAAM,MAAM,QAAQvmB,IAAIqI,GAAM,EAAErI;AAC9C,IAAA8uB,IAAOvI,EAAM,gBAAgBvmB,CAAC,GAC9B+uB,EAAgB;AAEpB,SAAOlrB;AACX;AACC,SAASmrB,GAAyBnhB,GAAOohB,GAAOnmB,GAASomB,GAAY;AAClE,QAAMC,IAAYrmB,EAAQ;AAC1B,MAAIwN,GAAM1Q;AACV,SAAIoB,EAAcmoB,CAAS,KACvB7Y,IAAO2Y,EAAM,MAAMnmB,EAAQ,oBAC3BlD,IAAQkD,EAAQ,kBAEhBwN,IAAO6Y,IAAYD,GACnBtpB,IAAQ,IAEL;AAAA,IACH,OAAO0Q,IAAO4Y;AAAA,IACd,OAAAtpB;AAAA,IACA,OAAOqpB,EAAM,OAAOphB,CAAK,IAAIyI,IAAO;AAAA,EAC5C;AACA;AACC,SAAS8Y,GAA0BvhB,GAAOohB,GAAOnmB,GAASomB,GAAY;AACnE,QAAMG,IAASJ,EAAM,QACfH,IAAOO,EAAOxhB,CAAK;AACzB,MAAI8R,IAAO9R,IAAQ,IAAIwhB,EAAOxhB,IAAQ,CAAC,IAAI,MACvC6P,IAAO7P,IAAQwhB,EAAO,SAAS,IAAIA,EAAOxhB,IAAQ,CAAC,IAAI;AAC3D,QAAMyhB,IAAUxmB,EAAQ;AACxB,EAAI6W,MAAS,SACTA,IAAOmP,KAAQpR,MAAS,OAAOuR,EAAM,MAAMA,EAAM,QAAQvR,IAAOoR,KAEhEpR,MAAS,SACTA,IAAOoR,IAAOA,IAAOnP;AAEzB,QAAM3S,IAAQ8hB,KAAQA,IAAO,KAAK,IAAInP,GAAMjC,CAAI,KAAK,IAAI4R;AAEzD,SAAO;AAAA,IACH,OAFS,KAAK,IAAI5R,IAAOiC,CAAI,IAAI,IAAI2P,IAEvBJ;AAAA,IACd,OAAOpmB,EAAQ;AAAA,IACf,OAAAkE;AAAA,EACR;AACA;AACA,SAASuiB,GAAcC,GAAOvlB,GAAMwG,GAAQzQ,GAAG;AAC3C,QAAMyvB,IAAahf,EAAO,MAAM+e,EAAM,CAAC,GAAGxvB,CAAC,GACrC0vB,IAAWjf,EAAO,MAAM+e,EAAM,CAAC,GAAGxvB,CAAC,GACnC6D,IAAM,KAAK,IAAI4rB,GAAYC,CAAQ,GACnC/rB,IAAM,KAAK,IAAI8rB,GAAYC,CAAQ;AACzC,MAAIC,IAAW9rB,GACX+rB,IAASjsB;AACb,EAAI,KAAK,IAAIE,CAAG,IAAI,KAAK,IAAIF,CAAG,MAC5BgsB,IAAWhsB,GACXisB,IAAS/rB,IAEboG,EAAKwG,EAAO,IAAI,IAAImf,GACpB3lB,EAAK,UAAU;AAAA,IACX,UAAA0lB;AAAA,IACA,QAAAC;AAAA,IACA,OAAOH;AAAA,IACP,KAAKC;AAAA,IACL,KAAA7rB;AAAA,IACA,KAAAF;AAAA,EACR;AACA;AACA,SAASksB,GAAWL,GAAOvlB,GAAMwG,GAAQzQ,GAAG;AACxC,SAAIkH,EAAQsoB,CAAK,IACbD,GAAcC,GAAOvlB,GAAMwG,GAAQzQ,CAAC,IAEpCiK,EAAKwG,EAAO,IAAI,IAAIA,EAAO,MAAM+e,GAAOxvB,CAAC,GAEtCiK;AACX;AACA,SAAS6lB,GAAsB3f,GAAM2E,GAAM9H,GAAOuD,GAAO;AACrD,QAAMC,IAASL,EAAK,QACdM,IAASN,EAAK,QACd8c,IAASzc,EAAO,UAAS,GACzB0c,IAAc1c,MAAWC,GACzBwM,IAAS,CAAA;AACf,MAAIjd,GAAGqI,GAAM4B,GAAMulB;AACnB,OAAIxvB,IAAIgN,GAAO3E,IAAO2E,IAAQuD,GAAOvQ,IAAIqI,GAAM,EAAErI;AAC7C,IAAAwvB,IAAQ1a,EAAK9U,CAAC,GACdiK,IAAO,CAAA,GACPA,EAAKuG,EAAO,IAAI,IAAI0c,KAAe1c,EAAO,MAAMyc,EAAOjtB,CAAC,GAAGA,CAAC,GAC5Did,EAAO,KAAK4S,GAAWL,GAAOvlB,GAAMwG,GAAQzQ,CAAC,CAAC;AAElD,SAAOid;AACX;AACA,SAAS8S,GAAWC,GAAQ;AACxB,SAAOA,KAAUA,EAAO,aAAa,UAAaA,EAAO,WAAW;AACxE;AACA,SAASC,GAAQ3Z,GAAM7F,GAAQyf,GAAY;AACvC,SAAI5Z,MAAS,IACF1L,GAAK0L,CAAI,KAEZ7F,EAAO,aAAY,IAAK,IAAI,OAAOA,EAAO,OAAOyf,IAAa,IAAI;AAC9E;AACA,SAASC,GAAYpH,GAAY;AAC7B,MAAI9gB,GAAS+E,GAAOC,GAAK6K,GAAKC;AAC9B,SAAIgR,EAAW,cACX9gB,IAAU8gB,EAAW,OAAOA,EAAW,GACvC/b,IAAQ,QACRC,IAAM,YAENhF,IAAU8gB,EAAW,OAAOA,EAAW,GACvC/b,IAAQ,UACRC,IAAM,QAENhF,KACA6P,IAAM,OACNC,IAAS,YAETD,IAAM,SACNC,IAAS,QAEN;AAAA,IACH,OAAA/K;AAAA,IACA,KAAAC;AAAA,IACA,SAAAhF;AAAA,IACA,KAAA6P;AAAA,IACA,QAAAC;AAAA,EACR;AACA;AACA,SAASqY,GAAiBrH,GAAYjgB,GAAS2gB,GAAO5b,GAAO;AACzD,MAAIwiB,IAAOvnB,EAAQ;AACnB,QAAM8F,IAAM,CAAA;AACZ,MAAI,CAACyhB,GAAM;AACP,IAAAtH,EAAW,gBAAgBna;AAC3B;AAAA,EACJ;AACA,MAAIyhB,MAAS,IAAM;AACf,IAAAtH,EAAW,gBAAgB;AAAA,MACvB,KAAK;AAAA,MACL,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,MAAM;AAAA,IAClB;AACQ;AAAA,EACJ;AACA,QAAM,EAAE,OAAA/b,GAAQ,KAAAC,GAAM,SAAAhF,GAAU,KAAA6P,GAAM,QAAAC,EAAM,IAAMoY,GAAYpH,CAAU;AACxE,EAAIsH,MAAS,YAAY5G,MACrBV,EAAW,qBAAqB,KAC3BU,EAAM,QAAQ,OAAO5b,IACtBwiB,IAAOvY,KACC2R,EAAM,WAAW,OAAO5b,IAChCwiB,IAAOtY,KAEPnJ,EAAI0hB,GAAUvY,GAAQ/K,GAAOC,GAAKhF,CAAO,CAAC,IAAI,IAC9CooB,IAAOvY,KAGflJ,EAAI0hB,GAAUD,GAAMrjB,GAAOC,GAAKhF,CAAO,CAAC,IAAI,IAC5C8gB,EAAW,gBAAgBna;AAC/B;AACA,SAAS0hB,GAAUD,GAAMjwB,GAAGM,GAAGuH,GAAS;AACpC,SAAIA,KACAooB,IAAOE,GAAKF,GAAMjwB,GAAGM,CAAC,GACtB2vB,IAAOG,GAASH,GAAM3vB,GAAGN,CAAC,KAE1BiwB,IAAOG,GAASH,GAAMjwB,GAAGM,CAAC,GAEvB2vB;AACX;AACA,SAASE,GAAKE,GAAMloB,GAAImoB,GAAI;AACxB,SAAOD,MAASloB,IAAKmoB,IAAKD,MAASC,IAAKnoB,IAAKkoB;AACjD;AACA,SAASD,GAAS5vB,GAAGoM,GAAOC,GAAK;AAC7B,SAAOrM,MAAM,UAAUoM,IAAQpM,MAAM,QAAQqM,IAAMrM;AACvD;AACA,SAAS+vB,GAAiB5H,GAAY,EAAE,eAAA6H,EAAa,GAAKhrB,GAAO;AAC7D,EAAAmjB,EAAW,gBAAgB6H,MAAkB,SAAShrB,MAAU,IAAI,OAAO,IAAIgrB;AACnF;AACA,MAAMC,WAAsB7E,GAAkB;AAAA,EAC1C,OAAO,KAAK;AAAA,EACf,OAAO,WAAW;AAAA,IACX,oBAAoB;AAAA,IACpB,iBAAiB;AAAA,IACjB,oBAAoB;AAAA,IACpB,eAAe;AAAA,IACf,SAAS;AAAA,IACT,YAAY;AAAA,MACR,SAAS;AAAA,QACL,MAAM;AAAA,QACN,YAAY;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACpB;AAAA,MACA;AAAA,IACA;AAAA,EACA;AAAA,EACC,OAAO,YAAY;AAAA,IACZ,QAAQ;AAAA,MACJ,SAAS;AAAA,QACL,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,MAAM;AAAA,UACF,QAAQ;AAAA,QAC5B;AAAA,MACA;AAAA,MACY,SAAS;AAAA,QACL,MAAM;AAAA,QACN,aAAa;AAAA,MAC7B;AAAA,IACA;AAAA,EACA;AAAA,EACC,mBAAmB7b,GAAM2E,GAAM9H,GAAOuD,GAAO;AACtC,WAAOuf,GAAsB3f,GAAM2E,GAAM9H,GAAOuD,CAAK;AAAA,EACzD;AAAA,EACH,eAAeJ,GAAM2E,GAAM9H,GAAOuD,GAAO;AAClC,WAAOuf,GAAsB3f,GAAM2E,GAAM9H,GAAOuD,CAAK;AAAA,EACzD;AAAA,EACH,gBAAgBJ,GAAM2E,GAAM9H,GAAOuD,GAAO;AACnC,UAAM,EAAE,QAAAC,GAAS,QAAAC,EAAM,IAAMN,GACvB,EAAE,UAAAgd,IAAU,KAAM,UAAAC,IAAU,IAAG,IAAM,KAAK,UAC1CrD,IAAWvZ,EAAO,SAAS,MAAM2c,IAAWC,GAC5CpD,IAAWvZ,EAAO,SAAS,MAAM0c,IAAWC,GAC5CnQ,IAAS,CAAA;AACf,QAAIjd,GAAGqI,GAAM4B,GAAM5D;AACnB,SAAIrG,IAAIgN,GAAO3E,IAAO2E,IAAQuD,GAAOvQ,IAAIqI,GAAM,EAAErI;AAC7C,MAAAqG,IAAMyO,EAAK9U,CAAC,GACZiK,IAAO,CAAA,GACPA,EAAKuG,EAAO,IAAI,IAAIA,EAAO,MAAM5G,GAAiBvD,GAAK0jB,CAAQ,GAAG/pB,CAAC,GACnEid,EAAO,KAAK4S,GAAWjmB,GAAiBvD,GAAK2jB,CAAQ,GAAG/f,GAAMwG,GAAQzQ,CAAC,CAAC;AAE5E,WAAOid;AAAA,EACX;AAAA,EACH,sBAAsBjS,GAAOub,GAAOtJ,GAAQwM,GAAO;AAC5C,UAAM,sBAAsBze,GAAOub,GAAOtJ,GAAQwM,CAAK;AACvD,UAAMuG,IAAS/S,EAAO;AACtB,IAAI+S,KAAUzJ,MAAU,KAAK,YAAY,WACrCvb,EAAM,MAAM,KAAK,IAAIA,EAAM,KAAKglB,EAAO,GAAG,GAC1ChlB,EAAM,MAAM,KAAK,IAAIA,EAAM,KAAKglB,EAAO,GAAG;AAAA,EAElD;AAAA,EACH,iBAAiB;AACV,WAAO;AAAA,EACX;AAAA,EACH,iBAAiBniB,GAAO;AACjB,UAAMsC,IAAO,KAAK,aACZ,EAAE,QAAAK,GAAS,QAAAC,EAAM,IAAMN,GACvB8M,IAAS,KAAK,UAAUpP,CAAK,GAC7BmiB,IAAS/S,EAAO,SAChBhW,IAAQ8oB,GAAWC,CAAM,IAAI,MAAMA,EAAO,QAAQ,OAAOA,EAAO,MAAM,MAAM,KAAKvf,EAAO,iBAAiBwM,EAAOxM,EAAO,IAAI,CAAC;AAClI,WAAO;AAAA,MACH,OAAO,KAAKD,EAAO,iBAAiByM,EAAOzM,EAAO,IAAI,CAAC;AAAA,MACvD,OAAAvJ;AAAA,IACZ;AAAA,EACI;AAAA,EACA,aAAa;AACT,SAAK,sBAAsB,IAC3B,MAAM,WAAU;AAChB,UAAMkJ,IAAO,KAAK;AAClB,IAAAA,EAAK,QAAQ,KAAK,WAAU,EAAG;AAAA,EACnC;AAAA,EACA,OAAOmH,GAAM;AACT,UAAMnH,IAAO,KAAK;AAClB,SAAK,eAAeA,EAAK,MAAM,GAAGA,EAAK,KAAK,QAAQmH,CAAI;AAAA,EAC5D;AAAA,EACA,eAAewZ,GAAM9jB,GAAOuD,GAAO+G,GAAM;AACrC,UAAMyZ,IAAQzZ,MAAS,SACjB,EAAE,OAAAzJ,GAAQ,aAAa,EAAE,QAAA4C,EAAM,EAAG,IAAM,MACxC9B,IAAO8B,EAAO,aAAY,GAC1BugB,IAAavgB,EAAO,aAAY,GAChCwe,IAAQ,KAAK,UAAS,GACtB,EAAE,eAAAjB,GAAgB,gBAAAG,EAAc,IAAM,KAAK,kBAAkBnhB,GAAOsK,CAAI;AAC9E,aAAQtX,IAAIgN,GAAOhN,IAAIgN,IAAQuD,GAAOvQ,KAAI;AACtC,YAAMid,IAAS,KAAK,UAAUjd,CAAC,GACzBixB,IAAUF,KAAS/pB,EAAciW,EAAOxM,EAAO,IAAI,CAAC,IAAI;AAAA,QAC1D,MAAA9B;AAAA,QACA,MAAMA;AAAA,MACtB,IAAgB,KAAK,yBAAyB3O,CAAC,GAC7BkxB,IAAU,KAAK,yBAAyBlxB,GAAGivB,CAAK,GAChDxF,KAASxM,EAAO,WAAW,CAAA,GAAIxM,EAAO,IAAI,GAC1CsY,IAAa;AAAA,QACf,YAAAiI;AAAA,QACA,MAAMC,EAAQ;AAAA,QACd,oBAAoB,CAACxH,KAASsG,GAAW9S,EAAO,OAAO,KAAKpP,MAAU4b,EAAM,QAAQ5b,MAAU4b,EAAM;AAAA,QACpG,GAAGuH,IAAaC,EAAQ,OAAOC,EAAQ;AAAA,QACvC,GAAGF,IAAaE,EAAQ,SAASD,EAAQ;AAAA,QACzC,QAAQD,IAAaE,EAAQ,OAAO,KAAK,IAAID,EAAQ,IAAI;AAAA,QACzD,OAAOD,IAAa,KAAK,IAAIC,EAAQ,IAAI,IAAIC,EAAQ;AAAA,MACrE;AACY,MAAI/C,MACApF,EAAW,UAAUiF,KAAiB,KAAK,0BAA0BhuB,GAAG8wB,EAAK9wB,CAAC,EAAE,SAAS,WAAWsX,CAAI;AAE5G,YAAMxO,IAAUigB,EAAW,WAAW+H,EAAK9wB,CAAC,EAAE;AAC9C,MAAAowB,GAAiBrH,GAAYjgB,GAAS2gB,GAAO5b,CAAK,GAClD8iB,GAAiB5H,GAAYjgB,GAASmmB,EAAM,KAAK,GACjD,KAAK,cAAc6B,EAAK9wB,CAAC,GAAGA,GAAG+oB,GAAYzR,CAAI;AAAA,IACnD;AAAA,EACJ;AAAA,EACH,WAAWpJ,GAAMijB,GAAW;AACrB,UAAM,EAAE,QAAA3gB,MAAY,KAAK,aACnB+Y,IAAW/Y,EAAO,wBAAwB,KAAK,KAAK,EAAE,OAAO,CAACL,MAAOA,EAAK,WAAW,QAAQ,OAAO,GACpGga,IAAU3Z,EAAO,QAAQ,SACzBia,IAAS,CAAA,GACT2G,IAAgB,KAAK,YAAY,WAAW,UAAUD,CAAS,GAC/DE,IAAcD,KAAiBA,EAAc5gB,EAAO,IAAI,GACxD8gB,IAAW,CAACnhB,MAAO;AACrB,YAAM8M,IAAS9M,EAAK,QAAQ,KAAK,CAAClG,MAAOA,EAAKuG,EAAO,IAAI,MAAM6gB,CAAW,GACpEzqB,IAAMqW,KAAUA,EAAO9M,EAAK,OAAO,IAAI;AAC7C,UAAInJ,EAAcJ,CAAG,KAAK,MAAMA,CAAG;AAC/B,eAAO;AAAA,IAEf;AACA,eAAWuJ,KAAQoZ;AACf,UAAI,EAAA4H,MAAc,UAAaG,EAASnhB,CAAI,QAGxCga,MAAY,MAASM,EAAO,QAAQta,EAAK,KAAK,MAAM,MAAMga,MAAY,UAAaha,EAAK,UAAU,WAClGsa,EAAO,KAAKta,EAAK,KAAK,GAEtBA,EAAK,UAAUjC;AACf;AAGR,WAAKuc,EAAO,UACRA,EAAO,KAAK,MAAS,GAElBA;AAAA,EACX;AAAA,EACH,eAAe5c,GAAO;AACf,WAAO,KAAK,WAAW,QAAWA,CAAK,EAAE;AAAA,EAC7C;AAAA,EACA,gBAAgB;AACZ,WAAO,KAAK,SAAQ,EAAG;AAAA,EAC3B;AAAA,EACA,8BAA8B;AAC1B,UAAMyd,IAAS,KAAK,MAAM,QACpBiG,IAAe,KAAK,MAAM,QAAQ;AACxC,WAAO,OAAO,KAAKjG,CAAM,EAAE,OAAO,CAAC1iB,MAAM0iB,EAAO1iB,CAAG,EAAE,SAAS2oB,CAAY,EAAE,MAAK;AAAA,EACrF;AAAA,EACA,WAAW;AACP,UAAM3gB,IAAO,CAAA,GACP4gB,IAAmB,KAAK,4BAA2B;AACzD,eAAWvF,KAAW,KAAK,MAAM,KAAK;AAClC,MAAArb,EAAKrJ,EAAe,KAAK,MAAM,QAAQ,cAAc,MAAM0kB,EAAQ,UAAUA,EAAQ,SAASuF,CAAgB,CAAC,IAAI;AAEvH,WAAO,OAAO,KAAK5gB,CAAI;AAAA,EAC3B;AAAA,EACH,eAAemV,GAAc7T,GAAMif,GAAW;AACvC,UAAM1G,IAAS,KAAK,WAAW1E,GAAcoL,CAAS,GAChDtjB,IAAQqE,MAAS,SAAYuY,EAAO,QAAQvY,CAAI,IAAI;AAC1D,WAAOrE,MAAU,KAAK4c,EAAO,SAAS,IAAI5c;AAAA,EAC9C;AAAA,EACH,YAAY;AACL,UAAM6J,IAAO,KAAK,SACZvH,IAAO,KAAK,aACZK,IAASL,EAAK,QACdkf,IAAS,CAAA;AACf,QAAIrvB,GAAGqI;AACP,SAAIrI,IAAI,GAAGqI,IAAO8H,EAAK,KAAK,QAAQnQ,IAAIqI,GAAM,EAAErI;AAC5C,MAAAqvB,EAAO,KAAK7e,EAAO,iBAAiB,KAAK,UAAUxQ,CAAC,EAAEwQ,EAAO,IAAI,GAAGxQ,CAAC,CAAC;AAE1E,UAAMyxB,IAAe/Z,EAAK;AAE1B,WAAO;AAAA,MACH,KAFQ+Z,KAAgB5C,GAAqB1e,CAAI;AAAA,MAGjD,QAAAkf;AAAA,MACA,OAAO7e,EAAO;AAAA,MACd,KAAKA,EAAO;AAAA,MACZ,YAAY,KAAK,eAAc;AAAA,MAC/B,OAAOA;AAAA,MACP,SAASkH,EAAK;AAAA,MACd,OAAO+Z,IAAe,IAAI/Z,EAAK,qBAAqBA,EAAK;AAAA,IACrE;AAAA,EACI;AAAA,EACH,yBAAyB7J,GAAO;AACzB,UAAM,EAAE,aAAa,EAAE,QAAA4C,GAAS,UAAAqc,GAAW,OAAO/G,KAAkB,SAAS,EAAE,MAAM2L,GAAY,cAAAC,EAAY,EAAG,IAAM,MAChHzB,IAAawB,KAAa,GAC1BzU,IAAS,KAAK,UAAUpP,CAAK,GAC7BmiB,IAAS/S,EAAO,SAChB2U,IAAW7B,GAAWC,CAAM;AAClC,QAAI/oB,IAAQgW,EAAOxM,EAAO,IAAI,GAC1BzD,IAAQ,GACR6kB,IAAS/E,IAAW,KAAK,WAAWrc,GAAQwM,GAAQ6P,CAAQ,IAAI7lB,GAChE6qB,GAAMxb;AACV,IAAIub,MAAW5qB,MACX+F,IAAQ6kB,IAAS5qB,GACjB4qB,IAAS5qB,IAET2qB,MACA3qB,IAAQ+oB,EAAO,UACf6B,IAAS7B,EAAO,SAASA,EAAO,UAC5B/oB,MAAU,KAAK2D,GAAK3D,CAAK,MAAM2D,GAAKolB,EAAO,MAAM,MACjDhjB,IAAQ,IAEZA,KAAS/F;AAEb,UAAMwoB,IAAa,CAACzoB,EAAc0qB,CAAS,KAAK,CAACE,IAAWF,IAAY1kB;AACxE,QAAI2B,IAAO8B,EAAO,iBAAiBgf,CAAU;AAO7C,QANI,KAAK,MAAM,kBAAkB5hB,CAAK,IAClCikB,IAAOrhB,EAAO,iBAAiBzD,IAAQ6kB,CAAM,IAE7CC,IAAOnjB,GAEX2H,IAAOwb,IAAOnjB,GACV,KAAK,IAAI2H,CAAI,IAAIqb,GAAc;AAC/B,MAAArb,IAAO2Z,GAAQ3Z,GAAM7F,GAAQyf,CAAU,IAAIyB,GACvC1qB,MAAUipB,MACVvhB,KAAQ2H,IAAO;AAEnB,YAAMyb,IAAathB,EAAO,mBAAmB,CAAC,GACxCuhB,IAAWvhB,EAAO,mBAAmB,CAAC,GACtC5M,IAAM,KAAK,IAAIkuB,GAAYC,CAAQ,GACnCruB,IAAM,KAAK,IAAIouB,GAAYC,CAAQ;AACzC,MAAArjB,IAAO,KAAK,IAAI,KAAK,IAAIA,GAAMhL,CAAG,GAAGE,CAAG,GACxCiuB,IAAOnjB,IAAO2H,GACVwW,KAAY,CAAC8E,MACb3U,EAAO,QAAQxM,EAAO,IAAI,EAAE,cAAcsV,CAAY,IAAItV,EAAO,iBAAiBqhB,CAAI,IAAIrhB,EAAO,iBAAiB9B,CAAI;AAAA,IAE9H;AACA,QAAIA,MAAS8B,EAAO,iBAAiByf,CAAU,GAAG;AAC9C,YAAM+B,IAAWrnB,GAAK0L,CAAI,IAAI7F,EAAO,qBAAqByf,CAAU,IAAI;AACxE,MAAAvhB,KAAQsjB,GACR3b,KAAQ2b;AAAA,IACZ;AACA,WAAO;AAAA,MACH,MAAA3b;AAAA,MACA,MAAA3H;AAAA,MACA,MAAAmjB;AAAA,MACA,QAAQA,IAAOxb,IAAO;AAAA,IAClC;AAAA,EACI;AAAA,EACH,yBAAyBzI,GAAOohB,GAAO;AAChC,UAAM1I,IAAQ0I,EAAM,OACdnmB,IAAU,KAAK,SACfwoB,IAAWxoB,EAAQ,UACnBopB,IAAkB3qB,EAAeuB,EAAQ,iBAAiB,KAAQ;AACxE,QAAIqpB,GAAQ7b;AACZ,UAAM8b,IAAY,KAAK,cAAa;AACpC,QAAInD,EAAM,SAAS;AACf,YAAMC,IAAaoC,IAAW,KAAK,eAAezjB,CAAK,IAAIohB,EAAM,YAC3DjkB,IAAQlC,EAAQ,iBAAiB,SAASsmB,GAA0BvhB,GAAOohB,GAAOnmB,GAASomB,IAAakD,CAAS,IAAIpD,GAAyBnhB,GAAOohB,GAAOnmB,GAASomB,IAAakD,CAAS,GAC3LC,IAAS,KAAK,MAAM,QAAQ,cAAc,MAAM,KAAK,WAAU,EAAG,UAAU,KAAK,WAAU,EAAG,SAC9FC,IAAa,KAAK,WAAW,QAAQ/qB,EAAe8qB,GAAQ,KAAK,4BAA2B,CAAE,CAAC,GAC/FE,IAAa,KAAK,eAAe,KAAK,OAAO,KAAK,YAAY,OAAOjB,IAAWzjB,IAAQ,MAAS,IAAIykB;AAC3G,MAAAH,IAASnnB,EAAM,QAAQA,EAAM,QAAQunB,IAAavnB,EAAM,QAAQ,GAChEsL,IAAO,KAAK,IAAI4b,GAAiBlnB,EAAM,QAAQA,EAAM,KAAK;AAAA,IAC9D;AACI,MAAAmnB,IAAS5L,EAAM,iBAAiB,KAAK,UAAU1Y,CAAK,EAAE0Y,EAAM,IAAI,GAAG1Y,CAAK,GACxEyI,IAAO,KAAK,IAAI4b,GAAiBjD,EAAM,MAAMA,EAAM,KAAK;AAE5D,WAAO;AAAA,MACH,MAAMkD,IAAS7b,IAAO;AAAA,MACtB,MAAM6b,IAAS7b,IAAO;AAAA,MACtB,QAAA6b;AAAA,MACA,MAAA7b;AAAA,IACZ;AAAA,EACI;AAAA,EACA,OAAO;AACH,UAAMnG,IAAO,KAAK,aACZM,IAASN,EAAK,QACdqiB,IAAQriB,EAAK,MACb9H,IAAOmqB,EAAM;AACnB,QAAIxyB,IAAI;AACR,WAAMA,IAAIqI,GAAM,EAAErI;AACd,MAAI,KAAK,UAAUA,CAAC,EAAEyQ,EAAO,IAAI,MAAM,QAAQ,CAAC+hB,EAAMxyB,CAAC,EAAE,UACrDwyB,EAAMxyB,CAAC,EAAE,KAAK,KAAK,IAAI;AAAA,EAGnC;AACJ;AAEA,MAAMyyB,WAAyBzG,GAAkB;AAAA,EAC7C,OAAO,KAAK;AAAA,EACf,OAAO,WAAW;AAAA,IACX,oBAAoB;AAAA,IACpB,iBAAiB;AAAA,IACjB,YAAY;AAAA,MACR,SAAS;AAAA,QACL,MAAM;AAAA,QACN,YAAY;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACpB;AAAA,MACA;AAAA,IACA;AAAA,EACA;AAAA,EACC,OAAO,YAAY;AAAA,IACZ,QAAQ;AAAA,MACJ,GAAG;AAAA,QACC,MAAM;AAAA,MACtB;AAAA,MACY,GAAG;AAAA,QACC,MAAM;AAAA,MACtB;AAAA,IACA;AAAA,EACA;AAAA,EACI,aAAa;AACT,SAAK,sBAAsB,IAC3B,MAAM,WAAU;AAAA,EACpB;AAAA,EACH,mBAAmB7b,GAAM2E,GAAM9H,GAAOuD,GAAO;AACtC,UAAM0M,IAAS,MAAM,mBAAmB9M,GAAM2E,GAAM9H,GAAOuD,CAAK;AAChE,aAAQvQ,IAAI,GAAGA,IAAIid,EAAO,QAAQjd;AAC9B,MAAAid,EAAOjd,CAAC,EAAE,UAAU,KAAK,0BAA0BA,IAAIgN,CAAK,EAAE;AAElE,WAAOiQ;AAAA,EACX;AAAA,EACH,eAAe9M,GAAM2E,GAAM9H,GAAOuD,GAAO;AAClC,UAAM0M,IAAS,MAAM,eAAe9M,GAAM2E,GAAM9H,GAAOuD,CAAK;AAC5D,aAAQvQ,IAAI,GAAGA,IAAIid,EAAO,QAAQjd,KAAI;AAClC,YAAMiK,IAAO6K,EAAK9H,IAAQhN,CAAC;AAC3B,MAAAid,EAAOjd,CAAC,EAAE,UAAUuH,EAAe0C,EAAK,CAAC,GAAG,KAAK,0BAA0BjK,IAAIgN,CAAK,EAAE,MAAM;AAAA,IAChG;AACA,WAAOiQ;AAAA,EACX;AAAA,EACH,gBAAgB9M,GAAM2E,GAAM9H,GAAOuD,GAAO;AACnC,UAAM0M,IAAS,MAAM,gBAAgB9M,GAAM2E,GAAM9H,GAAOuD,CAAK;AAC7D,aAAQvQ,IAAI,GAAGA,IAAIid,EAAO,QAAQjd,KAAI;AAClC,YAAMiK,IAAO6K,EAAK9H,IAAQhN,CAAC;AAC3B,MAAAid,EAAOjd,CAAC,EAAE,UAAUuH,EAAe0C,KAAQA,EAAK,KAAK,CAACA,EAAK,GAAG,KAAK,0BAA0BjK,IAAIgN,CAAK,EAAE,MAAM;AAAA,IAClH;AACA,WAAOiQ;AAAA,EACX;AAAA,EACH,iBAAiB;AACV,UAAMnI,IAAO,KAAK,YAAY;AAC9B,QAAInR,IAAM;AACV,aAAQ3D,IAAI8U,EAAK,SAAS,GAAG9U,KAAK,GAAG,EAAEA;AACnC,MAAA2D,IAAM,KAAK,IAAIA,GAAKmR,EAAK9U,CAAC,EAAE,KAAK,KAAK,0BAA0BA,CAAC,CAAC,IAAI,CAAC;AAE3E,WAAO2D,IAAM,KAAKA;AAAA,EACtB;AAAA,EACH,iBAAiBkK,GAAO;AACjB,UAAMsC,IAAO,KAAK,aACZ8c,IAAS,KAAK,MAAM,KAAK,UAAU,CAAA,GACnC,EAAE,QAAA9b,GAAS,QAAAC,EAAM,IAAMjB,GACvB8M,IAAS,KAAK,UAAUpP,CAAK,GAC7B5M,IAAIkQ,EAAO,iBAAiB8L,EAAO,CAAC,GACpCtc,IAAIyQ,EAAO,iBAAiB6L,EAAO,CAAC,GACpCnd,IAAImd,EAAO;AACjB,WAAO;AAAA,MACH,OAAOgQ,EAAOpf,CAAK,KAAK;AAAA,MACxB,OAAO,MAAM5M,IAAI,OAAON,KAAKb,IAAI,OAAOA,IAAI,MAAM;AAAA,IAC9D;AAAA,EACI;AAAA,EACA,OAAOwX,GAAM;AACT,UAAMlH,IAAS,KAAK,YAAY;AAChC,SAAK,eAAeA,GAAQ,GAAGA,EAAO,QAAQkH,CAAI;AAAA,EACtD;AAAA,EACA,eAAelH,GAAQpD,GAAOuD,GAAO+G,GAAM;AACvC,UAAMyZ,IAAQzZ,MAAS,SACjB,EAAE,QAAA9G,GAAS,QAAAC,EAAM,IAAM,KAAK,aAC5B,EAAE,eAAAud,GAAgB,gBAAAG,EAAc,IAAM,KAAK,kBAAkBnhB,GAAOsK,CAAI,GACxE2T,IAAQza,EAAO,MACf0a,IAAQza,EAAO;AACrB,aAAQzQ,IAAIgN,GAAOhN,IAAIgN,IAAQuD,GAAOvQ,KAAI;AACtC,YAAMgR,IAAQZ,EAAOpQ,CAAC,GAChBid,IAAS,CAAC8T,KAAS,KAAK,UAAU/wB,CAAC,GACnC+oB,IAAa,CAAA,GACbjK,IAASiK,EAAWkC,CAAK,IAAI8F,IAAQvgB,EAAO,mBAAmB,GAAG,IAAIA,EAAO,iBAAiByM,EAAOgO,CAAK,CAAC,GAC3GlM,IAASgK,EAAWmC,CAAK,IAAI6F,IAAQtgB,EAAO,aAAY,IAAKA,EAAO,iBAAiBwM,EAAOiO,CAAK,CAAC;AACxG,MAAAnC,EAAW,OAAO,MAAMjK,CAAM,KAAK,MAAMC,CAAM,GAC3CoP,MACApF,EAAW,UAAUiF,KAAiB,KAAK,0BAA0BhuB,GAAGgR,EAAM,SAAS,WAAWsG,CAAI,GAClGyZ,MACAhI,EAAW,QAAQ,SAAS,KAGpC,KAAK,cAAc/X,GAAOhR,GAAG+oB,GAAYzR,CAAI;AAAA,IACjD;AAAA,EACJ;AAAA,EACH,0BAA0BzJ,GAAOyJ,GAAM;AAChC,UAAM2F,IAAS,KAAK,UAAUpP,CAAK;AACnC,QAAIS,IAAS,MAAM,0BAA0BT,GAAOyJ,CAAI;AACxD,IAAIhJ,EAAO,YACPA,IAAS,OAAO,OAAO,CAAA,GAAIA,GAAQ;AAAA,MAC/B,SAAS;AAAA,IACzB,CAAa;AAEL,UAAMsI,IAAStI,EAAO;AACtB,WAAIgJ,MAAS,aACThJ,EAAO,SAAS,IAEpBA,EAAO,UAAU/G,EAAe0V,KAAUA,EAAO,SAASrG,CAAM,GACzDtI;AAAA,EACX;AACJ;AAEA,SAASokB,GAAkB/b,GAAUgc,GAAeC,GAAQ;AACxD,MAAIC,IAAS,GACTC,IAAS,GACT/R,IAAU,GACVC,IAAU;AACd,MAAI2R,IAAgBvoB,GAAK;AACrB,UAAM2oB,IAAapc,GACbqc,IAAWD,IAAaJ,GACxBM,IAAS,KAAK,IAAIF,CAAU,GAC5BG,IAAS,KAAK,IAAIH,CAAU,GAC5BI,IAAO,KAAK,IAAIH,CAAQ,GACxBI,IAAO,KAAK,IAAIJ,CAAQ,GACxBK,IAAU,CAAC5mB,GAAOrM,GAAGM,MAAIqM,GAAcN,GAAOsmB,GAAYC,GAAU,EAAI,IAAI,IAAI,KAAK,IAAI5yB,GAAGA,IAAIwyB,GAAQlyB,GAAGA,IAAIkyB,CAAM,GACrHU,IAAU,CAAC7mB,GAAOrM,GAAGM,MAAIqM,GAAcN,GAAOsmB,GAAYC,GAAU,EAAI,IAAI,KAAK,KAAK,IAAI5yB,GAAGA,IAAIwyB,GAAQlyB,GAAGA,IAAIkyB,CAAM,GACtHW,IAAOF,EAAQ,GAAGJ,GAAQE,CAAI,GAC9BK,IAAOH,EAAQ7oB,GAAS0oB,GAAQE,CAAI,GACpCK,IAAOH,EAAQnpB,GAAI8oB,GAAQE,CAAI,GAC/BO,IAAOJ,EAAQnpB,IAAKK,GAAS0oB,GAAQE,CAAI;AAC/C,IAAAP,KAAUU,IAAOE,KAAQ,GACzBX,KAAUU,IAAOE,KAAQ,GACzB3S,IAAU,EAAEwS,IAAOE,KAAQ,GAC3BzS,IAAU,EAAEwS,IAAOE,KAAQ;AAAA,EAC/B;AACA,SAAO;AAAA,IACH,QAAAb;AAAA,IACA,QAAAC;AAAA,IACA,SAAA/R;AAAA,IACA,SAAAC;AAAA,EACR;AACA;AACA,MAAM2S,WAA2B3H,GAAkB;AAAA,EAC/C,OAAO,KAAK;AAAA,EACf,OAAO,WAAW;AAAA,IACX,oBAAoB;AAAA,IACpB,iBAAiB;AAAA,IACjB,WAAW;AAAA,MACP,eAAe;AAAA,MACf,cAAc;AAAA,IAC1B;AAAA,IACQ,YAAY;AAAA,MACR,SAAS;AAAA,QACL,MAAM;AAAA,QACN,YAAY;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACpB;AAAA,MACA;AAAA,IACA;AAAA,IACQ,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,eAAe;AAAA,IACf,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,WAAW;AAAA,EACnB;AAAA,EACI,OAAO,cAAc;AAAA,IACjB,aAAa,CAAC9Z,MAAOA,MAAS;AAAA,IAC9B,YAAY,CAACA,MAAOA,MAAS,aAAa,CAACA,EAAK,WAAW,YAAY,KAAK,CAACA,EAAK,WAAW,iBAAiB;AAAA,EACtH;AAAA,EACC,OAAO,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,SAAS;AAAA,MACL,QAAQ;AAAA,QACJ,QAAQ;AAAA,UACJ,eAAgByD,GAAO;AACnB,kBAAMb,IAAOa,EAAM;AACnB,gBAAIb,EAAK,OAAO,UAAUA,EAAK,SAAS,QAAQ;AAC5C,oBAAM,EAAE,QAAQ,EAAE,YAAA8e,GAAa,OAAAttB,EAAK,MAASqP,EAAM,OAAO;AAC1D,qBAAOb,EAAK,OAAO,IAAI,CAAC+e,GAAO7zB,MAAI;AAE/B,sBAAM0W,IADOf,EAAM,eAAe,CAAC,EAChB,WAAW,SAAS3V,CAAC;AACxC,uBAAO;AAAA,kBACH,MAAM6zB;AAAA,kBACN,WAAWnd,EAAM;AAAA,kBACjB,aAAaA,EAAM;AAAA,kBACnB,WAAWpQ;AAAA,kBACX,WAAWoQ,EAAM;AAAA,kBACjB,YAAYkd;AAAA,kBACZ,QAAQ,CAACje,EAAM,kBAAkB3V,CAAC;AAAA,kBAClC,OAAOA;AAAA,gBAC3C;AAAA,cAC4B,CAAC;AAAA,YACL;AACA,mBAAO,CAAA;AAAA,UACX;AAAA,QACpB;AAAA,QACgB,QAASN,GAAGo0B,GAAYC,GAAQ;AAC5B,UAAAA,EAAO,MAAM,qBAAqBD,EAAW,KAAK,GAClDC,EAAO,MAAM,OAAM;AAAA,QACvB;AAAA,MAChB;AAAA,IACA;AAAA,EACA;AAAA,EACI,YAAYpe,GAAOoQ,GAAa;AAC5B,UAAMpQ,GAAOoQ,CAAY,GACzB,KAAK,sBAAsB,IAC3B,KAAK,cAAc,QACnB,KAAK,cAAc,QACnB,KAAK,UAAU,QACf,KAAK,UAAU;AAAA,EACnB;AAAA,EACA,aAAa;AAAA,EAAC;AAAA,EACjB,MAAM/Y,GAAOuD,GAAO;AACb,UAAMuE,IAAO,KAAK,WAAU,EAAG,MACzB3E,IAAO,KAAK;AAClB,QAAI,KAAK,aAAa;AAClB,MAAAA,EAAK,UAAU2E;AAAA,SACZ;AACH,UAAIkf,IAAS,CAACh0B,MAAI,CAAC8U,EAAK9U,CAAC;AACzB,UAAImH,EAAS2N,EAAK9H,CAAK,CAAC,GAAG;AACvB,cAAM,EAAE,KAAApE,IAAK,QAAO,IAAM,KAAK;AAC/B,QAAAorB,IAAS,CAACh0B,MAAI,CAAC4J,GAAiBkL,EAAK9U,CAAC,GAAG4I,CAAG;AAAA,MAChD;AACA,UAAI5I,GAAGqI;AACP,WAAIrI,IAAIgN,GAAO3E,IAAO2E,IAAQuD,GAAOvQ,IAAIqI,GAAM,EAAErI;AAC7C,QAAAmQ,EAAK,QAAQnQ,CAAC,IAAIg0B,EAAOh0B,CAAC;AAAA,IAElC;AAAA,EACJ;AAAA,EACH,eAAe;AACR,WAAO8L,GAAU,KAAK,QAAQ,WAAW,EAAE;AAAA,EAC/C;AAAA,EACH,oBAAoB;AACb,WAAOA,GAAU,KAAK,QAAQ,aAAa;AAAA,EAC/C;AAAA,EACH,sBAAsB;AACf,QAAIjI,IAAMuG,GACNzG,IAAM,CAACyG;AACX,aAAQpK,IAAI,GAAGA,IAAI,KAAK,MAAM,KAAK,SAAS,QAAQ,EAAEA;AAClD,UAAI,KAAK,MAAM,iBAAiBA,CAAC,KAAK,KAAK,MAAM,eAAeA,CAAC,EAAE,SAAS,KAAK,OAAO;AACpF,cAAMgrB,IAAa,KAAK,MAAM,eAAehrB,CAAC,EAAE,YAC1C2W,IAAWqU,EAAW,aAAY,GAClC2H,IAAgB3H,EAAW,kBAAiB;AAClD,QAAAnnB,IAAM,KAAK,IAAIA,GAAK8S,CAAQ,GAC5BhT,IAAM,KAAK,IAAIA,GAAKgT,IAAWgc,CAAa;AAAA,MAChD;AAEJ,WAAO;AAAA,MACH,UAAU9uB;AAAA,MACV,eAAeF,IAAME;AAAA,IACjC;AAAA,EACI;AAAA,EACH,OAAOyT,GAAM;AACN,UAAM3B,IAAQ,KAAK,OACb,EAAE,WAAA6Q,EAAS,IAAM7Q,GACjBxF,IAAO,KAAK,aACZ8jB,IAAO9jB,EAAK,MACZ+jB,IAAU,KAAK,sBAAsB,KAAK,aAAaD,CAAI,IAAI,KAAK,QAAQ,SAC5EE,IAAU,KAAK,KAAK,KAAK,IAAI3N,EAAU,OAAOA,EAAU,MAAM,IAAI0N,KAAW,GAAG,CAAC,GACjFtB,IAAS,KAAK,IAAIprB,GAAa,KAAK,QAAQ,QAAQ2sB,CAAO,GAAG,CAAC,GAC/DC,IAAc,KAAK,eAAe,KAAK,KAAK,GAC5C,EAAE,eAAAzB,GAAgB,UAAAhc,MAAc,KAAK,oBAAmB,GACxD,EAAE,QAAAkc,GAAS,QAAAC,GAAS,SAAA/R,GAAU,SAAAC,EAAO,IAAM0R,GAAkB/b,GAAUgc,GAAeC,CAAM,GAC5FlR,KAAY8E,EAAU,QAAQ0N,KAAWrB,GACzClR,KAAa6E,EAAU,SAAS0N,KAAWpB,GAC3CuB,IAAY,KAAK,IAAI,KAAK,IAAI3S,GAAUC,CAAS,IAAI,GAAG,CAAC,GACzD2S,IAAc5sB,GAAY,KAAK,QAAQ,QAAQ2sB,CAAS,GACxDE,IAAc,KAAK,IAAID,IAAc1B,GAAQ,CAAC,GAC9C4B,KAAgBF,IAAcC,KAAe,KAAK,8BAA6B;AACrF,SAAK,UAAUxT,IAAUuT,GACzB,KAAK,UAAUtT,IAAUsT,GACzBnkB,EAAK,QAAQ,KAAK,eAAc,GAChC,KAAK,cAAcmkB,IAAcE,IAAe,KAAK,qBAAqB,KAAK,KAAK,GACpF,KAAK,cAAc,KAAK,IAAI,KAAK,cAAcA,IAAeJ,GAAa,CAAC,GAC5E,KAAK,eAAeH,GAAM,GAAGA,EAAK,QAAQ3c,CAAI;AAAA,EAClD;AAAA,EACH,eAAetX,GAAG+wB,GAAO;AAClB,UAAMrZ,IAAO,KAAK,SACZvH,IAAO,KAAK,aACZwiB,IAAgB,KAAK,kBAAiB;AAC5C,WAAI5B,KAASrZ,EAAK,UAAU,iBAAiB,CAAC,KAAK,MAAM,kBAAkB1X,CAAC,KAAKmQ,EAAK,QAAQnQ,CAAC,MAAM,QAAQmQ,EAAK,KAAKnQ,CAAC,EAAE,SAC/G,IAEJ,KAAK,uBAAuBmQ,EAAK,QAAQnQ,CAAC,IAAI2yB,IAAgBvoB,CAAG;AAAA,EAC5E;AAAA,EACA,eAAe6pB,GAAMjnB,GAAOuD,GAAO+G,GAAM;AACrC,UAAMyZ,IAAQzZ,MAAS,SACjB3B,IAAQ,KAAK,OACb6Q,IAAY7Q,EAAM,WAElB8e,IADO9e,EAAM,QACQ,WACrB+e,KAAWlO,EAAU,OAAOA,EAAU,SAAS,GAC/CmO,KAAWnO,EAAU,MAAMA,EAAU,UAAU,GAC/CoO,IAAe7D,KAAS0D,EAAc,cACtCF,IAAcK,IAAe,IAAI,KAAK,aACtCN,IAAcM,IAAe,IAAI,KAAK,aACtC,EAAE,eAAA5G,GAAgB,gBAAAG,EAAc,IAAM,KAAK,kBAAkBnhB,GAAOsK,CAAI;AAC9E,QAAIyb,IAAa,KAAK,aAAY,GAC9B/yB;AACJ,SAAIA,IAAI,GAAGA,IAAIgN,GAAO,EAAEhN;AACpB,MAAA+yB,KAAc,KAAK,eAAe/yB,GAAG+wB,CAAK;AAE9C,SAAI/wB,IAAIgN,GAAOhN,IAAIgN,IAAQuD,GAAO,EAAEvQ,GAAE;AAClC,YAAM2yB,IAAgB,KAAK,eAAe3yB,GAAG+wB,CAAK,GAC5C8D,IAAMZ,EAAKj0B,CAAC,GACZ+oB,IAAa;AAAA,QACf,GAAG2L,IAAU,KAAK;AAAA,QAClB,GAAGC,IAAU,KAAK;AAAA,QAClB,YAAA5B;AAAA,QACA,UAAUA,IAAaJ;AAAA,QACvB,eAAAA;AAAA,QACA,aAAA2B;AAAA,QACA,aAAAC;AAAA,MAChB;AACY,MAAIpG,MACApF,EAAW,UAAUiF,KAAiB,KAAK,0BAA0BhuB,GAAG60B,EAAI,SAAS,WAAWvd,CAAI,IAExGyb,KAAcJ,GACd,KAAK,cAAckC,GAAK70B,GAAG+oB,GAAYzR,CAAI;AAAA,IAC/C;AAAA,EACJ;AAAA,EACA,iBAAiB;AACb,UAAMnH,IAAO,KAAK,aACZ2kB,IAAW3kB,EAAK;AACtB,QAAI4kB,IAAQ,GACR/0B;AACJ,SAAIA,IAAI,GAAGA,IAAI80B,EAAS,QAAQ90B,KAAI;AAChC,YAAMiH,IAAQkJ,EAAK,QAAQnQ,CAAC;AAC5B,MAAIiH,MAAU,QAAQ,CAAC,MAAMA,CAAK,KAAK,KAAK,MAAM,kBAAkBjH,CAAC,KAAK,CAAC80B,EAAS90B,CAAC,EAAE,WACnF+0B,KAAS,KAAK,IAAI9tB,CAAK;AAAA,IAE/B;AACA,WAAO8tB;AAAA,EACX;AAAA,EACA,uBAAuB9tB,GAAO;AAC1B,UAAM8tB,IAAQ,KAAK,YAAY;AAC/B,WAAIA,IAAQ,KAAK,CAAC,MAAM9tB,CAAK,IAClBmD,KAAO,KAAK,IAAInD,CAAK,IAAI8tB,KAE7B;AAAA,EACX;AAAA,EACA,iBAAiBlnB,GAAO;AACpB,UAAMsC,IAAO,KAAK,aACZwF,IAAQ,KAAK,OACbsX,IAAStX,EAAM,KAAK,UAAU,CAAA,GAC9B1O,IAAQwL,GAAatC,EAAK,QAAQtC,CAAK,GAAG8H,EAAM,QAAQ,MAAM;AACpE,WAAO;AAAA,MACH,OAAOsX,EAAOpf,CAAK,KAAK;AAAA,MACxB,OAAA5G;AAAA,IACZ;AAAA,EACI;AAAA,EACA,kBAAkBgtB,GAAM;AACpB,QAAItwB,IAAM;AACV,UAAMgS,IAAQ,KAAK;AACnB,QAAI3V,GAAGqI,GAAM8H,GAAM6a,GAAYliB;AAC/B,QAAI,CAACmrB;AACD,WAAIj0B,IAAI,GAAGqI,IAAOsN,EAAM,KAAK,SAAS,QAAQ3V,IAAIqI,GAAM,EAAErI;AACtD,YAAI2V,EAAM,iBAAiB3V,CAAC,GAAG;AAC3B,UAAAmQ,IAAOwF,EAAM,eAAe3V,CAAC,GAC7Bi0B,IAAO9jB,EAAK,MACZ6a,IAAa7a,EAAK;AAClB;AAAA,QACJ;AAAA;AAGR,QAAI,CAAC8jB;AACD,aAAO;AAEX,SAAIj0B,IAAI,GAAGqI,IAAO4rB,EAAK,QAAQj0B,IAAIqI,GAAM,EAAErI;AACvC,MAAA8I,IAAUkiB,EAAW,0BAA0BhrB,CAAC,GAC5C8I,EAAQ,gBAAgB,YACxBnF,IAAM,KAAK,IAAIA,GAAKmF,EAAQ,eAAe,GAAGA,EAAQ,oBAAoB,CAAC;AAGnF,WAAOnF;AAAA,EACX;AAAA,EACA,aAAaswB,GAAM;AACf,QAAItwB,IAAM;AACV,aAAQ3D,IAAI,GAAGqI,IAAO4rB,EAAK,QAAQj0B,IAAIqI,GAAM,EAAErI,GAAE;AAC7C,YAAM8I,IAAU,KAAK,0BAA0B9I,CAAC;AAChD,MAAA2D,IAAM,KAAK,IAAIA,GAAKmF,EAAQ,UAAU,GAAGA,EAAQ,eAAe,CAAC;AAAA,IACrE;AACA,WAAOnF;AAAA,EACX;AAAA,EACH,qBAAqBoiB,GAAc;AAC5B,QAAIiP,IAAmB;AACvB,aAAQh1B,IAAI,GAAGA,IAAI+lB,GAAc,EAAE/lB;AAC/B,MAAI,KAAK,MAAM,iBAAiBA,CAAC,MAC7Bg1B,KAAoB,KAAK,eAAeh1B,CAAC;AAGjD,WAAOg1B;AAAA,EACX;AAAA,EACH,eAAejP,GAAc;AACtB,WAAO,KAAK,IAAIxe,EAAe,KAAK,MAAM,KAAK,SAASwe,CAAY,EAAE,QAAQ,CAAC,GAAG,CAAC;AAAA,EACvF;AAAA,EACH,gCAAgC;AACzB,WAAO,KAAK,qBAAqB,KAAK,MAAM,KAAK,SAAS,MAAM,KAAK;AAAA,EACzE;AACJ;AAEA,MAAMkP,WAAuBjJ,GAAkB;AAAA,EAC3C,OAAO,KAAK;AAAA,EACf,OAAO,WAAW;AAAA,IACX,oBAAoB;AAAA,IACpB,iBAAiB;AAAA,IACjB,UAAU;AAAA,IACV,UAAU;AAAA,EAClB;AAAA,EACC,OAAO,YAAY;AAAA,IACZ,QAAQ;AAAA,MACJ,SAAS;AAAA,QACL,MAAM;AAAA,MACtB;AAAA,MACY,SAAS;AAAA,QACL,MAAM;AAAA,MACtB;AAAA,IACA;AAAA,EACA;AAAA,EACI,aAAa;AACT,SAAK,sBAAsB,IAC3B,KAAK,qBAAqB,IAC1B,MAAM,WAAU;AAAA,EACpB;AAAA,EACA,OAAO1U,GAAM;AACT,UAAMnH,IAAO,KAAK,aACZ,EAAE,SAASyH,GAAO,MAAMxH,IAAS,CAAA,GAAK,UAAA8kB,EAAQ,IAAM/kB,GACpDE,IAAqB,KAAK,MAAM;AACtC,QAAI,EAAE,OAAArD,GAAQ,OAAAuD,EAAK,IAAML,GAAiCC,GAAMC,GAAQC,CAAkB;AAC1F,SAAK,aAAarD,GAClB,KAAK,aAAauD,GACdW,GAAoBf,CAAI,MACxBnD,IAAQ,GACRuD,IAAQH,EAAO,SAEnBwH,EAAK,SAAS,KAAK,OACnBA,EAAK,gBAAgB,KAAK,OAC1BA,EAAK,aAAa,CAAC,CAACsd,EAAS,YAC7Btd,EAAK,SAASxH;AACd,UAAMtH,IAAU,KAAK,6BAA6BwO,CAAI;AACtD,IAAK,KAAK,QAAQ,aACdxO,EAAQ,cAAc,IAE1BA,EAAQ,UAAU,KAAK,QAAQ,SAC/B,KAAK,cAAc8O,GAAM,QAAW;AAAA,MAChC,UAAU,CAACvH;AAAA,MACX,SAAAvH;AAAA,IACZ,GAAWwO,CAAI,GACP,KAAK,eAAelH,GAAQpD,GAAOuD,GAAO+G,CAAI;AAAA,EAClD;AAAA,EACA,eAAelH,GAAQpD,GAAOuD,GAAO+G,GAAM;AACvC,UAAMyZ,IAAQzZ,MAAS,SACjB,EAAE,QAAA9G,GAAS,QAAAC,GAAS,UAAAqc,GAAW,UAAAoI,EAAQ,IAAM,KAAK,aAClD,EAAE,eAAAlH,GAAgB,gBAAAG,EAAc,IAAM,KAAK,kBAAkBnhB,GAAOsK,CAAI,GACxE2T,IAAQza,EAAO,MACf0a,IAAQza,EAAO,MACf,EAAE,UAAAE,GAAW,SAAAuT,EAAO,IAAM,KAAK,SAC/BiR,IAAe3pB,GAASmF,CAAQ,IAAIA,IAAW,OAAO,mBACtDykB,IAAe,KAAK,MAAM,uBAAuBrE,KAASzZ,MAAS,QACnErK,IAAMD,IAAQuD,GACd8kB,IAAcjlB,EAAO;AAC3B,QAAIklB,IAAatoB,IAAQ,KAAK,KAAK,UAAUA,IAAQ,CAAC;AACtD,aAAQhN,IAAI,GAAGA,IAAIq1B,GAAa,EAAEr1B,GAAE;AAChC,YAAMgR,IAAQZ,EAAOpQ,CAAC,GAChB+oB,IAAaqM,IAAepkB,IAAQ,CAAA;AAC1C,UAAIhR,IAAIgN,KAAShN,KAAKiN,GAAK;AACvB,QAAA8b,EAAW,OAAO;AAClB;AAAA,MACJ;AACA,YAAM9L,IAAS,KAAK,UAAUjd,CAAC,GACzBu1B,IAAWvuB,EAAciW,EAAOiO,CAAK,CAAC,GACtCpM,IAASiK,EAAWkC,CAAK,IAAIza,EAAO,iBAAiByM,EAAOgO,CAAK,GAAGjrB,CAAC,GACrE+e,IAASgK,EAAWmC,CAAK,IAAI6F,KAASwE,IAAW9kB,EAAO,aAAY,IAAKA,EAAO,iBAAiBqc,IAAW,KAAK,WAAWrc,GAAQwM,GAAQ6P,CAAQ,IAAI7P,EAAOiO,CAAK,GAAGlrB,CAAC;AAC9K,MAAA+oB,EAAW,OAAO,MAAMjK,CAAM,KAAK,MAAMC,CAAM,KAAKwW,GACpDxM,EAAW,OAAO/oB,IAAI,KAAK,KAAK,IAAIid,EAAOgO,CAAK,IAAIqK,EAAWrK,CAAK,CAAC,IAAIkK,GACrEjR,MACA6E,EAAW,SAAS9L,GACpB8L,EAAW,MAAMmM,EAAS,KAAKl1B,CAAC,IAEhCmuB,MACApF,EAAW,UAAUiF,KAAiB,KAAK,0BAA0BhuB,GAAGgR,EAAM,SAAS,WAAWsG,CAAI,IAErG8d,KACD,KAAK,cAAcpkB,GAAOhR,GAAG+oB,GAAYzR,CAAI,GAEjDge,IAAarY;AAAA,IACjB;AAAA,EACJ;AAAA,EACH,iBAAiB;AACV,UAAM9M,IAAO,KAAK,aACZ8b,IAAU9b,EAAK,SACfqlB,IAASvJ,EAAQ,WAAWA,EAAQ,QAAQ,eAAe,GAC3DnX,IAAO3E,EAAK,QAAQ,CAAA;AAC1B,QAAI,CAAC2E,EAAK;AACN,aAAO0gB;AAEX,UAAMjY,IAAazI,EAAK,CAAC,EAAE,KAAK,KAAK,0BAA0B,CAAC,CAAC,GAC3D2gB,IAAY3gB,EAAKA,EAAK,SAAS,CAAC,EAAE,KAAK,KAAK,0BAA0BA,EAAK,SAAS,CAAC,CAAC;AAC5F,WAAO,KAAK,IAAI0gB,GAAQjY,GAAYkY,CAAS,IAAI;AAAA,EACrD;AAAA,EACA,OAAO;AACH,UAAMtlB,IAAO,KAAK;AAClB,IAAAA,EAAK,QAAQ,oBAAoB,KAAK,MAAM,WAAWA,EAAK,OAAO,IAAI,GACvE,MAAM,KAAI;AAAA,EACd;AACJ;AAEA,MAAMulB,WAA4B1J,GAAkB;AAAA,EAChD,OAAO,KAAK;AAAA,EACf,OAAO,WAAW;AAAA,IACX,iBAAiB;AAAA,IACjB,WAAW;AAAA,MACP,eAAe;AAAA,MACf,cAAc;AAAA,IAC1B;AAAA,IACQ,YAAY;AAAA,MACR,SAAS;AAAA,QACL,MAAM;AAAA,QACN,YAAY;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACpB;AAAA,MACA;AAAA,IACA;AAAA,IACQ,WAAW;AAAA,IACX,YAAY;AAAA,EACpB;AAAA,EACC,OAAO,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,SAAS;AAAA,MACL,QAAQ;AAAA,QACJ,QAAQ;AAAA,UACJ,eAAgBrW,GAAO;AACnB,kBAAMb,IAAOa,EAAM;AACnB,gBAAIb,EAAK,OAAO,UAAUA,EAAK,SAAS,QAAQ;AAC5C,oBAAM,EAAE,QAAQ,EAAE,YAAA8e,GAAa,OAAAttB,EAAK,MAASqP,EAAM,OAAO;AAC1D,qBAAOb,EAAK,OAAO,IAAI,CAAC+e,GAAO7zB,MAAI;AAE/B,sBAAM0W,IADOf,EAAM,eAAe,CAAC,EAChB,WAAW,SAAS3V,CAAC;AACxC,uBAAO;AAAA,kBACH,MAAM6zB;AAAA,kBACN,WAAWnd,EAAM;AAAA,kBACjB,aAAaA,EAAM;AAAA,kBACnB,WAAWpQ;AAAA,kBACX,WAAWoQ,EAAM;AAAA,kBACjB,YAAYkd;AAAA,kBACZ,QAAQ,CAACje,EAAM,kBAAkB3V,CAAC;AAAA,kBAClC,OAAOA;AAAA,gBAC3C;AAAA,cAC4B,CAAC;AAAA,YACL;AACA,mBAAO,CAAA;AAAA,UACX;AAAA,QACpB;AAAA,QACgB,QAASN,GAAGo0B,GAAYC,GAAQ;AAC5B,UAAAA,EAAO,MAAM,qBAAqBD,EAAW,KAAK,GAClDC,EAAO,MAAM,OAAM;AAAA,QACvB;AAAA,MAChB;AAAA,IACA;AAAA,IACQ,QAAQ;AAAA,MACJ,GAAG;AAAA,QACC,MAAM;AAAA,QACN,YAAY;AAAA,UACR,SAAS;AAAA,QAC7B;AAAA,QACgB,aAAa;AAAA,QACb,MAAM;AAAA,UACF,UAAU;AAAA,QAC9B;AAAA,QACgB,aAAa;AAAA,UACT,SAAS;AAAA,QAC7B;AAAA,QACgB,YAAY;AAAA,MAC5B;AAAA,IACA;AAAA,EACA;AAAA,EACI,YAAYpe,GAAOoQ,GAAa;AAC5B,UAAMpQ,GAAOoQ,CAAY,GACzB,KAAK,cAAc,QACnB,KAAK,cAAc;AAAA,EACvB;AAAA,EACA,iBAAiBlY,GAAO;AACpB,UAAMsC,IAAO,KAAK,aACZwF,IAAQ,KAAK,OACbsX,IAAStX,EAAM,KAAK,UAAU,CAAA,GAC9B1O,IAAQwL,GAAatC,EAAK,QAAQtC,CAAK,EAAE,GAAG8H,EAAM,QAAQ,MAAM;AACtE,WAAO;AAAA,MACH,OAAOsX,EAAOpf,CAAK,KAAK;AAAA,MACxB,OAAA5G;AAAA,IACZ;AAAA,EACI;AAAA,EACA,gBAAgBkJ,GAAM2E,GAAM9H,GAAOuD,GAAO;AACtC,WAAOyM,GAA4B,KAAK,IAAI,EAAE7M,GAAM2E,GAAM9H,GAAOuD,CAAK;AAAA,EAC1E;AAAA,EACA,OAAO+G,GAAM;AACT,UAAM2c,IAAO,KAAK,YAAY;AAC9B,SAAK,cAAa,GAClB,KAAK,eAAeA,GAAM,GAAGA,EAAK,QAAQ3c,CAAI;AAAA,EAClD;AAAA,EACH,YAAY;AACL,UAAMnH,IAAO,KAAK,aACZnF,IAAQ;AAAA,MACV,KAAK,OAAO;AAAA,MACZ,KAAK,OAAO;AAAA,IACxB;AACQ,WAAAmF,EAAK,KAAK,QAAQ,CAACiQ,GAASvS,MAAQ;AAChC,YAAMoP,IAAS,KAAK,UAAUpP,CAAK,EAAE;AACrC,MAAI,CAAC,MAAMoP,CAAM,KAAK,KAAK,MAAM,kBAAkBpP,CAAK,MAChDoP,IAASjS,EAAM,QACfA,EAAM,MAAMiS,IAEZA,IAASjS,EAAM,QACfA,EAAM,MAAMiS;AAAA,IAGxB,CAAC,GACMjS;AAAA,EACX;AAAA,EACH,gBAAgB;AACT,UAAM2K,IAAQ,KAAK,OACb6Q,IAAY7Q,EAAM,WAClB+B,IAAO/B,EAAM,SACbggB,IAAU,KAAK,IAAInP,EAAU,QAAQA,EAAU,MAAMA,EAAU,SAASA,EAAU,GAAG,GACrF8N,IAAc,KAAK,IAAIqB,IAAU,GAAG,CAAC,GACrCpB,IAAc,KAAK,IAAI7c,EAAK,mBAAmB4c,IAAc,MAAM5c,EAAK,mBAAmB,GAAG,CAAC,GAC/F8c,KAAgBF,IAAcC,KAAe5e,EAAM,uBAAsB;AAC/E,SAAK,cAAc2e,IAAcE,IAAe,KAAK,OACrD,KAAK,cAAc,KAAK,cAAcA;AAAA,EAC1C;AAAA,EACA,eAAeP,GAAMjnB,GAAOuD,GAAO+G,GAAM;AACrC,UAAMyZ,IAAQzZ,MAAS,SACjB3B,IAAQ,KAAK,OAEb8e,IADO9e,EAAM,QACQ,WACrB4Q,IAAQ,KAAK,YAAY,QACzBmO,IAAUnO,EAAM,SAChBoO,IAAUpO,EAAM,SAChBqP,IAAoBrP,EAAM,cAAc,CAAC,IAAI,MAAMpc;AACzD,QAAIsC,IAAQmpB,GACR51B;AACJ,UAAM61B,IAAe,MAAM,KAAK,qBAAoB;AACpD,SAAI71B,IAAI,GAAGA,IAAIgN,GAAO,EAAEhN;AACpB,MAAAyM,KAAS,KAAK,cAAczM,GAAGsX,GAAMue,CAAY;AAErD,SAAI71B,IAAIgN,GAAOhN,IAAIgN,IAAQuD,GAAOvQ,KAAI;AAClC,YAAM60B,IAAMZ,EAAKj0B,CAAC;AAClB,UAAI+yB,IAAatmB,GACbumB,IAAWvmB,IAAQ,KAAK,cAAczM,GAAGsX,GAAMue,CAAY,GAC3DvB,IAAc3e,EAAM,kBAAkB3V,CAAC,IAAIumB,EAAM,8BAA8B,KAAK,UAAUvmB,CAAC,EAAE,CAAC,IAAI;AAC1G,MAAAyM,IAAQumB,GACJjC,MACI0D,EAAc,iBACdH,IAAc,IAEdG,EAAc,kBACd1B,IAAaC,IAAW4C;AAGhC,YAAM7M,IAAa;AAAA,QACf,GAAG2L;AAAA,QACH,GAAGC;AAAA,QACH,aAAa;AAAA,QACb,aAAAL;AAAA,QACA,YAAAvB;AAAA,QACA,UAAAC;AAAA,QACA,SAAS,KAAK,0BAA0BhzB,GAAG60B,EAAI,SAAS,WAAWvd,CAAI;AAAA,MACvF;AACY,WAAK,cAAcud,GAAK70B,GAAG+oB,GAAYzR,CAAI;AAAA,IAC/C;AAAA,EACJ;AAAA,EACA,uBAAuB;AACnB,UAAMnH,IAAO,KAAK;AAClB,QAAII,IAAQ;AACZ,WAAAJ,EAAK,KAAK,QAAQ,CAACiQ,GAASvS,MAAQ;AAChC,MAAI,CAAC,MAAM,KAAK,UAAUA,CAAK,EAAE,CAAC,KAAK,KAAK,MAAM,kBAAkBA,CAAK,KACrE0C;AAAA,IAER,CAAC,GACMA;AAAA,EACX;AAAA,EACH,cAAc1C,GAAOyJ,GAAMue,GAAc;AAClC,WAAO,KAAK,MAAM,kBAAkBhoB,CAAK,IAAI/B,GAAU,KAAK,0BAA0B+B,GAAOyJ,CAAI,EAAE,SAASue,CAAY,IAAI;AAAA,EAChI;AACJ;AAEA,MAAMC,WAAsBnC,GAAmB;AAAA,EAC3C,OAAO,KAAK;AAAA,EACf,OAAO,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,eAAe;AAAA,IACf,QAAQ;AAAA,EAChB;AACA;AAEA,MAAMoC,WAAwB/J,GAAkB;AAAA,EAC5C,OAAO,KAAK;AAAA,EACf,OAAO,WAAW;AAAA,IACX,oBAAoB;AAAA,IACpB,iBAAiB;AAAA,IACjB,WAAW;AAAA,IACX,UAAU;AAAA,IACV,UAAU;AAAA,MACN,MAAM;AAAA,QACF,MAAM;AAAA,MACtB;AAAA,IACA;AAAA,EACA;AAAA,EACC,OAAO,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,QAAQ;AAAA,MACJ,GAAG;AAAA,QACC,MAAM;AAAA,MACtB;AAAA,IACA;AAAA,EACA;AAAA,EACC,iBAAiBne,GAAO;AACjB,UAAM4C,IAAS,KAAK,YAAY,QAC1BwM,IAAS,KAAK,UAAUpP,CAAK;AACnC,WAAO;AAAA,MACH,OAAO4C,EAAO,UAAS,EAAG5C,CAAK;AAAA,MAC/B,OAAO,KAAK4C,EAAO,iBAAiBwM,EAAOxM,EAAO,IAAI,CAAC;AAAA,IACnE;AAAA,EACI;AAAA,EACA,gBAAgBN,GAAM2E,GAAM9H,GAAOuD,GAAO;AACtC,WAAOyM,GAA4B,KAAK,IAAI,EAAE7M,GAAM2E,GAAM9H,GAAOuD,CAAK;AAAA,EAC1E;AAAA,EACA,OAAO+G,GAAM;AACT,UAAMnH,IAAO,KAAK,aACZyH,IAAOzH,EAAK,SACZC,IAASD,EAAK,QAAQ,CAAA,GACtB8c,IAAS9c,EAAK,OAAO,UAAS;AAEpC,QADAyH,EAAK,SAASxH,GACVkH,MAAS,UAAU;AACnB,YAAMxO,IAAU,KAAK,6BAA6BwO,CAAI;AACtD,MAAK,KAAK,QAAQ,aACdxO,EAAQ,cAAc;AAE1B,YAAMigB,IAAa;AAAA,QACf,OAAO;AAAA,QACP,WAAWkE,EAAO,WAAW7c,EAAO;AAAA,QACpC,SAAAtH;AAAA,MAChB;AACY,WAAK,cAAc8O,GAAM,QAAWmR,GAAYzR,CAAI;AAAA,IACxD;AACA,SAAK,eAAelH,GAAQ,GAAGA,EAAO,QAAQkH,CAAI;AAAA,EACtD;AAAA,EACA,eAAelH,GAAQpD,GAAOuD,GAAO+G,GAAM;AACvC,UAAMiP,IAAQ,KAAK,YAAY,QACzBwK,IAAQzZ,MAAS;AACvB,aAAQtX,IAAIgN,GAAOhN,IAAIgN,IAAQuD,GAAOvQ,KAAI;AACtC,YAAMgR,IAAQZ,EAAOpQ,CAAC,GAChB8I,IAAU,KAAK,0BAA0B9I,GAAGgR,EAAM,SAAS,WAAWsG,CAAI,GAC1E0e,IAAgBzP,EAAM,yBAAyBvmB,GAAG,KAAK,UAAUA,CAAC,EAAE,CAAC,GACrEiB,IAAI8vB,IAAQxK,EAAM,UAAUyP,EAAc,GAC1Cr1B,IAAIowB,IAAQxK,EAAM,UAAUyP,EAAc,GAC1CjN,IAAa;AAAA,QACf,GAAA9nB;AAAA,QACA,GAAAN;AAAA,QACA,OAAOq1B,EAAc;AAAA,QACrB,MAAM,MAAM/0B,CAAC,KAAK,MAAMN,CAAC;AAAA,QACzB,SAAAmI;AAAA,MAChB;AACY,WAAK,cAAckI,GAAOhR,GAAG+oB,GAAYzR,CAAI;AAAA,IACjD;AAAA,EACJ;AACJ;AAEA,MAAM2e,WAA0BjK,GAAkB;AAAA,EAC9C,OAAO,KAAK;AAAA,EACf,OAAO,WAAW;AAAA,IACX,oBAAoB;AAAA,IACpB,iBAAiB;AAAA,IACjB,UAAU;AAAA,IACV,MAAM;AAAA,EACd;AAAA,EACC,OAAO,YAAY;AAAA,IACZ,aAAa;AAAA,MACT,MAAM;AAAA,IAClB;AAAA,IACQ,QAAQ;AAAA,MACJ,GAAG;AAAA,QACC,MAAM;AAAA,MACtB;AAAA,MACY,GAAG;AAAA,QACC,MAAM;AAAA,MACtB;AAAA,IACA;AAAA,EACA;AAAA,EACC,iBAAiBne,GAAO;AACjB,UAAMsC,IAAO,KAAK,aACZ8c,IAAS,KAAK,MAAM,KAAK,UAAU,CAAA,GACnC,EAAE,QAAA9b,GAAS,QAAAC,EAAM,IAAMjB,GACvB8M,IAAS,KAAK,UAAUpP,CAAK,GAC7B5M,IAAIkQ,EAAO,iBAAiB8L,EAAO,CAAC,GACpCtc,IAAIyQ,EAAO,iBAAiB6L,EAAO,CAAC;AAC1C,WAAO;AAAA,MACH,OAAOgQ,EAAOpf,CAAK,KAAK;AAAA,MACxB,OAAO,MAAM5M,IAAI,OAAON,IAAI;AAAA,IACxC;AAAA,EACI;AAAA,EACA,OAAO2W,GAAM;AACT,UAAMnH,IAAO,KAAK,aACZ,EAAE,MAAMC,IAAS,CAAA,EAAE,IAAMD,GACzBE,IAAqB,KAAK,MAAM;AACtC,QAAI,EAAE,OAAArD,GAAQ,OAAAuD,EAAK,IAAML,GAAiCC,GAAMC,GAAQC,CAAkB;AAO1F,QANA,KAAK,aAAarD,GAClB,KAAK,aAAauD,GACdW,GAAoBf,CAAI,MACxBnD,IAAQ,GACRuD,IAAQH,EAAO,SAEf,KAAK,QAAQ,UAAU;AACvB,MAAK,KAAK,sBACN,KAAK,YAAW;AAEpB,YAAM,EAAE,SAASwH,GAAO,UAAAsd,EAAQ,IAAM/kB;AACtC,MAAAyH,EAAK,SAAS,KAAK,OACnBA,EAAK,gBAAgB,KAAK,OAC1BA,EAAK,aAAa,CAAC,CAACsd,EAAS,YAC7Btd,EAAK,SAASxH;AACd,YAAMtH,IAAU,KAAK,6BAA6BwO,CAAI;AACtD,MAAAxO,EAAQ,UAAU,KAAK,QAAQ,SAC/B,KAAK,cAAc8O,GAAM,QAAW;AAAA,QAChC,UAAU,CAACvH;AAAA,QACX,SAAAvH;AAAA,MAChB,GAAewO,CAAI;AAAA,IACX,MAAO,CAAI,KAAK,uBACZ,OAAOnH,EAAK,SACZ,KAAK,qBAAqB;AAE9B,SAAK,eAAeC,GAAQpD,GAAOuD,GAAO+G,CAAI;AAAA,EAClD;AAAA,EACA,cAAc;AACV,UAAM,EAAE,UAAA4e,MAAc,KAAK;AAC3B,IAAI,CAAC,KAAK,sBAAsBA,MAC5B,KAAK,qBAAqB,KAAK,MAAM,SAAS,WAAW,MAAM,IAEnE,MAAM,YAAW;AAAA,EACrB;AAAA,EACA,eAAe9lB,GAAQpD,GAAOuD,GAAO+G,GAAM;AACvC,UAAMyZ,IAAQzZ,MAAS,SACjB,EAAE,QAAA9G,GAAS,QAAAC,GAAS,UAAAqc,GAAW,UAAAoI,EAAQ,IAAM,KAAK,aAClDjH,IAAY,KAAK,0BAA0BjhB,GAAOsK,CAAI,GACtD0W,IAAgB,KAAK,iBAAiBC,CAAS,GAC/CE,IAAiB,KAAK,eAAe7W,GAAM0W,CAAa,GACxD/C,IAAQza,EAAO,MACf0a,IAAQza,EAAO,MACf,EAAE,UAAAE,GAAW,SAAAuT,EAAO,IAAM,KAAK,SAC/BiR,IAAe3pB,GAASmF,CAAQ,IAAIA,IAAW,OAAO,mBACtDykB,IAAe,KAAK,MAAM,uBAAuBrE,KAASzZ,MAAS;AACzE,QAAIge,IAAatoB,IAAQ,KAAK,KAAK,UAAUA,IAAQ,CAAC;AACtD,aAAQhN,IAAIgN,GAAOhN,IAAIgN,IAAQuD,GAAO,EAAEvQ,GAAE;AACtC,YAAMgR,IAAQZ,EAAOpQ,CAAC,GAChBid,IAAS,KAAK,UAAUjd,CAAC,GACzB+oB,IAAaqM,IAAepkB,IAAQ,CAAA,GACpCukB,IAAWvuB,EAAciW,EAAOiO,CAAK,CAAC,GACtCpM,IAASiK,EAAWkC,CAAK,IAAIza,EAAO,iBAAiByM,EAAOgO,CAAK,GAAGjrB,CAAC,GACrE+e,IAASgK,EAAWmC,CAAK,IAAI6F,KAASwE,IAAW9kB,EAAO,aAAY,IAAKA,EAAO,iBAAiBqc,IAAW,KAAK,WAAWrc,GAAQwM,GAAQ6P,CAAQ,IAAI7P,EAAOiO,CAAK,GAAGlrB,CAAC;AAC9K,MAAA+oB,EAAW,OAAO,MAAMjK,CAAM,KAAK,MAAMC,CAAM,KAAKwW,GACpDxM,EAAW,OAAO/oB,IAAI,KAAK,KAAK,IAAIid,EAAOgO,CAAK,IAAIqK,EAAWrK,CAAK,CAAC,IAAIkK,GACrEjR,MACA6E,EAAW,SAAS9L,GACpB8L,EAAW,MAAMmM,EAAS,KAAKl1B,CAAC,IAEhCmuB,MACApF,EAAW,UAAUiF,KAAiB,KAAK,0BAA0BhuB,GAAGgR,EAAM,SAAS,WAAWsG,CAAI,IAErG8d,KACD,KAAK,cAAcpkB,GAAOhR,GAAG+oB,GAAYzR,CAAI,GAEjDge,IAAarY;AAAA,IACjB;AACA,SAAK,oBAAoB+Q,GAAe1W,GAAM2W,CAAS;AAAA,EAC3D;AAAA,EACH,iBAAiB;AACV,UAAM9d,IAAO,KAAK,aACZ2E,IAAO3E,EAAK,QAAQ,CAAA;AAC1B,QAAI,CAAC,KAAK,QAAQ,UAAU;AACxB,UAAIxM,IAAM;AACV,eAAQ3D,IAAI8U,EAAK,SAAS,GAAG9U,KAAK,GAAG,EAAEA;AACnC,QAAA2D,IAAM,KAAK,IAAIA,GAAKmR,EAAK9U,CAAC,EAAE,KAAK,KAAK,0BAA0BA,CAAC,CAAC,IAAI,CAAC;AAE3E,aAAO2D,IAAM,KAAKA;AAAA,IACtB;AACA,UAAMsoB,IAAU9b,EAAK,SACfqlB,IAASvJ,EAAQ,WAAWA,EAAQ,QAAQ,eAAe;AACjE,QAAI,CAACnX,EAAK;AACN,aAAO0gB;AAEX,UAAMjY,IAAazI,EAAK,CAAC,EAAE,KAAK,KAAK,0BAA0B,CAAC,CAAC,GAC3D2gB,IAAY3gB,EAAKA,EAAK,SAAS,CAAC,EAAE,KAAK,KAAK,0BAA0BA,EAAK,SAAS,CAAC,CAAC;AAC5F,WAAO,KAAK,IAAI0gB,GAAQjY,GAAYkY,CAAS,IAAI;AAAA,EACrD;AACJ;AAEA,IAAIU,KAA2B,uBAAO,OAAO;AAAA,EAC7C,WAAW;AAAA,EACX,eAAetF;AAAA,EACf,kBAAkB4B;AAAA,EAClB,oBAAoBkB;AAAA,EACpB,gBAAgBsB;AAAA,EAChB,eAAea;AAAA,EACf,qBAAqBJ;AAAA,EACrB,iBAAiBK;AAAA,EACjB,mBAAmBE;AACnB,CAAC;AAMG,SAASG,KAAW;AACpB,QAAM,IAAI,MAAM,iFAAiF;AACrG;AAMI,MAAMC,GAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUpB,OAAO,SAASC,GAAS;AACvB,WAAO,OAAOD,GAAgB,WAAWC,CAAO;AAAA,EACpD;AAAA,EACA;AAAA,EACA,YAAYxtB,GAAQ;AAChB,SAAK,UAAUA,KAAW,CAAA;AAAA,EAC9B;AAAA;AAAA,EAEA,OAAO;AAAA,EAAC;AAAA,EACR,UAAU;AACN,WAAOstB,GAAQ;AAAA,EACnB;AAAA,EACA,QAAQ;AACJ,WAAOA,GAAQ;AAAA,EACnB;AAAA,EACA,SAAS;AACL,WAAOA,GAAQ;AAAA,EACnB;AAAA,EACA,MAAM;AACF,WAAOA,GAAQ;AAAA,EACnB;AAAA,EACA,OAAO;AACH,WAAOA,GAAQ;AAAA,EACnB;AAAA,EACA,UAAU;AACN,WAAOA,GAAQ;AAAA,EACnB;AAAA,EACA,QAAQ;AACJ,WAAOA,GAAQ;AAAA,EACnB;AACJ;AACA,IAAIG,KAAW;AAAA,EACX,OAAOF;AACX;AAEA,SAASG,GAAaC,GAAS7lB,GAAM3J,GAAOyvB,GAAW;AACnD,QAAM,EAAE,YAAA1L,GAAa,MAAAlW,GAAO,SAAA6hB,EAAO,IAAMF,GACnCjmB,IAASwa,EAAW,YAAY,QAChCra,IAAW8lB,EAAQ,WAAUA,EAAQ,QAAQ,UAAUA,EAAQ,QAAQ,QAAQ,WAAkB;AACvG,MAAIjmB,KAAUI,MAASJ,EAAO,QAAQI,MAAS,OAAO+lB,KAAW7hB,EAAK,QAAQ;AAC1E,UAAM8hB,IAAepmB,EAAO,iBAAiBpC,KAAgBH;AAC7D,QAAKyoB;AAWE,UAAI1L,EAAW,gBAAgB;AAClC,cAAM1K,IAAKxL,EAAK,CAAC,GACX9J,IAAQ,OAAOsV,EAAG,YAAa,cAAcA,EAAG,SAAS1P,CAAI;AACnE,YAAI5F,GAAO;AACP,gBAAMgC,IAAQ4pB,EAAa9hB,GAAMlE,GAAM3J,IAAQ+D,CAAK,GAC9CiC,IAAM2pB,EAAa9hB,GAAMlE,GAAM3J,IAAQ+D,CAAK;AAClD,iBAAO;AAAA,YACH,IAAIgC,EAAM;AAAA,YACV,IAAIC,EAAI;AAAA,UAC5B;AAAA,QACY;AAAA,MACJ;AAAA,WAtBgB;AACZ,YAAM5B,IAASurB,EAAa9hB,GAAMlE,GAAM3J,CAAK;AAC7C,UAAI0J,GAAU;AACV,cAAM,EAAE,QAAAF,MAAYua,EAAW,aACzB,EAAE,SAAAta,EAAO,IAAM+lB,GACf1lB,IAAsBL,EAAQ,MAAM,GAAGrF,EAAO,KAAK,CAAC,EAAE,QAAO,EAAG,UAAU,CAAC2F,MAAQ,CAAChK,EAAcgK,EAAMP,EAAO,IAAI,CAAC,CAAC;AAC3H,QAAApF,EAAO,MAAM,KAAK,IAAI,GAAG0F,CAAmB;AAC5C,cAAME,IAAsBP,EAAQ,MAAMrF,EAAO,EAAE,EAAE,UAAU,CAAC2F,MAAQ,CAAChK,EAAcgK,EAAMP,EAAO,IAAI,CAAC,CAAC;AAC1G,QAAApF,EAAO,MAAM,KAAK,IAAI,GAAG4F,CAAmB;AAAA,MAChD;AACA,aAAO5F;AAAA,IACX;AAAA,EAYJ;AACA,SAAO;AAAA,IACH,IAAI;AAAA,IACJ,IAAIyJ,EAAK,SAAS;AAAA,EAC1B;AACA;AACC,SAAS+hB,GAAyBlhB,GAAO/E,GAAMkmB,GAAUC,GAASL,GAAW;AAC1E,QAAMnN,IAAW5T,EAAM,6BAA4B,GAC7C1O,IAAQ6vB,EAASlmB,CAAI;AAC3B,WAAQ5Q,IAAI,GAAGqI,IAAOkhB,EAAS,QAAQvpB,IAAIqI,GAAM,EAAErI,GAAE;AACjD,UAAM,EAAE,OAAA6N,GAAQ,MAAAiH,MAAUyU,EAASvpB,CAAC,GAC9B,EAAE,IAAA+N,GAAK,IAAAD,EAAE,IAAM0oB,GAAajN,EAASvpB,CAAC,GAAG4Q,GAAM3J,GAAOyvB,CAAS;AACrE,aAAQ10B,IAAI+L,GAAI/L,KAAK8L,GAAI,EAAE9L,GAAE;AACzB,YAAMoe,IAAUtL,EAAK9S,CAAC;AACtB,MAAKoe,EAAQ,QACT2W,EAAQ3W,GAASvS,GAAO7L,CAAC;AAAA,IAEjC;AAAA,EACJ;AACJ;AACC,SAASg1B,GAAyBpmB,GAAM;AACrC,QAAMqmB,IAAOrmB,EAAK,QAAQ,GAAG,MAAM,IAC7BsmB,IAAOtmB,EAAK,QAAQ,GAAG,MAAM;AACnC,SAAO,SAASjE,GAAKC,GAAK;AACtB,UAAMuqB,IAASF,IAAO,KAAK,IAAItqB,EAAI,IAAIC,EAAI,CAAC,IAAI,GAC1CwqB,IAASF,IAAO,KAAK,IAAIvqB,EAAI,IAAIC,EAAI,CAAC,IAAI;AAChD,WAAO,KAAK,KAAK,KAAK,IAAIuqB,GAAQ,CAAC,IAAI,KAAK,IAAIC,GAAQ,CAAC,CAAC;AAAA,EAC9D;AACJ;AACC,SAASC,GAAkB1hB,GAAOmhB,GAAUlmB,GAAM0mB,GAAkBC,GAAkB;AACnF,QAAMroB,IAAQ,CAAA;AACd,SAAI,CAACqoB,KAAoB,CAAC5hB,EAAM,cAAcmhB,CAAQ,KAetDD,GAAyBlhB,GAAO/E,GAAMkmB,GAZf,SAAS1W,GAAS2F,GAAclY,GAAO;AAC1D,IAAI,CAAC0pB,KAAoB,CAACzgB,GAAesJ,GAASzK,EAAM,WAAW,CAAC,KAGhEyK,EAAQ,QAAQ0W,EAAS,GAAGA,EAAS,GAAGQ,CAAgB,KACxDpoB,EAAM,KAAK;AAAA,MACP,SAAAkR;AAAA,MACA,cAAA2F;AAAA,MACA,OAAAlY;AAAA,IAChB,CAAa;AAAA,EAET,GACgE,EAAI,GAC7DqB;AACX;AACC,SAASsoB,GAAsB7hB,GAAOmhB,GAAUlmB,GAAM0mB,GAAkB;AACrE,MAAIpoB,IAAQ,CAAA;AACZ,WAASuoB,EAAerX,GAAS2F,GAAclY,GAAO;AAClD,UAAM,EAAE,YAAAklB,GAAa,UAAAC,MAAc5S,EAAQ,SAAS;AAAA,MAChD;AAAA,MACA;AAAA,IACZ,GAAWkX,CAAgB,GACb,EAAE,OAAA7qB,EAAK,IAAMN,GAAkBiU,GAAS;AAAA,MAC1C,GAAG0W,EAAS;AAAA,MACZ,GAAGA,EAAS;AAAA,IACxB,CAAS;AACD,IAAI/pB,GAAcN,GAAOsmB,GAAYC,CAAQ,KACzC9jB,EAAM,KAAK;AAAA,MACP,SAAAkR;AAAA,MACA,cAAA2F;AAAA,MACA,OAAAlY;AAAA,IAChB,CAAa;AAAA,EAET;AACA,SAAAgpB,GAAyBlhB,GAAO/E,GAAMkmB,GAAUW,CAAc,GACvDvoB;AACX;AACC,SAASwoB,GAAyB/hB,GAAOmhB,GAAUlmB,GAAM8lB,GAAWY,GAAkBC,GAAkB;AACrG,MAAIroB,IAAQ,CAAA;AACZ,QAAMyoB,IAAiBX,GAAyBpmB,CAAI;AACpD,MAAIgnB,IAAc,OAAO;AACzB,WAASH,EAAerX,GAAS2F,GAAclY,GAAO;AAClD,UAAMgqB,IAAUzX,EAAQ,QAAQ0W,EAAS,GAAGA,EAAS,GAAGQ,CAAgB;AACxE,QAAIZ,KAAa,CAACmB;AACd;AAEJ,UAAM1F,IAAS/R,EAAQ,eAAekX,CAAgB;AAEtD,QAAI,EADgB,CAAC,CAACC,KAAoB5hB,EAAM,cAAcwc,CAAM,MAChD,CAAC0F;AACjB;AAEJ,UAAMC,IAAWH,EAAeb,GAAU3E,CAAM;AAChD,IAAI2F,IAAWF,KACX1oB,IAAQ;AAAA,MACJ;AAAA,QACI,SAAAkR;AAAA,QACA,cAAA2F;AAAA,QACA,OAAAlY;AAAA,MACpB;AAAA,IACA,GACY+pB,IAAcE,KACPA,MAAaF,KACpB1oB,EAAM,KAAK;AAAA,MACP,SAAAkR;AAAA,MACA,cAAA2F;AAAA,MACA,OAAAlY;AAAA,IAChB,CAAa;AAAA,EAET;AACA,SAAAgpB,GAAyBlhB,GAAO/E,GAAMkmB,GAAUW,CAAc,GACvDvoB;AACX;AACC,SAAS6oB,GAAgBpiB,GAAOmhB,GAAUlmB,GAAM8lB,GAAWY,GAAkBC,GAAkB;AAC5F,SAAI,CAACA,KAAoB,CAAC5hB,EAAM,cAAcmhB,CAAQ,IAC3C,CAAA,IAEJlmB,MAAS,OAAO,CAAC8lB,IAAYc,GAAsB7hB,GAAOmhB,GAAUlmB,GAAM0mB,CAAgB,IAAII,GAAyB/hB,GAAOmhB,GAAUlmB,GAAM8lB,GAAWY,GAAkBC,CAAgB;AACtM;AACC,SAASS,GAAariB,GAAOmhB,GAAUlmB,GAAM8lB,GAAWY,GAAkB;AACvE,QAAMpoB,IAAQ,CAAA,GACR+oB,IAAcrnB,MAAS,MAAM,aAAa;AAChD,MAAIsnB,IAAiB;AAWrB,SAVArB,GAAyBlhB,GAAO/E,GAAMkmB,GAAU,CAAC1W,GAAS2F,GAAclY,MAAQ;AAC5E,IAAIuS,EAAQ6X,CAAW,KAAK7X,EAAQ6X,CAAW,EAAEnB,EAASlmB,CAAI,GAAG0mB,CAAgB,MAC7EpoB,EAAM,KAAK;AAAA,MACP,SAAAkR;AAAA,MACA,cAAA2F;AAAA,MACA,OAAAlY;AAAA,IAChB,CAAa,GACDqqB,IAAiBA,KAAkB9X,EAAQ,QAAQ0W,EAAS,GAAGA,EAAS,GAAGQ,CAAgB;AAAA,EAEnG,CAAC,GACGZ,KAAa,CAACwB,IACP,CAAA,IAEJhpB;AACX;AACC,IAAIipB,KAAc;AAAA,EAEf,OAAO;AAAA,IACV,MAAOxiB,GAAOjW,GAAGoJ,GAASwuB,GAAkB;AACjC,YAAMR,IAAW5V,GAAoBxhB,GAAGiW,CAAK,GACvC/E,IAAO9H,EAAQ,QAAQ,KACvByuB,IAAmBzuB,EAAQ,oBAAoB,IAC/CoG,IAAQpG,EAAQ,YAAYuuB,GAAkB1hB,GAAOmhB,GAAUlmB,GAAM0mB,GAAkBC,CAAgB,IAAIQ,GAAgBpiB,GAAOmhB,GAAUlmB,GAAM,IAAO0mB,GAAkBC,CAAgB,GAC3L7J,IAAW,CAAA;AACjB,aAAKxe,EAAM,UAGXyG,EAAM,6BAA4B,EAAG,QAAQ,CAACxF,MAAO;AACjD,cAAMtC,IAAQqB,EAAM,CAAC,EAAE,OACjBkR,IAAUjQ,EAAK,KAAKtC,CAAK;AAC/B,QAAIuS,KAAW,CAACA,EAAQ,QACpBsN,EAAS,KAAK;AAAA,UACV,SAAAtN;AAAA,UACA,cAAcjQ,EAAK;AAAA,UACnB,OAAAtC;AAAA,QACxB,CAAqB;AAAA,MAET,CAAC,GACM6f,KAbI,CAAA;AAAA,IAcf;AAAA,IACP,QAAS/X,GAAOjW,GAAGoJ,GAASwuB,GAAkB;AACnC,YAAMR,IAAW5V,GAAoBxhB,GAAGiW,CAAK,GACvC/E,IAAO9H,EAAQ,QAAQ,MACvByuB,IAAmBzuB,EAAQ,oBAAoB;AACrD,UAAIoG,IAAQpG,EAAQ,YAAYuuB,GAAkB1hB,GAAOmhB,GAAUlmB,GAAM0mB,GAAkBC,CAAgB,IAAIQ,GAAgBpiB,GAAOmhB,GAAUlmB,GAAM,IAAO0mB,GAAkBC,CAAgB;AAC/L,UAAIroB,EAAM,SAAS,GAAG;AAClB,cAAM6W,IAAe7W,EAAM,CAAC,EAAE,cACxB4F,IAAOa,EAAM,eAAeoQ,CAAY,EAAE;AAChD,QAAA7W,IAAQ,CAAA;AACR,iBAAQlP,IAAI,GAAGA,IAAI8U,EAAK,QAAQ,EAAE9U;AAC9B,UAAAkP,EAAM,KAAK;AAAA,YACP,SAAS4F,EAAK9U,CAAC;AAAA,YACf,cAAA+lB;AAAA,YACA,OAAO/lB;AAAA,UAC/B,CAAqB;AAAA,MAET;AACA,aAAOkP;AAAA,IACX;AAAA,IACP,MAAOyG,GAAOjW,GAAGoJ,GAASwuB,GAAkB;AACjC,YAAMR,IAAW5V,GAAoBxhB,GAAGiW,CAAK,GACvC/E,IAAO9H,EAAQ,QAAQ,MACvByuB,IAAmBzuB,EAAQ,oBAAoB;AACrD,aAAOuuB,GAAkB1hB,GAAOmhB,GAAUlmB,GAAM0mB,GAAkBC,CAAgB;AAAA,IACtF;AAAA,IACP,QAAS5hB,GAAOjW,GAAGoJ,GAASwuB,GAAkB;AACnC,YAAMR,IAAW5V,GAAoBxhB,GAAGiW,CAAK,GACvC/E,IAAO9H,EAAQ,QAAQ,MACvByuB,IAAmBzuB,EAAQ,oBAAoB;AACrD,aAAOivB,GAAgBpiB,GAAOmhB,GAAUlmB,GAAM9H,EAAQ,WAAWwuB,GAAkBC,CAAgB;AAAA,IACvG;AAAA,IACP,EAAG5hB,GAAOjW,GAAGoJ,GAASwuB,GAAkB;AAC7B,YAAMR,IAAW5V,GAAoBxhB,GAAGiW,CAAK;AAC7C,aAAOqiB,GAAariB,GAAOmhB,GAAU,KAAKhuB,EAAQ,WAAWwuB,CAAgB;AAAA,IACjF;AAAA,IACP,EAAG3hB,GAAOjW,GAAGoJ,GAASwuB,GAAkB;AAC7B,YAAMR,IAAW5V,GAAoBxhB,GAAGiW,CAAK;AAC7C,aAAOqiB,GAAariB,GAAOmhB,GAAU,KAAKhuB,EAAQ,WAAWwuB,CAAgB;AAAA,IACjF;AAAA,EACR;AACA;AAEA,MAAMc,KAAmB;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AACA,SAASC,GAAiBzsB,GAAOkrB,GAAU;AACvC,SAAOlrB,EAAM,OAAO,CAAChL,MAAIA,EAAE,QAAQk2B,CAAQ;AAC/C;AACA,SAASwB,GAA4B1sB,GAAOgF,GAAM;AAC9C,SAAOhF,EAAM,OAAO,CAAChL,MAAIw3B,GAAiB,QAAQx3B,EAAE,GAAG,MAAM,MAAMA,EAAE,IAAI,SAASgQ,CAAI;AAC1F;AACA,SAAS2nB,GAAa3sB,GAAO3D,GAAS;AAClC,SAAO2D,EAAM,KAAK,CAACxL,GAAGM,MAAI;AACtB,UAAM4H,IAAKL,IAAUvH,IAAIN,GACnBmI,IAAKN,IAAU7H,IAAIM;AACzB,WAAO4H,EAAG,WAAWC,EAAG,SAASD,EAAG,QAAQC,EAAG,QAAQD,EAAG,SAASC,EAAG;AAAA,EAC1E,CAAC;AACL;AACA,SAASiwB,GAAUC,GAAO;AACtB,QAAMC,IAAc,CAAA;AACpB,MAAI14B,GAAGqI,GAAM4Y,GAAKN,GAAK8I,GAAOkP;AAC9B,OAAI34B,IAAI,GAAGqI,KAAQowB,KAAS,IAAI,QAAQz4B,IAAIqI,GAAM,EAAErI;AAChD,IAAAihB,IAAMwX,EAAMz4B,CAAC,GACZ,EAAE,UAAU2gB,GAAM,SAAS,EAAE,OAAA8I,GAAQ,aAAAkP,IAAa,EAAC,EAAG,IAAM1X,GAC7DyX,EAAY,KAAK;AAAA,MACb,OAAO14B;AAAA,MACP,KAAAihB;AAAA,MACA,KAAAN;AAAA,MACA,YAAYM,EAAI,aAAY;AAAA,MAC5B,QAAQA,EAAI;AAAA,MACZ,OAAOwI,KAAS9I,IAAM8I;AAAA,MACtB,aAAAkP;AAAA,IACZ,CAAS;AAEL,SAAOD;AACX;AACA,SAASE,GAAYC,GAAS;AAC1B,QAAMpO,IAAS,CAAA;AACf,aAAWqO,KAAQD,GAAQ;AACvB,UAAM,EAAE,OAAApP,GAAQ,KAAA9I,GAAM,aAAAgY,EAAW,IAAMG;AACvC,QAAI,CAACrP,KAAS,CAAC2O,GAAiB,SAASzX,CAAG;AACxC;AAEJ,UAAM1E,IAASwO,EAAOhB,CAAK,MAAMgB,EAAOhB,CAAK,IAAI;AAAA,MAC7C,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,MAAM;AAAA,IAClB;AACQ,IAAAxN,EAAO,SACPA,EAAO,UAAU0c;AAAA,EACrB;AACA,SAAOlO;AACX;AACC,SAASsO,GAAcF,GAASG,GAAQ;AACrC,QAAMvO,IAASmO,GAAYC,CAAO,GAC5B,EAAE,cAAAI,GAAe,eAAAC,EAAa,IAAMF;AAC1C,MAAIh5B,GAAGqI,GAAM8wB;AACb,OAAIn5B,IAAI,GAAGqI,IAAOwwB,EAAQ,QAAQ74B,IAAIqI,GAAM,EAAErI,GAAE;AAC5C,IAAAm5B,IAASN,EAAQ74B,CAAC;AAClB,UAAM,EAAE,UAAAo5B,MAAcD,EAAO,KACvB1P,IAAQgB,EAAO0O,EAAO,KAAK,GAC3BzR,IAAS+B,KAAS0P,EAAO,cAAc1P,EAAM;AACnD,IAAI0P,EAAO,cACPA,EAAO,QAAQzR,IAASA,IAASuR,IAAeG,KAAYJ,EAAO,gBACnEG,EAAO,SAASD,MAEhBC,EAAO,QAAQF,GACfE,EAAO,SAASzR,IAASA,IAASwR,IAAgBE,KAAYJ,EAAO;AAAA,EAE7E;AACA,SAAOvO;AACX;AACA,SAAS4O,GAAiBZ,GAAO;AAC7B,QAAMC,IAAcF,GAAUC,CAAK,GAC7BW,IAAWb,GAAaG,EAAY,OAAO,CAACI,MAAOA,EAAK,IAAI,QAAQ,GAAG,EAAI,GAC3E/oB,IAAOwoB,GAAaF,GAAiBK,GAAa,MAAM,GAAG,EAAI,GAC/D1oB,IAAQuoB,GAAaF,GAAiBK,GAAa,OAAO,CAAC,GAC3D5gB,IAAMygB,GAAaF,GAAiBK,GAAa,KAAK,GAAG,EAAI,GAC7D3gB,IAASwgB,GAAaF,GAAiBK,GAAa,QAAQ,CAAC,GAC7DY,IAAmBhB,GAA4BI,GAAa,GAAG,GAC/Da,IAAiBjB,GAA4BI,GAAa,GAAG;AACnE,SAAO;AAAA,IACH,UAAAU;AAAA,IACA,YAAYrpB,EAAK,OAAO+H,CAAG;AAAA,IAC3B,gBAAgB9H,EAAM,OAAOupB,CAAc,EAAE,OAAOxhB,CAAM,EAAE,OAAOuhB,CAAgB;AAAA,IACnF,WAAWjB,GAAiBK,GAAa,WAAW;AAAA,IACpD,UAAU3oB,EAAK,OAAOC,CAAK,EAAE,OAAOupB,CAAc;AAAA,IAClD,YAAYzhB,EAAI,OAAOC,CAAM,EAAE,OAAOuhB,CAAgB;AAAA,EAC9D;AACA;AACA,SAASE,GAAeC,GAAYjT,GAAWpmB,GAAGM,GAAG;AACjD,SAAO,KAAK,IAAI+4B,EAAWr5B,CAAC,GAAGomB,EAAUpmB,CAAC,CAAC,IAAI,KAAK,IAAIq5B,EAAW/4B,CAAC,GAAG8lB,EAAU9lB,CAAC,CAAC;AACvF;AACA,SAASg5B,GAAiBD,GAAYE,GAAY;AAC9C,EAAAF,EAAW,MAAM,KAAK,IAAIA,EAAW,KAAKE,EAAW,GAAG,GACxDF,EAAW,OAAO,KAAK,IAAIA,EAAW,MAAME,EAAW,IAAI,GAC3DF,EAAW,SAAS,KAAK,IAAIA,EAAW,QAAQE,EAAW,MAAM,GACjEF,EAAW,QAAQ,KAAK,IAAIA,EAAW,OAAOE,EAAW,KAAK;AAClE;AACA,SAASC,GAAWpT,GAAWwS,GAAQG,GAAQ1O,GAAQ;AACnD,QAAM,EAAE,KAAA9J,GAAM,KAAAM,EAAG,IAAMkY,GACjBM,IAAajT,EAAU;AAC7B,MAAI,CAACrf,EAASwZ,CAAG,GAAG;AAChB,IAAIwY,EAAO,SACP3S,EAAU7F,CAAG,KAAKwY,EAAO;AAE7B,UAAM1P,IAAQgB,EAAO0O,EAAO,KAAK,KAAK;AAAA,MAClC,MAAM;AAAA,MACN,OAAO;AAAA,IACnB;AACQ,IAAA1P,EAAM,OAAO,KAAK,IAAIA,EAAM,MAAM0P,EAAO,aAAalY,EAAI,SAASA,EAAI,KAAK,GAC5EkY,EAAO,OAAO1P,EAAM,OAAOA,EAAM,OACjCjD,EAAU7F,CAAG,KAAKwY,EAAO;AAAA,EAC7B;AACA,EAAIlY,EAAI,cACJyY,GAAiBD,GAAYxY,EAAI,YAAY;AAEjD,QAAM4Y,IAAW,KAAK,IAAI,GAAGb,EAAO,aAAaQ,GAAeC,GAAYjT,GAAW,QAAQ,OAAO,CAAC,GACjGsT,IAAY,KAAK,IAAI,GAAGd,EAAO,cAAcQ,GAAeC,GAAYjT,GAAW,OAAO,QAAQ,CAAC,GACnGuT,IAAeF,MAAarT,EAAU,GACtCwT,IAAgBF,MAActT,EAAU;AAC9C,SAAAA,EAAU,IAAIqT,GACdrT,EAAU,IAAIsT,GACPX,EAAO,aAAa;AAAA,IACvB,MAAMY;AAAA,IACN,OAAOC;AAAA,EACf,IAAQ;AAAA,IACA,MAAMA;AAAA,IACN,OAAOD;AAAA,EACf;AACA;AACA,SAASE,GAAiBzT,GAAW;AACjC,QAAMiT,IAAajT,EAAU;AAC7B,WAAS0T,EAAUvZ,GAAK;AACpB,UAAM5G,IAAS,KAAK,IAAI0f,EAAW9Y,CAAG,IAAI6F,EAAU7F,CAAG,GAAG,CAAC;AAC3D,WAAA6F,EAAU7F,CAAG,KAAK5G,GACXA;AAAA,EACX;AACA,EAAAyM,EAAU,KAAK0T,EAAU,KAAK,GAC9B1T,EAAU,KAAK0T,EAAU,MAAM,GAC/BA,EAAU,OAAO,GACjBA,EAAU,QAAQ;AACtB;AACA,SAASC,GAAWnJ,GAAYxK,GAAW;AACvC,QAAMiT,IAAajT,EAAU;AAC7B,WAAS4T,EAAmB7Z,GAAW;AACnC,UAAMvJ,IAAS;AAAA,MACX,MAAM;AAAA,MACN,KAAK;AAAA,MACL,OAAO;AAAA,MACP,QAAQ;AAAA,IACpB;AACQ,WAAAuJ,EAAU,QAAQ,CAACI,MAAM;AACrB,MAAA3J,EAAO2J,CAAG,IAAI,KAAK,IAAI6F,EAAU7F,CAAG,GAAG8Y,EAAW9Y,CAAG,CAAC;AAAA,IAC1D,CAAC,GACM3J;AAAA,EACX;AACA,SAAoBojB,EAAbpJ,IAAgC;AAAA,IACnC;AAAA,IACA;AAAA,EACR,IAA4B;AAAA,IACpB;AAAA,IACA;AAAA,EACR,CAHK;AAIL;AACA,SAASqJ,GAAS5B,GAAOjS,GAAWwS,GAAQvO,GAAQ;AAChD,QAAM6P,IAAa,CAAA;AACnB,MAAIt6B,GAAGqI,GAAM8wB,GAAQlY,GAAKsZ,GAAOhpB;AACjC,OAAIvR,IAAI,GAAGqI,IAAOowB,EAAM,QAAQ8B,IAAQ,GAAGv6B,IAAIqI,GAAM,EAAErI,GAAE;AACrD,IAAAm5B,IAASV,EAAMz4B,CAAC,GAChBihB,IAAMkY,EAAO,KACblY,EAAI,OAAOkY,EAAO,SAAS3S,EAAU,GAAG2S,EAAO,UAAU3S,EAAU,GAAG2T,GAAWhB,EAAO,YAAY3S,CAAS,CAAC;AAC9G,UAAM,EAAE,MAAAgU,GAAO,OAAAC,MAAWb,GAAWpT,GAAWwS,GAAQG,GAAQ1O,CAAM;AACtE,IAAA8P,KAASC,KAAQF,EAAW,QAC5B/oB,IAAUA,KAAWkpB,GAChBxZ,EAAI,YACLqZ,EAAW,KAAKnB,CAAM;AAAA,EAE9B;AACA,SAAOoB,KAASF,GAASC,GAAY9T,GAAWwS,GAAQvO,CAAM,KAAKlZ;AACvE;AACA,SAASmpB,GAAWzZ,GAAKlR,GAAM+H,GAAKjC,GAAO2L,GAAQ;AAC/C,EAAAP,EAAI,MAAMnJ,GACVmJ,EAAI,OAAOlR,GACXkR,EAAI,QAAQlR,IAAO8F,GACnBoL,EAAI,SAASnJ,IAAM0J,GACnBP,EAAI,QAAQpL,GACZoL,EAAI,SAASO;AACjB;AACA,SAASmZ,GAAWlC,GAAOjS,GAAWwS,GAAQvO,GAAQ;AAClD,QAAMmQ,IAAc5B,EAAO;AAC3B,MAAI,EAAE,GAAA/3B,GAAI,GAAAN,EAAC,IAAM6lB;AACjB,aAAW2S,KAAUV,GAAM;AACvB,UAAMxX,IAAMkY,EAAO,KACb1P,IAAQgB,EAAO0O,EAAO,KAAK,KAAK;AAAA,MAElC,QAAQ;AAAA,MACR,QAAQ;AAAA,IACpB,GACc5yB,IAAS4yB,EAAO,cAAc1P,EAAM,UAAU;AACpD,QAAI0P,EAAO,YAAY;AACnB,YAAMtjB,IAAQ2Q,EAAU,IAAIjgB,GACtBib,IAASiI,EAAM,QAAQxI,EAAI;AACjC,MAAInX,GAAQ2f,EAAM,KAAK,MACnB9oB,IAAI8oB,EAAM,QAEVxI,EAAI,WACJyZ,GAAWzZ,GAAK2Z,EAAY,MAAMj6B,GAAGq4B,EAAO,aAAa4B,EAAY,QAAQA,EAAY,MAAMpZ,CAAM,IAErGkZ,GAAWzZ,GAAKuF,EAAU,OAAOiD,EAAM,QAAQ9oB,GAAGkV,GAAO2L,CAAM,GAEnEiI,EAAM,QAAQ9oB,GACd8oB,EAAM,UAAU5T,GAChBlV,IAAIsgB,EAAI;AAAA,IACZ,OAAO;AACH,YAAMO,IAASgF,EAAU,IAAIjgB,GACvBsP,IAAQ4T,EAAM,QAAQxI,EAAI;AAChC,MAAInX,GAAQ2f,EAAM,KAAK,MACnBxoB,IAAIwoB,EAAM,QAEVxI,EAAI,WACJyZ,GAAWzZ,GAAKhgB,GAAG25B,EAAY,KAAK/kB,GAAOmjB,EAAO,cAAc4B,EAAY,SAASA,EAAY,GAAG,IAEpGF,GAAWzZ,GAAKhgB,GAAGulB,EAAU,MAAMiD,EAAM,QAAQ5T,GAAO2L,CAAM,GAElEiI,EAAM,QAAQxoB,GACdwoB,EAAM,UAAUjI,GAChBvgB,IAAIggB,EAAI;AAAA,IACZ;AAAA,EACJ;AACA,EAAAuF,EAAU,IAAIvlB,GACdulB,EAAU,IAAI7lB;AAClB;AACA,IAAIk4B,IAAU;AAAA,EACb,OAAQljB,GAAO1L,GAAM;AACd,IAAK0L,EAAM,UACPA,EAAM,QAAQ,CAAA,IAElB1L,EAAK,WAAWA,EAAK,YAAY,IACjCA,EAAK,WAAWA,EAAK,YAAY,OACjCA,EAAK,SAASA,EAAK,UAAU,GAC7BA,EAAK,UAAUA,EAAK,WAAW,WAAW;AACtC,aAAO;AAAA,QACH;AAAA,UACI,GAAG;AAAA,UACH,KAAMuc,GAAW;AACb,YAAAvc,EAAK,KAAKuc,CAAS;AAAA,UACvB;AAAA,QACpB;AAAA,MACA;AAAA,IACQ,GACA7Q,EAAM,MAAM,KAAK1L,CAAI;AAAA,EACzB;AAAA,EACH,UAAW0L,GAAOklB,GAAY;AACvB,UAAMhtB,IAAQ8H,EAAM,QAAQA,EAAM,MAAM,QAAQklB,CAAU,IAAI;AAC9D,IAAIhtB,MAAU,MACV8H,EAAM,MAAM,OAAO9H,GAAO,CAAC;AAAA,EAEnC;AAAA,EACH,UAAW8H,GAAO1L,GAAMnB,GAAS;AAC1B,IAAAmB,EAAK,WAAWnB,EAAQ,UACxBmB,EAAK,WAAWnB,EAAQ,UACxBmB,EAAK,SAASnB,EAAQ;AAAA,EAC1B;AAAA,EACH,OAAQ6M,GAAOE,GAAO2L,GAAQsZ,GAAY;AACnC,QAAI,CAACnlB;AACD;AAEJ,UAAMolB,IAAU1hB,EAAU1D,EAAM,QAAQ,OAAO,OAAO,GAChDqlB,IAAiB,KAAK,IAAInlB,IAAQklB,EAAQ,OAAO,CAAC,GAClDE,IAAkB,KAAK,IAAIzZ,IAASuZ,EAAQ,QAAQ,CAAC,GACrDtC,IAAQY,GAAiB1jB,EAAM,KAAK,GACpCulB,IAAgBzC,EAAM,UACtB0C,IAAkB1C,EAAM;AAC9B,IAAA1wB,EAAK4N,EAAM,OAAO,CAACsL,MAAM;AACrB,MAAI,OAAOA,EAAI,gBAAiB,cAC5BA,EAAI,aAAY;AAAA,IAExB,CAAC;AACD,UAAMma,IAA0BF,EAAc,OAAO,CAACnG,GAAO+D,MAAOA,EAAK,IAAI,WAAWA,EAAK,IAAI,QAAQ,YAAY,KAAQ/D,IAAQA,IAAQ,GAAG,CAAC,KAAK,GAChJiE,IAAS,OAAO,OAAO;AAAA,MACzB,YAAYnjB;AAAA,MACZ,aAAa2L;AAAA,MACb,SAAAuZ;AAAA,MACA,gBAAAC;AAAA,MACA,iBAAAC;AAAA,MACA,cAAcD,IAAiB,IAAII;AAAA,MACnC,eAAeH,IAAkB;AAAA,IAC7C,CAAS,GACKxB,IAAa,OAAO,OAAO,CAAA,GAAIsB,CAAO;AAC5C,IAAArB,GAAiBD,GAAYpgB,EAAUyhB,CAAU,CAAC;AAClD,UAAMtU,IAAY,OAAO,OAAO;AAAA,MAC5B,YAAAiT;AAAA,MACA,GAAGuB;AAAA,MACH,GAAGC;AAAA,MACH,GAAGF,EAAQ;AAAA,MACX,GAAGA,EAAQ;AAAA,IACvB,GAAWA,CAAO,GACJtQ,IAASsO,GAAcmC,EAAc,OAAOC,CAAe,GAAGnC,CAAM;AAC1E,IAAAqB,GAAS5B,EAAM,UAAUjS,GAAWwS,GAAQvO,CAAM,GAClD4P,GAASa,GAAe1U,GAAWwS,GAAQvO,CAAM,GAC7C4P,GAASc,GAAiB3U,GAAWwS,GAAQvO,CAAM,KACnD4P,GAASa,GAAe1U,GAAWwS,GAAQvO,CAAM,GAErDwP,GAAiBzT,CAAS,GAC1BmU,GAAWlC,EAAM,YAAYjS,GAAWwS,GAAQvO,CAAM,GACtDjE,EAAU,KAAKA,EAAU,GACzBA,EAAU,KAAKA,EAAU,GACzBmU,GAAWlC,EAAM,gBAAgBjS,GAAWwS,GAAQvO,CAAM,GAC1D9U,EAAM,YAAY;AAAA,MACd,MAAM6Q,EAAU;AAAA,MAChB,KAAKA,EAAU;AAAA,MACf,OAAOA,EAAU,OAAOA,EAAU;AAAA,MAClC,QAAQA,EAAU,MAAMA,EAAU;AAAA,MAClC,QAAQA,EAAU;AAAA,MAClB,OAAOA,EAAU;AAAA,IAC7B,GACQze,EAAK0wB,EAAM,WAAW,CAACU,MAAS;AAC5B,YAAMlY,IAAMkY,EAAO;AACnB,aAAO,OAAOlY,GAAKtL,EAAM,SAAS,GAClCsL,EAAI,OAAOuF,EAAU,GAAGA,EAAU,GAAG;AAAA,QACjC,MAAM;AAAA,QACN,KAAK;AAAA,QACL,OAAO;AAAA,QACP,QAAQ;AAAA,MACxB,CAAa;AAAA,IACL,CAAC;AAAA,EACL;AACJ;AAEA,MAAM6U,GAAa;AAAA,EAClB,eAAeplB,GAAQmM,GAAa;AAAA,EAAC;AAAA,EACrC,eAAenO,GAAS;AACjB,WAAO;AAAA,EACX;AAAA,EACH,iBAAiB0B,GAAOvP,GAAMqI,GAAU;AAAA,EAAC;AAAA,EACzC,oBAAoBkH,GAAOvP,GAAMqI,GAAU;AAAA,EAAC;AAAA,EAC5C,sBAAsB;AACf,WAAO;AAAA,EACX;AAAA,EACH,eAAe2R,GAASvK,GAAO2L,GAAQY,GAAa;AAC7C,WAAAvM,IAAQ,KAAK,IAAI,GAAGA,KAASuK,EAAQ,KAAK,GAC1CoB,IAASA,KAAUpB,EAAQ,QACpB;AAAA,MACH,OAAAvK;AAAA,MACA,QAAQ,KAAK,IAAI,GAAGuM,IAAc,KAAK,MAAMvM,IAAQuM,CAAW,IAAIZ,CAAM;AAAA,IACtF;AAAA,EACI;AAAA,EACH,WAAWvL,GAAQ;AACZ,WAAO;AAAA,EACX;AAAA,EACH,aAAaoS,GAAQ;AAAA,EAClB;AACJ;AAEA,MAAMiT,WAAsBD,GAAa;AAAA,EACrC,eAAepxB,GAAM;AACjB,WAAOA,KAAQA,EAAK,cAAcA,EAAK,WAAW,IAAI,KAAK;AAAA,EAC/D;AAAA,EACA,aAAaoe,GAAQ;AACjB,IAAAA,EAAO,QAAQ,YAAY;AAAA,EAC/B;AACJ;AAEA,MAAMkT,KAAc,YACbC,KAAc;AAAA,EACjB,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,UAAU;AAAA,EACV,cAAc;AAAA,EACd,aAAa;AAAA,EACb,aAAa;AAAA,EACb,WAAW;AAAA,EACX,cAAc;AAAA,EACd,YAAY;AAChB,GACMC,KAAgB,CAACx0B,MAAQA,MAAU,QAAQA,MAAU;AAC1D,SAASy0B,GAAWzlB,GAAQmM,GAAa;AACtC,QAAM1L,IAAQT,EAAO,OACf0lB,IAAe1lB,EAAO,aAAa,QAAQ,GAC3C2lB,IAAc3lB,EAAO,aAAa,OAAO;AAc/C,MAbAA,EAAOslB,EAAW,IAAI;AAAA,IAClB,SAAS;AAAA,MACL,QAAQI;AAAA,MACR,OAAOC;AAAA,MACP,OAAO;AAAA,QACH,SAASllB,EAAM;AAAA,QACf,QAAQA,EAAM;AAAA,QACd,OAAOA,EAAM;AAAA,MAC7B;AAAA,IACA;AAAA,EACA,GACIA,EAAM,UAAUA,EAAM,WAAW,SACjCA,EAAM,YAAYA,EAAM,aAAa,cACjC+kB,GAAcG,CAAW,GAAG;AAC5B,UAAMC,IAAe9Y,GAAa9M,GAAQ,OAAO;AACjD,IAAI4lB,MAAiB,WACjB5lB,EAAO,QAAQ4lB;AAAA,EAEvB;AACA,MAAIJ,GAAcE,CAAY;AAC1B,QAAI1lB,EAAO,MAAM,WAAW;AACxB,MAAAA,EAAO,SAASA,EAAO,SAASmM,KAAe;AAAA,SAC5C;AACH,YAAM0Z,IAAgB/Y,GAAa9M,GAAQ,QAAQ;AACnD,MAAI6lB,MAAkB,WAClB7lB,EAAO,SAAS6lB;AAAA,IAExB;AAEJ,SAAO7lB;AACX;AACA,MAAM8lB,KAAuBlZ,KAA+B;AAAA,EACxD,SAAS;AACb,IAAI;AACJ,SAASmZ,GAAYroB,GAAMvN,GAAMqI,GAAU;AACvC,EAAIkF,KACAA,EAAK,iBAAiBvN,GAAMqI,GAAUstB,EAAoB;AAElE;AACA,SAASE,GAAetmB,GAAOvP,GAAMqI,GAAU;AAC3C,EAAIkH,KAASA,EAAM,UACfA,EAAM,OAAO,oBAAoBvP,GAAMqI,GAAUstB,EAAoB;AAE7E;AACA,SAASG,GAAgB/a,GAAOxL,GAAO;AACnC,QAAMvP,IAAOo1B,GAAYra,EAAM,IAAI,KAAKA,EAAM,MACxC,EAAE,GAAAlgB,GAAI,GAAAN,EAAC,IAAMugB,GAAoBC,GAAOxL,CAAK;AACnD,SAAO;AAAA,IACH,MAAAvP;AAAA,IACA,OAAAuP;AAAA,IACA,QAAQwL;AAAA,IACR,GAAGlgB,MAAM,SAAYA,IAAI;AAAA,IACzB,GAAGN,MAAM,SAAYA,IAAI;AAAA,EACjC;AACA;AACA,SAASw7B,GAAiBC,GAAUnmB,GAAQ;AACxC,aAAWtC,KAAQyoB;AACf,QAAIzoB,MAASsC,KAAUtC,EAAK,SAASsC,CAAM;AACvC,aAAO;AAGnB;AACA,SAASomB,GAAqB1mB,GAAOvP,GAAMqI,GAAU;AACjD,QAAMwH,IAASN,EAAM,QACf2mB,IAAW,IAAI,iBAAiB,CAACC,MAAU;AAC7C,QAAIC,IAAU;AACd,eAAWhN,KAAS+M;AAChB,MAAAC,IAAUA,KAAWL,GAAiB3M,EAAM,YAAYvZ,CAAM,GAC9DumB,IAAUA,KAAW,CAACL,GAAiB3M,EAAM,cAAcvZ,CAAM;AAErE,IAAIumB,KACA/tB,EAAQ;AAAA,EAEhB,CAAC;AACD,SAAA6tB,EAAS,QAAQ,UAAU;AAAA,IACvB,WAAW;AAAA,IACX,SAAS;AAAA,EACjB,CAAK,GACMA;AACX;AACA,SAASG,GAAqB9mB,GAAOvP,GAAMqI,GAAU;AACjD,QAAMwH,IAASN,EAAM,QACf2mB,IAAW,IAAI,iBAAiB,CAACC,MAAU;AAC7C,QAAIC,IAAU;AACd,eAAWhN,KAAS+M;AAChB,MAAAC,IAAUA,KAAWL,GAAiB3M,EAAM,cAAcvZ,CAAM,GAChEumB,IAAUA,KAAW,CAACL,GAAiB3M,EAAM,YAAYvZ,CAAM;AAEnE,IAAIumB,KACA/tB,EAAQ;AAAA,EAEhB,CAAC;AACD,SAAA6tB,EAAS,QAAQ,UAAU;AAAA,IACvB,WAAW;AAAA,IACX,SAAS;AAAA,EACjB,CAAK,GACMA;AACX;AACA,MAAMI,KAAqB,oBAAI,IAAG;AAClC,IAAIC,KAAsB;AAC1B,SAASC,KAAiB;AACtB,QAAMC,IAAM,OAAO;AACnB,EAAIA,MAAQF,OAGZA,KAAsBE,GACtBH,GAAmB,QAAQ,CAACI,GAAQnnB,MAAQ;AACxC,IAAIA,EAAM,4BAA4BknB,KAClCC,EAAM;AAAA,EAEd,CAAC;AACL;AACA,SAASC,GAA8BpnB,GAAOmnB,GAAQ;AAClD,EAAKJ,GAAmB,QACpB,OAAO,iBAAiB,UAAUE,EAAc,GAEpDF,GAAmB,IAAI/mB,GAAOmnB,CAAM;AACxC;AACA,SAASE,GAAgCrnB,GAAO;AAC5C,EAAA+mB,GAAmB,OAAO/mB,CAAK,GAC1B+mB,GAAmB,QACpB,OAAO,oBAAoB,UAAUE,EAAc;AAE3D;AACA,SAASK,GAAqBtnB,GAAOvP,GAAMqI,GAAU;AACjD,QAAMwH,IAASN,EAAM,QACfiM,IAAY3L,KAAU4J,GAAe5J,CAAM;AACjD,MAAI,CAAC2L;AACD;AAEJ,QAAMkb,IAASztB,GAAU,CAACwG,GAAO2L,MAAS;AACtC,UAAMhe,IAAIoe,EAAU;AACpB,IAAAnT,EAASoH,GAAO2L,CAAM,GAClBhe,IAAIoe,EAAU,eACdnT,EAAQ;AAAA,EAEhB,GAAG,MAAM,GACH6tB,IAAW,IAAI,eAAe,CAACC,MAAU;AAC3C,UAAM/M,IAAQ+M,EAAQ,CAAC,GACjB1mB,IAAQ2Z,EAAM,YAAY,OAC1BhO,IAASgO,EAAM,YAAY;AACjC,IAAI3Z,MAAU,KAAK2L,MAAW,KAG9Bsb,EAAOjnB,GAAO2L,CAAM;AAAA,EACxB,CAAC;AACD,SAAA8a,EAAS,QAAQ1a,CAAS,GAC1Bmb,GAA8BpnB,GAAOmnB,CAAM,GACpCR;AACX;AACA,SAASY,GAAgBvnB,GAAOvP,GAAMk2B,GAAU;AAC5C,EAAIA,KACAA,EAAS,WAAU,GAEnBl2B,MAAS,YACT42B,GAAgCrnB,CAAK;AAE7C;AACA,SAASwnB,GAAqBxnB,GAAOvP,GAAMqI,GAAU;AACjD,QAAMwH,IAASN,EAAM,QACfqF,IAAQ3L,GAAU,CAAC8R,MAAQ;AAC7B,IAAIxL,EAAM,QAAQ,QACdlH,EAASytB,GAAgB/a,GAAOxL,CAAK,CAAC;AAAA,EAE9C,GAAGA,CAAK;AACR,SAAAqmB,GAAY/lB,GAAQ7P,GAAM4U,CAAK,GACxBA;AACX;AACC,MAAMoiB,WAAoB/B,GAAa;AAAA,EACvC,eAAeplB,GAAQmM,GAAa;AAC7B,UAAMnO,IAAUgC,KAAUA,EAAO,cAAcA,EAAO,WAAW,IAAI;AACrE,WAAIhC,KAAWA,EAAQ,WAAWgC,KAC9BylB,GAAWzlB,GAAQmM,CAAW,GACvBnO,KAEJ;AAAA,EACX;AAAA,EACH,eAAeA,GAAS;AACjB,UAAMgC,IAAShC,EAAQ;AACvB,QAAI,CAACgC,EAAOslB,EAAW;AACnB,aAAO;AAEX,UAAM8B,IAAUpnB,EAAOslB,EAAW,EAAE;AACpC;AAAA,MACI;AAAA,MACA;AAAA,IACZ,EAAU,QAAQ,CAACriB,MAAO;AACd,YAAMjS,IAAQo2B,EAAQnkB,CAAI;AAC1B,MAAIlS,EAAcC,CAAK,IACnBgP,EAAO,gBAAgBiD,CAAI,IAE3BjD,EAAO,aAAaiD,GAAMjS,CAAK;AAAA,IAEvC,CAAC;AACD,UAAMyP,IAAQ2mB,EAAQ,SAAS,CAAA;AAC/B,kBAAO,KAAK3mB,CAAK,EAAE,QAAQ,CAAC9N,MAAM;AAC9B,MAAAqN,EAAO,MAAMrN,CAAG,IAAI8N,EAAM9N,CAAG;AAAA,IACjC,CAAC,GACDqN,EAAO,QAAQA,EAAO,OACtB,OAAOA,EAAOslB,EAAW,GAClB;AAAA,EACX;AAAA,EACH,iBAAiB5lB,GAAOvP,GAAMqI,GAAU;AACjC,SAAK,oBAAoBkH,GAAOvP,CAAI;AACpC,UAAMk3B,IAAU3nB,EAAM,aAAaA,EAAM,WAAW,CAAA,IAM9CohB,IALW;AAAA,MACb,QAAQsF;AAAA,MACR,QAAQI;AAAA,MACR,QAAQQ;AAAA,IACpB,EACiC72B,CAAI,KAAK+2B;AAClC,IAAAG,EAAQl3B,CAAI,IAAI2wB,EAAQphB,GAAOvP,GAAMqI,CAAQ;AAAA,EACjD;AAAA,EACH,oBAAoBkH,GAAOvP,GAAM;AAC1B,UAAMk3B,IAAU3nB,EAAM,aAAaA,EAAM,WAAW,CAAA,IAC9CqF,IAAQsiB,EAAQl3B,CAAI;AAC1B,QAAI,CAAC4U;AACD;AAQJ,KANiB;AAAA,MACb,QAAQkiB;AAAA,MACR,QAAQA;AAAA,MACR,QAAQA;AAAA,IACpB,EACiC92B,CAAI,KAAK61B,IAC1BtmB,GAAOvP,GAAM4U,CAAK,GAC1BsiB,EAAQl3B,CAAI,IAAI;AAAA,EACpB;AAAA,EACA,sBAAsB;AAClB,WAAO,OAAO;AAAA,EAClB;AAAA,EACH,eAAe6P,GAAQJ,GAAO2L,GAAQY,GAAa;AAC5C,WAAOH,GAAehM,GAAQJ,GAAO2L,GAAQY,CAAW;AAAA,EAC5D;AAAA,EACH,WAAWnM,GAAQ;AACZ,UAAM2L,IAAY3L,KAAU4J,GAAe5J,CAAM;AACjD,WAAO,CAAC,EAAE2L,KAAaA,EAAU;AAAA,EACrC;AACJ;AAEA,SAAS2b,GAAgBtnB,GAAQ;AAC7B,SAAI,CAAC2J,GAAe,KAAM,OAAO,kBAAoB,OAAe3J,aAAkB,kBAC3EqlB,KAEJ8B;AACX;AAEA,MAAMI,GAAQ;AAAA,EACV,OAAO,WAAW,CAAA;AAAA,EAClB,OAAO,gBAAgB;AAAA,EACvB;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT;AAAA,EACA;AAAA,EACA,gBAAgBlG,GAAkB;AAC9B,UAAM,EAAE,GAAAr2B,GAAI,GAAAN,MAAO,KAAK,SAAS;AAAA,MAC7B;AAAA,MACA;AAAA,IACZ,GAAW22B,CAAgB;AACnB,WAAO;AAAA,MACH,GAAAr2B;AAAA,MACA,GAAAN;AAAA,IACZ;AAAA,EACI;AAAA,EACA,WAAW;AACP,WAAO6K,GAAS,KAAK,CAAC,KAAKA,GAAS,KAAK,CAAC;AAAA,EAC9C;AAAA,EACA,SAASuN,GAAO0kB,GAAO;AACnB,UAAM3W,IAAQ,KAAK;AACnB,QAAI,CAAC2W,KAAS,CAAC3W;AAEX,aAAO;AAEX,UAAM7jB,IAAM,CAAA;AACZ,WAAA8V,EAAM,QAAQ,CAACG,MAAO;AAClB,MAAAjW,EAAIiW,CAAI,IAAI4N,EAAM5N,CAAI,KAAK4N,EAAM5N,CAAI,EAAE,OAAM,IAAK4N,EAAM5N,CAAI,EAAE,MAAM,KAAKA,CAAI;AAAA,IACjF,CAAC,GACMjW;AAAA,EACX;AACJ;AAEA,SAASy6B,GAASnX,GAAO1T,GAAO;AAC5B,QAAM8qB,IAAWpX,EAAM,QAAQ,OACzBqX,IAAqBC,GAAkBtX,CAAK,GAC5CuX,IAAa,KAAK,IAAIH,EAAS,iBAAiBC,GAAoBA,CAAkB,GACtFG,IAAeJ,EAAS,MAAM,UAAUK,GAAgBnrB,CAAK,IAAI,CAAA,GACjEorB,IAAkBF,EAAa,QAC/BG,IAAQH,EAAa,CAAC,GACtB7vB,IAAO6vB,EAAaE,IAAkB,CAAC,GACvCE,IAAW,CAAA;AACjB,MAAIF,IAAkBH;AAClB,WAAAM,GAAWvrB,GAAOsrB,GAAUJ,GAAcE,IAAkBH,CAAU,GAC/DK;AAEX,QAAMjK,IAAUmK,GAAiBN,GAAclrB,GAAOirB,CAAU;AAChE,MAAIG,IAAkB,GAAG;AACrB,QAAIj+B,GAAGqI;AACP,UAAMi2B,IAAkBL,IAAkB,IAAI,KAAK,OAAO/vB,IAAOgwB,MAAUD,IAAkB,EAAE,IAAI;AAEnG,SADAM,GAAK1rB,GAAOsrB,GAAUjK,GAASltB,EAAcs3B,CAAe,IAAI,IAAIJ,IAAQI,GAAiBJ,CAAK,GAC9Fl+B,IAAI,GAAGqI,IAAO41B,IAAkB,GAAGj+B,IAAIqI,GAAMrI;AAC7C,MAAAu+B,GAAK1rB,GAAOsrB,GAAUjK,GAAS6J,EAAa/9B,CAAC,GAAG+9B,EAAa/9B,IAAI,CAAC,CAAC;AAEvE,WAAAu+B,GAAK1rB,GAAOsrB,GAAUjK,GAAShmB,GAAMlH,EAAcs3B,CAAe,IAAIzrB,EAAM,SAAS3E,IAAOowB,CAAe,GACpGH;AAAA,EACX;AACA,SAAAI,GAAK1rB,GAAOsrB,GAAUjK,CAAO,GACtBiK;AACX;AACA,SAASN,GAAkBtX,GAAO;AAC9B,QAAMiY,IAASjY,EAAM,QAAQ,QACvBkY,IAAalY,EAAM,UAAS,GAC5BmY,IAAWnY,EAAM,UAAUkY,KAAcD,IAAS,IAAI,IACtDG,IAAWpY,EAAM,aAAakY;AACpC,SAAO,KAAK,MAAM,KAAK,IAAIC,GAAUC,CAAQ,CAAC;AAClD;AACC,SAASN,GAAiBN,GAAclrB,GAAOirB,GAAY;AACxD,QAAMc,IAAmBC,GAAed,CAAY,GAC9C7J,IAAUrhB,EAAM,SAASirB;AAC/B,MAAI,CAACc;AACD,WAAO,KAAK,IAAI1K,GAAS,CAAC;AAE9B,QAAM4K,IAAU1zB,GAAWwzB,CAAgB;AAC3C,WAAQ5+B,IAAI,GAAGqI,IAAOy2B,EAAQ,SAAS,GAAG9+B,IAAIqI,GAAMrI,KAAI;AACpD,UAAM0nB,IAASoX,EAAQ9+B,CAAC;AACxB,QAAI0nB,IAASwM;AACT,aAAOxM;AAAA,EAEf;AACA,SAAO,KAAK,IAAIwM,GAAS,CAAC;AAC9B;AACC,SAAS8J,GAAgBnrB,GAAO;AAC7B,QAAMxH,IAAS,CAAA;AACf,MAAIrL,GAAGqI;AACP,OAAIrI,IAAI,GAAGqI,IAAOwK,EAAM,QAAQ7S,IAAIqI,GAAMrI;AACtC,IAAI6S,EAAM7S,CAAC,EAAE,SACTqL,EAAO,KAAKrL,CAAC;AAGrB,SAAOqL;AACX;AACC,SAAS+yB,GAAWvrB,GAAOsrB,GAAUJ,GAAc7J,GAAS;AACzD,MAAI3jB,IAAQ,GACRmN,IAAOqgB,EAAa,CAAC,GACrB/9B;AAEJ,OADAk0B,IAAU,KAAK,KAAKA,CAAO,GACvBl0B,IAAI,GAAGA,IAAI6S,EAAM,QAAQ7S;AACzB,IAAIA,MAAM0d,MACNygB,EAAS,KAAKtrB,EAAM7S,CAAC,CAAC,GACtBuQ,KACAmN,IAAOqgB,EAAaxtB,IAAQ2jB,CAAO;AAG/C;AACC,SAASqK,GAAK1rB,GAAOsrB,GAAUjK,GAAS6K,GAAYC,GAAU;AAC3D,QAAMhyB,IAAQzF,EAAew3B,GAAY,CAAC,GACpC9xB,IAAM,KAAK,IAAI1F,EAAey3B,GAAUnsB,EAAM,MAAM,GAAGA,EAAM,MAAM;AACzE,MAAItC,IAAQ,GACRshB,GAAQ7xB,GAAG0d;AAOf,OANAwW,IAAU,KAAK,KAAKA,CAAO,GACvB8K,MACAnN,IAASmN,IAAWD,GACpB7K,IAAUrC,IAAS,KAAK,MAAMA,IAASqC,CAAO,IAElDxW,IAAO1Q,GACD0Q,IAAO;AACT,IAAAnN,KACAmN,IAAO,KAAK,MAAM1Q,IAAQuD,IAAQ2jB,CAAO;AAE7C,OAAIl0B,IAAI,KAAK,IAAIgN,GAAO,CAAC,GAAGhN,IAAIiN,GAAKjN;AACjC,IAAIA,MAAM0d,MACNygB,EAAS,KAAKtrB,EAAM7S,CAAC,CAAC,GACtBuQ,KACAmN,IAAO,KAAK,MAAM1Q,IAAQuD,IAAQ2jB,CAAO;AAGrD;AACC,SAAS2K,GAAeziB,GAAK;AAC1B,QAAMpZ,IAAMoZ,EAAI;AAChB,MAAIpc,GAAGi/B;AACP,MAAIj8B,IAAM;AACN,WAAO;AAEX,OAAIi8B,IAAO7iB,EAAI,CAAC,GAAGpc,IAAI,GAAGA,IAAIgD,GAAK,EAAEhD;AACjC,QAAIoc,EAAIpc,CAAC,IAAIoc,EAAIpc,IAAI,CAAC,MAAMi/B;AACxB,aAAO;AAGf,SAAOA;AACX;AAEA,MAAMC,KAAe,CAACtvB,MAAQA,MAAU,SAAS,UAAUA,MAAU,UAAU,SAASA,GAClFuvB,KAAiB,CAAC5Y,GAAO8J,GAAMmO,MAASnO,MAAS,SAASA,MAAS,SAAS9J,EAAM8J,CAAI,IAAImO,IAASjY,EAAM8J,CAAI,IAAImO,GACjHY,KAAgB,CAACC,GAAaC,MAAgB,KAAK,IAAIA,KAAiBD,GAAaA,CAAW;AACrG,SAASE,GAAOnjB,GAAKojB,GAAU;AAC5B,QAAMn0B,IAAS,CAAA,GACTo0B,IAAYrjB,EAAI,SAASojB,GACzBx8B,IAAMoZ,EAAI;AAChB,MAAIpc,IAAI;AACR,SAAMA,IAAIgD,GAAKhD,KAAKy/B;AAChB,IAAAp0B,EAAO,KAAK+Q,EAAI,KAAK,MAAMpc,CAAC,CAAC,CAAC;AAElC,SAAOqL;AACX;AACC,SAASq0B,GAAoBnZ,GAAO1Y,GAAO8xB,GAAiB;AACzD,QAAM9N,IAAStL,EAAM,MAAM,QACrBqZ,IAAa,KAAK,IAAI/xB,GAAOgkB,IAAS,CAAC,GACvC7kB,IAAQuZ,EAAM,aACdtZ,IAAMsZ,EAAM,WACZzb,IAAU;AAChB,MAAI+0B,IAAYtZ,EAAM,gBAAgBqZ,CAAU,GAC5CpB;AACJ,MAAI,EAAAmB,MACI9N,MAAW,IACX2M,IAAS,KAAK,IAAIqB,IAAY7yB,GAAOC,IAAM4yB,CAAS,IAC7ChyB,MAAU,IACjB2wB,KAAUjY,EAAM,gBAAgB,CAAC,IAAIsZ,KAAa,IAElDrB,KAAUqB,IAAYtZ,EAAM,gBAAgBqZ,IAAa,CAAC,KAAK,GAEnEC,KAAaD,IAAa/xB,IAAQ2wB,IAAS,CAACA,GACxCqB,IAAY7yB,IAAQlC,KAAW+0B,IAAY5yB,IAAMnC;AAIzD,WAAO+0B;AACX;AACC,SAASC,GAAeC,GAAQlO,GAAQ;AACrC,EAAA9pB,EAAKg4B,GAAQ,CAAC1qB,MAAQ;AAClB,UAAMN,IAAKM,EAAM,IACXI,IAAQV,EAAG,SAAS;AAC1B,QAAI/U;AACJ,QAAIyV,IAAQoc,GAAQ;AAChB,WAAI7xB,IAAI,GAAGA,IAAIyV,GAAO,EAAEzV;AACpB,eAAOqV,EAAM,KAAKN,EAAG/U,CAAC,CAAC;AAE3B,MAAA+U,EAAG,OAAO,GAAGU,CAAK;AAAA,IACtB;AAAA,EACJ,CAAC;AACL;AACC,SAASuqB,GAAkBl3B,GAAS;AACjC,SAAOA,EAAQ,YAAYA,EAAQ,aAAa;AACpD;AACC,SAASm3B,GAAen3B,GAASyQ,GAAU;AACxC,MAAI,CAACzQ,EAAQ;AACT,WAAO;AAEX,QAAM8L,IAAO0E,EAAOxQ,EAAQ,MAAMyQ,CAAQ,GACpCwhB,IAAU1hB,EAAUvQ,EAAQ,OAAO;AAEzC,UADc5B,EAAQ4B,EAAQ,IAAI,IAAIA,EAAQ,KAAK,SAAS,KAC7C8L,EAAK,aAAammB,EAAQ;AAC7C;AACA,SAASmF,GAAmB1jB,GAAQ+J,GAAO;AACvC,SAAOrM,GAAcsC,GAAQ;AAAA,IACzB,OAAA+J;AAAA,IACA,MAAM;AAAA,EACd,CAAK;AACL;AACA,SAAS4Z,GAAkB3jB,GAAQ3O,GAAOuyB,GAAM;AAC5C,SAAOlmB,GAAcsC,GAAQ;AAAA,IACzB,MAAA4jB;AAAA,IACA,OAAAvyB;AAAA,IACA,MAAM;AAAA,EACd,CAAK;AACL;AACA,SAASwyB,GAAWzwB,GAAOknB,GAAU7uB,GAAS;AACzC,MAAIhF,IAAM0M,GAAmBC,CAAK;AACnC,UAAI3H,KAAW6uB,MAAa,WAAW,CAAC7uB,KAAW6uB,MAAa,aAC5D7zB,IAAMi8B,GAAaj8B,CAAG,IAEnBA;AACX;AACA,SAASq9B,GAAU/Z,GAAOiY,GAAQ1H,GAAUlnB,GAAO;AAC/C,QAAM,EAAE,KAAAkI,GAAM,MAAA/H,GAAO,QAAAgI,GAAS,OAAA/H,GAAQ,OAAA2F,EAAK,IAAM4Q,GAC3C,EAAE,WAAAC,GAAY,QAAA8E,EAAM,IAAM3V;AAChC,MAAIgB,IAAW,GACX+K,GAAU6e,GAAQC;AACtB,QAAMhf,IAASzJ,IAASD,GAClBjC,IAAQ7F,IAAQD;AACtB,MAAIwW,EAAM,gBAAgB;AAEtB,QADAga,IAAS1wB,EAAeD,GAAOG,GAAMC,CAAK,GACtC7I,EAAS2vB,CAAQ,GAAG;AACpB,YAAM2J,IAAiB,OAAO,KAAK3J,CAAQ,EAAE,CAAC,GACxC7vB,IAAQ6vB,EAAS2J,CAAc;AACrC,MAAAD,IAASlV,EAAOmV,CAAc,EAAE,iBAAiBx5B,CAAK,IAAIua,IAASgd;AAAA,IACvE,MAAO,CAAI1H,MAAa,WACpB0J,KAAUha,EAAU,SAASA,EAAU,OAAO,IAAIhF,IAASgd,IAE3DgC,IAASrB,GAAe5Y,GAAOuQ,GAAU0H,CAAM;AAEnD,IAAA9c,IAAW1R,IAAQD;AAAA,EACvB,OAAO;AACH,QAAI5I,EAAS2vB,CAAQ,GAAG;AACpB,YAAM2J,IAAiB,OAAO,KAAK3J,CAAQ,EAAE,CAAC,GACxC7vB,IAAQ6vB,EAAS2J,CAAc;AACrC,MAAAF,IAASjV,EAAOmV,CAAc,EAAE,iBAAiBx5B,CAAK,IAAI4O,IAAQ2oB;AAAA,IACtE,MAAO,CAAI1H,MAAa,WACpByJ,KAAU/Z,EAAU,OAAOA,EAAU,SAAS,IAAI3Q,IAAQ2oB,IAE1D+B,IAASpB,GAAe5Y,GAAOuQ,GAAU0H,CAAM;AAEnD,IAAAgC,IAAS3wB,EAAeD,GAAOmI,GAAQD,CAAG,GAC1CnB,IAAWmgB,MAAa,SAAS,CAACtsB,IAAUA;AAAA,EAChD;AACA,SAAO;AAAA,IACH,QAAA+1B;AAAA,IACA,QAAAC;AAAA,IACA,UAAA9e;AAAA,IACA,UAAA/K;AAAA,EACR;AACA;AACA,MAAM+pB,WAAclD,GAAQ;AAAA,EACxB,YAAY3V,GAAI;AACZ,UAAK,GACJ,KAAK,KAAKA,EAAI,IACd,KAAK,OAAOA,EAAI,MAChB,KAAK,UAAU,QACf,KAAK,MAAMA,EAAI,KACf,KAAK,QAAQA,EAAI,OACjB,KAAK,MAAM,QACX,KAAK,SAAS,QACd,KAAK,OAAO,QACZ,KAAK,QAAQ,QACb,KAAK,QAAQ,QACb,KAAK,SAAS,QACf,KAAK,WAAW;AAAA,MACZ,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,MACL,QAAQ;AAAA,IACpB,GACS,KAAK,WAAW,QAChB,KAAK,YAAY,QACjB,KAAK,aAAa,QAClB,KAAK,gBAAgB,QACrB,KAAK,cAAc,QACnB,KAAK,eAAe,QACpB,KAAK,OAAO,QACZ,KAAK,gBAAgB,QACtB,KAAK,MAAM,QACX,KAAK,MAAM,QACX,KAAK,SAAS,QACb,KAAK,QAAQ,CAAA,GACb,KAAK,iBAAiB,MACtB,KAAK,cAAc,MACnB,KAAK,cAAc,MACpB,KAAK,UAAU,GACf,KAAK,aAAa,GAClB,KAAK,oBAAoB,CAAA,GACxB,KAAK,cAAc,QACnB,KAAK,YAAY,QAClB,KAAK,iBAAiB,IACtB,KAAK,WAAW,QAChB,KAAK,WAAW,QAChB,KAAK,gBAAgB,QACrB,KAAK,gBAAgB,QACrB,KAAK,eAAe,GACpB,KAAK,eAAe,GACpB,KAAK,SAAS,CAAA,GACd,KAAK,oBAAoB,IACzB,KAAK,WAAW;AAAA,EACpB;AAAA,EACH,KAAK/e,GAAS;AACP,SAAK,UAAUA,EAAQ,WAAW,KAAK,WAAU,CAAE,GACnD,KAAK,OAAOA,EAAQ,MACpB,KAAK,WAAW,KAAK,MAAMA,EAAQ,GAAG,GACtC,KAAK,WAAW,KAAK,MAAMA,EAAQ,GAAG,GACtC,KAAK,gBAAgB,KAAK,MAAMA,EAAQ,YAAY,GACpD,KAAK,gBAAgB,KAAK,MAAMA,EAAQ,YAAY;AAAA,EACxD;AAAA,EACH,MAAM63B,GAAK9yB,GAAO;AACX,WAAO8yB;AAAA,EACX;AAAA,EACH,gBAAgB;AACT,QAAI,EAAE,UAAAC,GAAW,UAAAC,GAAW,eAAAC,GAAgB,eAAAC,EAAa,IAAM;AAC/D,WAAAH,IAAWv5B,GAAgBu5B,GAAU,OAAO,iBAAiB,GAC7DC,IAAWx5B,GAAgBw5B,GAAU,OAAO,iBAAiB,GAC7DC,IAAgBz5B,GAAgBy5B,GAAe,OAAO,iBAAiB,GACvEC,IAAgB15B,GAAgB05B,GAAe,OAAO,iBAAiB,GAChE;AAAA,MACH,KAAK15B,GAAgBu5B,GAAUE,CAAa;AAAA,MAC5C,KAAKz5B,GAAgBw5B,GAAUE,CAAa;AAAA,MAC5C,YAAY35B,EAAew5B,CAAQ;AAAA,MACnC,YAAYx5B,EAAey5B,CAAQ;AAAA,IAC/C;AAAA,EACI;AAAA,EACH,UAAU9U,GAAU;AACb,QAAI,EAAE,KAAAloB,GAAM,KAAAF,GAAM,YAAAkN,GAAa,YAAAC,EAAU,IAAM,KAAK,cAAa,GAC7D9F;AACJ,QAAI6F,KAAcC;AACd,aAAO;AAAA,QACH,KAAAjN;AAAA,QACA,KAAAF;AAAA,MAChB;AAEQ,UAAMq9B,IAAQ,KAAK,wBAAuB;AAC1C,aAAQhhC,IAAI,GAAGqI,IAAO24B,EAAM,QAAQhhC,IAAIqI,GAAM,EAAErI;AAC5C,MAAAgL,IAAQg2B,EAAMhhC,CAAC,EAAE,WAAW,UAAU,MAAM+rB,CAAQ,GAC/Clb,MACDhN,IAAM,KAAK,IAAIA,GAAKmH,EAAM,GAAG,IAE5B8F,MACDnN,IAAM,KAAK,IAAIA,GAAKqH,EAAM,GAAG;AAGrC,WAAAnH,IAAMiN,KAAcjN,IAAMF,IAAMA,IAAME,GACtCF,IAAMkN,KAAchN,IAAMF,IAAME,IAAMF,GAC/B;AAAA,MACH,KAAK0D,GAAgBxD,GAAKwD,GAAgB1D,GAAKE,CAAG,CAAC;AAAA,MACnD,KAAKwD,GAAgB1D,GAAK0D,GAAgBxD,GAAKF,CAAG,CAAC;AAAA,IAC/D;AAAA,EACI;AAAA,EACH,aAAa;AACN,WAAO;AAAA,MACH,MAAM,KAAK,eAAe;AAAA,MAC1B,KAAK,KAAK,cAAc;AAAA,MACxB,OAAO,KAAK,gBAAgB;AAAA,MAC5B,QAAQ,KAAK,iBAAiB;AAAA,IAC1C;AAAA,EACI;AAAA,EACH,WAAW;AACJ,WAAO,KAAK;AAAA,EAChB;AAAA,EACH,YAAY;AACL,UAAMmR,IAAO,KAAK,MAAM;AACxB,WAAO,KAAK,QAAQ,WAAW,KAAK,aAAY,IAAKA,EAAK,UAAUA,EAAK,YAAYA,EAAK,UAAU,CAAA;AAAA,EACxG;AAAA,EACH,cAAc0R,IAAY,KAAK,MAAM,WAAW;AAEzC,WADc,KAAK,gBAAgB,KAAK,cAAc,KAAK,mBAAmBA,CAAS;AAAA,EAE3F;AAAA,EACA,eAAe;AACX,SAAK,SAAS,CAAA,GACd,KAAK,oBAAoB;AAAA,EAC7B;AAAA,EACA,eAAe;AACX,IAAA7e,EAAS,KAAK,QAAQ,cAAc;AAAA,MAChC;AAAA,IACZ,CAAS;AAAA,EACL;AAAA,EACH,OAAO+Z,GAAUC,GAAWU,GAAS;AAC9B,UAAM,EAAE,aAAAvI,GAAc,OAAAD,GAAQ,OAAO8jB,EAAQ,IAAM,KAAK,SAClDsD,IAAatD,EAAS;AAC5B,SAAK,aAAY,GACjB,KAAK,WAAWjc,GAChB,KAAK,YAAYC,GACjB,KAAK,WAAWU,IAAU,OAAO,OAAO;AAAA,MACpC,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,MACL,QAAQ;AAAA,IACpB,GAAWA,CAAO,GACV,KAAK,QAAQ,MACb,KAAK,cAAc,MACnB,KAAK,iBAAiB,MACtB,KAAK,cAAc,MACnB,KAAK,oBAAmB,GACxB,KAAK,cAAa,GAClB,KAAK,mBAAkB,GACvB,KAAK,aAAa,KAAK,aAAY,IAAK,KAAK,QAAQA,EAAQ,OAAOA,EAAQ,QAAQ,KAAK,SAASA,EAAQ,MAAMA,EAAQ,QACnH,KAAK,sBACN,KAAK,iBAAgB,GACrB,KAAK,oBAAmB,GACxB,KAAK,gBAAe,GACpB,KAAK,SAAS1I,GAAU,MAAME,GAAOC,CAAW,GAChD,KAAK,oBAAoB,KAE7B,KAAK,iBAAgB,GACrB,KAAK,QAAQ,KAAK,WAAU,KAAM,CAAA,GAClC,KAAK,gBAAe;AACpB,UAAMonB,IAAkBD,IAAa,KAAK,MAAM;AAChD,SAAK,sBAAsBC,IAAkB3B,GAAO,KAAK,OAAO0B,CAAU,IAAI,KAAK,KAAK,GACxF,KAAK,UAAS,GACd,KAAK,6BAA4B,GACjC,KAAK,uBAAsB,GAC3B,KAAK,4BAA2B,GAC5BtD,EAAS,YAAYA,EAAS,YAAYA,EAAS,WAAW,YAC9D,KAAK,QAAQD,GAAS,MAAM,KAAK,KAAK,GACtC,KAAK,cAAc,MACnB,KAAK,cAAa,IAElBwD,KACA,KAAK,sBAAsB,KAAK,KAAK,GAEzC,KAAK,UAAS,GACd,KAAK,IAAG,GACR,KAAK,SAAQ,GACb,KAAK,YAAW;AAAA,EACpB;AAAA,EACH,YAAY;AACL,QAAIC,IAAgB,KAAK,QAAQ,SAC7BpP,GAAYC;AAChB,IAAI,KAAK,kBACLD,IAAa,KAAK,MAClBC,IAAW,KAAK,UAEhBD,IAAa,KAAK,KAClBC,IAAW,KAAK,QAChBmP,IAAgB,CAACA,IAErB,KAAK,cAAcpP,GACnB,KAAK,YAAYC,GACjB,KAAK,iBAAiBmP,GACtB,KAAK,UAAUnP,IAAWD,GAC1B,KAAK,iBAAiB,KAAK,QAAQ;AAAA,EACvC;AAAA,EACA,cAAc;AACV,IAAApqB,EAAS,KAAK,QAAQ,aAAa;AAAA,MAC/B;AAAA,IACZ,CAAS;AAAA,EACL;AAAA,EACA,sBAAsB;AAClB,IAAAA,EAAS,KAAK,QAAQ,qBAAqB;AAAA,MACvC;AAAA,IACZ,CAAS;AAAA,EACL;AAAA,EACA,gBAAgB;AACZ,IAAI,KAAK,kBACL,KAAK,QAAQ,KAAK,UAClB,KAAK,OAAO,GACZ,KAAK,QAAQ,KAAK,UAElB,KAAK,SAAS,KAAK,WACnB,KAAK,MAAM,GACX,KAAK,SAAS,KAAK,SAEvB,KAAK,cAAc,GACnB,KAAK,aAAa,GAClB,KAAK,eAAe,GACpB,KAAK,gBAAgB;AAAA,EACzB;AAAA,EACA,qBAAqB;AACjB,IAAAA,EAAS,KAAK,QAAQ,oBAAoB;AAAA,MACtC;AAAA,IACZ,CAAS;AAAA,EACL;AAAA,EACA,WAAWuK,GAAM;AACb,SAAK,MAAM,cAAcA,GAAM,KAAK,WAAU,CAAE,GAChDvK,EAAS,KAAK,QAAQuK,CAAI,GAAG;AAAA,MACzB;AAAA,IACZ,CAAS;AAAA,EACL;AAAA,EACA,mBAAmB;AACf,SAAK,WAAW,kBAAkB;AAAA,EACtC;AAAA,EACA,sBAAsB;AAAA,EAAC;AAAA,EACvB,kBAAkB;AACd,SAAK,WAAW,iBAAiB;AAAA,EACrC;AAAA,EACA,mBAAmB;AACf,SAAK,WAAW,kBAAkB;AAAA,EACtC;AAAA,EACH,aAAa;AACN,WAAO,CAAA;AAAA,EACX;AAAA,EACA,kBAAkB;AACd,SAAK,WAAW,iBAAiB;AAAA,EACrC;AAAA,EACA,8BAA8B;AAC1B,IAAAvK,EAAS,KAAK,QAAQ,6BAA6B;AAAA,MAC/C;AAAA,IACZ,CAAS;AAAA,EACL;AAAA,EACH,mBAAmBkL,GAAO;AACnB,UAAM8qB,IAAW,KAAK,QAAQ;AAC9B,QAAI39B,GAAGqI,GAAM+3B;AACb,SAAIpgC,IAAI,GAAGqI,IAAOwK,EAAM,QAAQ7S,IAAIqI,GAAMrI;AACtC,MAAAogC,IAAOvtB,EAAM7S,CAAC,GACdogC,EAAK,QAAQz4B,EAASg2B,EAAS,UAAU;AAAA,QACrCyC,EAAK;AAAA,QACLpgC;AAAA,QACA6S;AAAA,MAChB,GAAe,IAAI;AAAA,EAEf;AAAA,EACA,6BAA6B;AACzB,IAAAlL,EAAS,KAAK,QAAQ,4BAA4B;AAAA,MAC9C;AAAA,IACZ,CAAS;AAAA,EACL;AAAA,EACA,+BAA+B;AAC3B,IAAAA,EAAS,KAAK,QAAQ,8BAA8B;AAAA,MAChD;AAAA,IACZ,CAAS;AAAA,EACL;AAAA,EACA,yBAAyB;AACrB,UAAMmB,IAAU,KAAK,SACf60B,IAAW70B,EAAQ,OACnBs4B,IAAWhC,GAAc,KAAK,MAAM,QAAQt2B,EAAQ,MAAM,aAAa,GACvEu4B,IAAc1D,EAAS,eAAe,GACtC2D,IAAc3D,EAAS;AAC7B,QAAI4D,IAAgBF,GAChBG,GAAW7f,GAAW8f;AAC1B,QAAI,CAAC,KAAK,gBAAgB,CAAC9D,EAAS,WAAW0D,KAAeC,KAAeF,KAAY,KAAK,CAAC,KAAK,aAAY,GAAI;AAChH,WAAK,gBAAgBC;AACrB;AAAA,IACJ;AACA,UAAMK,IAAa,KAAK,eAAc,GAChCC,IAAgBD,EAAW,OAAO,OAClCE,IAAiBF,EAAW,QAAQ,QACpChgB,IAAWnU,EAAY,KAAK,MAAM,QAAQo0B,GAAe,GAAG,KAAK,QAAQ;AAC/E,IAAAH,IAAY14B,EAAQ,SAAS,KAAK,WAAWs4B,IAAW1f,KAAY0f,IAAW,IAC3EO,IAAgB,IAAIH,MACpBA,IAAY9f,KAAY0f,KAAYt4B,EAAQ,SAAS,MAAM,KAC3D6Y,IAAY,KAAK,YAAYqe,GAAkBl3B,EAAQ,IAAI,IAAI60B,EAAS,UAAUsC,GAAen3B,EAAQ,OAAO,KAAK,MAAM,QAAQ,IAAI,GACvI24B,IAAmB,KAAK,KAAKE,IAAgBA,IAAgBC,IAAiBA,CAAc,GAC5FL,IAAgBv1B,GAAU,KAAK,IAAI,KAAK,KAAKuB,GAAam0B,EAAW,QAAQ,SAAS,KAAKF,GAAW,IAAI,CAAC,CAAC,GAAG,KAAK,KAAKj0B,EAAYoU,IAAY8f,GAAkB,IAAI,CAAC,CAAC,IAAI,KAAK,KAAKl0B,EAAYq0B,IAAiBH,GAAkB,IAAI,CAAC,CAAC,CAAC,CAAC,GAC9OF,IAAgB,KAAK,IAAIF,GAAa,KAAK,IAAIC,GAAaC,CAAa,CAAC,IAE9E,KAAK,gBAAgBA;AAAA,EACzB;AAAA,EACA,8BAA8B;AAC1B,IAAA55B,EAAS,KAAK,QAAQ,6BAA6B;AAAA,MAC/C;AAAA,IACZ,CAAS;AAAA,EACL;AAAA,EACA,gBAAgB;AAAA,EAAC;AAAA,EACjB,YAAY;AACR,IAAAA,EAAS,KAAK,QAAQ,WAAW;AAAA,MAC7B;AAAA,IACZ,CAAS;AAAA,EACL;AAAA,EACA,MAAM;AACF,UAAMguB,IAAU;AAAA,MACZ,OAAO;AAAA,MACP,QAAQ;AAAA,IACpB,GACc,EAAE,OAAAhgB,GAAQ,SAAS,EAAE,OAAOgoB,GAAW,OAAOkE,GAAY,MAAMC,EAAQ,EAAG,IAAM,MACjFC,IAAU,KAAK,WAAU,GACzBC,IAAe,KAAK,aAAY;AACtC,QAAID,GAAS;AACT,YAAME,IAAchC,GAAe4B,GAAWlsB,EAAM,QAAQ,IAAI;AAQhE,UAPIqsB,KACArM,EAAQ,QAAQ,KAAK,UACrBA,EAAQ,SAASqK,GAAkB8B,CAAQ,IAAIG,MAE/CtM,EAAQ,SAAS,KAAK,WACtBA,EAAQ,QAAQqK,GAAkB8B,CAAQ,IAAIG,IAE9CtE,EAAS,WAAW,KAAK,MAAM,QAAQ;AACvC,cAAM,EAAE,OAAAO,GAAQ,MAAAhwB,GAAO,QAAAg0B,GAAS,SAAAC,EAAO,IAAM,KAAK,eAAc,GAC1DC,IAAczE,EAAS,UAAU,GACjC0E,IAAev2B,GAAU,KAAK,aAAa,GAC3Cw2B,IAAM,KAAK,IAAID,CAAY,GAC3BE,IAAM,KAAK,IAAIF,CAAY;AACjC,YAAIL,GAAc;AACd,gBAAMQ,IAAc7E,EAAS,SAAS,IAAI4E,IAAML,EAAO,QAAQI,IAAMH,EAAQ;AAC7E,UAAAxM,EAAQ,SAAS,KAAK,IAAI,KAAK,WAAWA,EAAQ,SAAS6M,IAAcJ,CAAW;AAAA,QACxF,OAAO;AACH,gBAAMK,IAAa9E,EAAS,SAAS,IAAI2E,IAAMJ,EAAO,QAAQK,IAAMJ,EAAQ;AAC5E,UAAAxM,EAAQ,QAAQ,KAAK,IAAI,KAAK,UAAUA,EAAQ,QAAQ8M,IAAaL,CAAW;AAAA,QACpF;AACA,aAAK,kBAAkBlE,GAAOhwB,GAAMq0B,GAAKD,CAAG;AAAA,MAChD;AAAA,IACJ;AACA,SAAK,eAAc,GACfN,KACA,KAAK,QAAQ,KAAK,UAAUrsB,EAAM,QAAQ,KAAK,SAAS,OAAO,KAAK,SAAS,OAC7E,KAAK,SAASggB,EAAQ,WAEtB,KAAK,QAAQA,EAAQ,OACrB,KAAK,SAAS,KAAK,UAAUhgB,EAAM,SAAS,KAAK,SAAS,MAAM,KAAK,SAAS;AAAA,EAEtF;AAAA,EACA,kBAAkBuoB,GAAOhwB,GAAMq0B,GAAKD,GAAK;AACrC,UAAM,EAAE,OAAO,EAAE,OAAA1yB,GAAQ,SAAAmrB,EAAO,GAAM,UAAAjE,EAAQ,IAAM,KAAK,SACnD4L,IAAY,KAAK,kBAAkB,GACnCC,IAAmB7L,MAAa,SAAS,KAAK,SAAS;AAC7D,QAAI,KAAK,gBAAgB;AACrB,YAAM8L,IAAa,KAAK,gBAAgB,CAAC,IAAI,KAAK,MAC5CC,IAAc,KAAK,QAAQ,KAAK,gBAAgB,KAAK,MAAM,SAAS,CAAC;AAC3E,UAAIC,IAAc,GACdC,IAAe;AACnB,MAAIL,IACIC,KACAG,IAAcR,IAAMpE,EAAM,OAC1B6E,IAAeR,IAAMr0B,EAAK,WAE1B40B,IAAcP,IAAMrE,EAAM,QAC1B6E,IAAeT,IAAMp0B,EAAK,SAEvB0B,MAAU,UACjBmzB,IAAe70B,EAAK,QACb0B,MAAU,QACjBkzB,IAAc5E,EAAM,QACbtuB,MAAU,YACjBkzB,IAAc5E,EAAM,QAAQ,GAC5B6E,IAAe70B,EAAK,QAAQ,IAEhC,KAAK,cAAc,KAAK,KAAK40B,IAAcF,IAAa7H,KAAW,KAAK,SAAS,KAAK,QAAQ6H,IAAa,CAAC,GAC5G,KAAK,eAAe,KAAK,KAAKG,IAAeF,IAAc9H,KAAW,KAAK,SAAS,KAAK,QAAQ8H,IAAc,CAAC;AAAA,IACpH,OAAO;AACH,UAAIG,IAAa90B,EAAK,SAAS,GAC3B+0B,IAAgB/E,EAAM,SAAS;AACnC,MAAItuB,MAAU,WACVozB,IAAa,GACbC,IAAgB/E,EAAM,UACftuB,MAAU,UACjBozB,IAAa90B,EAAK,QAClB+0B,IAAgB,IAEpB,KAAK,aAAaD,IAAajI,GAC/B,KAAK,gBAAgBkI,IAAgBlI;AAAA,IACzC;AAAA,EACJ;AAAA,EACH,iBAAiB;AACV,IAAI,KAAK,aACL,KAAK,SAAS,OAAO,KAAK,IAAI,KAAK,aAAa,KAAK,SAAS,IAAI,GAClE,KAAK,SAAS,MAAM,KAAK,IAAI,KAAK,YAAY,KAAK,SAAS,GAAG,GAC/D,KAAK,SAAS,QAAQ,KAAK,IAAI,KAAK,cAAc,KAAK,SAAS,KAAK,GACrE,KAAK,SAAS,SAAS,KAAK,IAAI,KAAK,eAAe,KAAK,SAAS,MAAM;AAAA,EAEhF;AAAA,EACA,WAAW;AACP,IAAApzB,EAAS,KAAK,QAAQ,UAAU;AAAA,MAC5B;AAAA,IACZ,CAAS;AAAA,EACL;AAAA,EACH,eAAe;AACR,UAAM,EAAE,MAAAiJ,GAAO,UAAAkmB,EAAQ,IAAM,KAAK;AAClC,WAAOA,MAAa,SAASA,MAAa,YAAYlmB,MAAS;AAAA,EACnE;AAAA,EACH,aAAa;AACN,WAAO,KAAK,QAAQ;AAAA,EACxB;AAAA,EACH,sBAAsBiC,GAAO;AACtB,SAAK,4BAA2B,GAChC,KAAK,mBAAmBA,CAAK;AAC7B,QAAI7S,GAAGqI;AACP,SAAIrI,IAAI,GAAGqI,IAAOwK,EAAM,QAAQ7S,IAAIqI,GAAMrI;AACtC,MAAIgH,EAAc6L,EAAM7S,CAAC,EAAE,KAAK,MAC5B6S,EAAM,OAAO7S,GAAG,CAAC,GACjBqI,KACArI;AAGR,SAAK,2BAA0B;AAAA,EACnC;AAAA,EACH,iBAAiB;AACV,QAAI0hC,IAAa,KAAK;AACtB,QAAI,CAACA,GAAY;AACb,YAAMT,IAAa,KAAK,QAAQ,MAAM;AACtC,UAAIpuB,IAAQ,KAAK;AACjB,MAAIouB,IAAapuB,EAAM,WACnBA,IAAQ0sB,GAAO1sB,GAAOouB,CAAU,IAEpC,KAAK,cAAcS,IAAa,KAAK,mBAAmB7uB,GAAOA,EAAM,QAAQ,KAAK,QAAQ,MAAM,aAAa;AAAA,IACjH;AACA,WAAO6uB;AAAA,EACX;AAAA,EACH,mBAAmB7uB,GAAOgf,GAAQyN,GAAe;AAC1C,UAAM,EAAE,KAAAprB,GAAM,mBAAmB6rB,EAAM,IAAM,MACvCmD,IAAS,CAAA,GACTC,IAAU,CAAA,GACV1D,IAAY,KAAK,MAAM5N,IAASuN,GAAcvN,GAAQyN,CAAa,CAAC;AAC1E,QAAI8D,IAAkB,GAClBC,IAAmB,GACnBrjC,GAAGgC,GAAGsT,GAAMue,GAAOyP,GAAUC,GAAYluB,GAAOmuB,GAAY3tB,GAAO2L,GAAQiiB;AAC/E,SAAIzjC,IAAI,GAAGA,IAAI6xB,GAAQ7xB,KAAKy/B,GAAU;AAUlC,UATA5L,IAAQhhB,EAAM7S,CAAC,EAAE,OACjBsjC,IAAW,KAAK,wBAAwBtjC,CAAC,GACzCkU,EAAI,OAAOqvB,IAAaD,EAAS,QACjCjuB,IAAQ0qB,EAAOwD,CAAU,IAAIxD,EAAOwD,CAAU,KAAK;AAAA,QAC/C,MAAM,CAAA;AAAA,QACN,IAAI,CAAA;AAAA,MACpB,GACYC,IAAaF,EAAS,YACtBztB,IAAQ2L,IAAS,GACb,CAACxa,EAAc6sB,CAAK,KAAK,CAAC3sB,EAAQ2sB,CAAK;AACvC,QAAAhe,IAAQhB,GAAaX,GAAKmB,EAAM,MAAMA,EAAM,IAAIQ,GAAOge,CAAK,GAC5DrS,IAASgiB;AAAA,eACFt8B,EAAQ2sB,CAAK;AACpB,aAAI7xB,IAAI,GAAGsT,IAAOue,EAAM,QAAQ7xB,IAAIsT,GAAM,EAAEtT;AACxC,UAAAyhC,IAAe5P,EAAM7xB,CAAC,GAClB,CAACgF,EAAcy8B,CAAW,KAAK,CAACv8B,EAAQu8B,CAAW,MACnD5tB,IAAQhB,GAAaX,GAAKmB,EAAM,MAAMA,EAAM,IAAIQ,GAAO4tB,CAAW,GAClEjiB,KAAUgiB;AAItB,MAAAN,EAAO,KAAKrtB,CAAK,GACjBstB,EAAQ,KAAK3hB,CAAM,GACnB4hB,IAAkB,KAAK,IAAIvtB,GAAOutB,CAAe,GACjDC,IAAmB,KAAK,IAAI7hB,GAAQ6hB,CAAgB;AAAA,IACxD;AACA,IAAAvD,GAAeC,GAAQlO,CAAM;AAC7B,UAAMqQ,IAASgB,EAAO,QAAQE,CAAe,GACvCjB,IAAUgB,EAAQ,QAAQE,CAAgB,GAC1CK,IAAU,CAACC,OAAO;AAAA,MAChB,OAAOT,EAAOS,CAAG,KAAK;AAAA,MACtB,QAAQR,EAAQQ,CAAG,KAAK;AAAA,IACxC;AACQ,WAAO;AAAA,MACH,OAAOD,EAAQ,CAAC;AAAA,MAChB,MAAMA,EAAQ7R,IAAS,CAAC;AAAA,MACxB,QAAQ6R,EAAQxB,CAAM;AAAA,MACtB,SAASwB,EAAQvB,CAAO;AAAA,MACxB,QAAAe;AAAA,MACA,SAAAC;AAAA,IACZ;AAAA,EACI;AAAA,EACH,iBAAiBl8B,GAAO;AACjB,WAAOA;AAAA,EACX;AAAA,EACH,iBAAiBA,GAAO4G,GAAO;AACxB,WAAO;AAAA,EACX;AAAA,EACH,iBAAiB+H,GAAO;AAAA,EAAC;AAAA,EACzB,gBAAgB/H,GAAO;AAChB,UAAMgF,IAAQ,KAAK;AACnB,WAAIhF,IAAQ,KAAKA,IAAQgF,EAAM,SAAS,IAC7B,OAEJ,KAAK,iBAAiBA,EAAMhF,CAAK,EAAE,KAAK;AAAA,EACnD;AAAA,EACH,mBAAmB+1B,GAAS;AACrB,IAAI,KAAK,mBACLA,IAAU,IAAIA;AAElB,UAAMhuB,IAAQ,KAAK,cAAcguB,IAAU,KAAK;AAChD,WAAOp2B,GAAY,KAAK,iBAAiBkI,GAAY,KAAK,OAAOE,GAAO,CAAC,IAAIA,CAAK;AAAA,EACtF;AAAA,EACH,mBAAmBA,GAAO;AACnB,UAAMguB,KAAWhuB,IAAQ,KAAK,eAAe,KAAK;AAClD,WAAO,KAAK,iBAAiB,IAAIguB,IAAUA;AAAA,EAC/C;AAAA,EACH,eAAe;AACR,WAAO,KAAK,iBAAiB,KAAK,aAAY,CAAE;AAAA,EACpD;AAAA,EACH,eAAe;AACR,UAAM,EAAE,KAAA//B,GAAM,KAAAF,EAAG,IAAM;AACvB,WAAOE,IAAM,KAAKF,IAAM,IAAIA,IAAME,IAAM,KAAKF,IAAM,IAAIE,IAAM;AAAA,EACjE;AAAA,EACH,WAAWgK,GAAO;AACX,UAAMgF,IAAQ,KAAK,SAAS,CAAA;AAC5B,QAAIhF,KAAS,KAAKA,IAAQgF,EAAM,QAAQ;AACpC,YAAMutB,IAAOvtB,EAAMhF,CAAK;AACxB,aAAOuyB,EAAK,aAAaA,EAAK,WAAWD,GAAkB,KAAK,WAAU,GAAItyB,GAAOuyB,CAAI;AAAA,IAC7F;AACA,WAAO,KAAK,aAAa,KAAK,WAAWF,GAAmB,KAAK,MAAM,cAAc,IAAI;AAAA,EAC7F;AAAA,EACH,YAAY;AACL,UAAM2D,IAAc,KAAK,QAAQ,OAC3BC,IAAMh4B,GAAU,KAAK,aAAa,GAClCw2B,IAAM,KAAK,IAAI,KAAK,IAAIwB,CAAG,CAAC,GAC5BvB,IAAM,KAAK,IAAI,KAAK,IAAIuB,CAAG,CAAC,GAC5BpC,IAAa,KAAK,eAAc,GAChC3G,IAAU8I,EAAY,mBAAmB,GACzCrgC,IAAIk+B,IAAaA,EAAW,OAAO,QAAQ3G,IAAU,GACrD56B,IAAIuhC,IAAaA,EAAW,QAAQ,SAAS3G,IAAU;AAC7D,WAAO,KAAK,aAAY,IAAK56B,IAAImiC,IAAM9+B,IAAI++B,IAAM/+B,IAAI8+B,IAAMniC,IAAIoiC,IAAMpiC,IAAIoiC,IAAM/+B,IAAI8+B,IAAMniC,IAAImiC,IAAM9+B,IAAI++B;AAAA,EAC3G;AAAA,EACH,aAAa;AACN,UAAMR,IAAU,KAAK,QAAQ;AAC7B,WAAIA,MAAY,SACL,CAAC,CAACA,IAEN,KAAK,0BAA0B,SAAS;AAAA,EACnD;AAAA,EACH,sBAAsBvb,GAAW;AAC1B,UAAM5V,IAAO,KAAK,MACZ+E,IAAQ,KAAK,OACb7M,IAAU,KAAK,SACf,EAAE,MAAAi7B,GAAO,UAAAjN,GAAW,QAAAtB,EAAM,IAAM1sB,GAChC01B,IAASuF,EAAK,QACd/B,IAAe,KAAK,aAAY,GAEhC3C,IADQ,KAAK,MACO,UAAUb,IAAS,IAAI,IAC3CwF,IAAKhE,GAAkB+D,CAAI,GAC3B70B,IAAQ,CAAA,GACR+0B,IAAazO,EAAO,WAAW,KAAK,WAAU,CAAE,GAChD0O,IAAYD,EAAW,UAAUA,EAAW,QAAQ,GACpDE,IAAgBD,IAAY,GAC5BE,IAAmB,SAASxuB,GAAO;AACrC,aAAOF,GAAYC,GAAOC,GAAOsuB,CAAS;AAAA,IAC9C;AACA,QAAIG,GAAarkC,GAAG6/B,GAAWyE,GAC3BC,GAAKC,GAAKC,GAAKC,GAAKC,GAAIC,GAAIC,GAAIC;AACpC,QAAIhO,MAAa;AACb,MAAAuN,IAAcD,EAAiB,KAAK,MAAM,GAC1CI,IAAM,KAAK,SAASR,GACpBU,IAAML,IAAcF,GACpBS,IAAKR,EAAiB5d,EAAU,GAAG,IAAI2d,GACvCW,IAAKte,EAAU;AAAA,aACRsQ,MAAa;AACpB,MAAAuN,IAAcD,EAAiB,KAAK,GAAG,GACvCQ,IAAKpe,EAAU,KACfse,IAAKV,EAAiB5d,EAAU,MAAM,IAAI2d,GAC1CK,IAAMH,IAAcF,GACpBO,IAAM,KAAK,MAAMV;AAAA,aACVlN,MAAa;AACpB,MAAAuN,IAAcD,EAAiB,KAAK,KAAK,GACzCG,IAAM,KAAK,QAAQP,GACnBS,IAAMJ,IAAcF,GACpBQ,IAAKP,EAAiB5d,EAAU,IAAI,IAAI2d,GACxCU,IAAKre,EAAU;AAAA,aACRsQ,MAAa;AACpB,MAAAuN,IAAcD,EAAiB,KAAK,IAAI,GACxCO,IAAKne,EAAU,MACfqe,IAAKT,EAAiB5d,EAAU,KAAK,IAAI2d,GACzCI,IAAMF,IAAcF,GACpBM,IAAM,KAAK,OAAOT;AAAA,aACXpzB,MAAS,KAAK;AACrB,UAAIkmB,MAAa;AACb,QAAAuN,IAAcD,GAAkB5d,EAAU,MAAMA,EAAU,UAAU,IAAI,GAAG;AAAA,eACpErf,EAAS2vB,CAAQ,GAAG;AAC3B,cAAM2J,IAAiB,OAAO,KAAK3J,CAAQ,EAAE,CAAC,GACxC7vB,IAAQ6vB,EAAS2J,CAAc;AACrC,QAAA4D,IAAcD,EAAiB,KAAK,MAAM,OAAO3D,CAAc,EAAE,iBAAiBx5B,CAAK,CAAC;AAAA,MAC5F;AACA,MAAA29B,IAAKpe,EAAU,KACfse,IAAKte,EAAU,QACfge,IAAMH,IAAcF,GACpBO,IAAMF,IAAMR;AAAA,IAChB,WAAWpzB,MAAS,KAAK;AACrB,UAAIkmB,MAAa;AACb,QAAAuN,IAAcD,GAAkB5d,EAAU,OAAOA,EAAU,SAAS,CAAC;AAAA,eAC9Drf,EAAS2vB,CAAQ,GAAG;AAC3B,cAAM2J,IAAiB,OAAO,KAAK3J,CAAQ,EAAE,CAAC,GACxC7vB,IAAQ6vB,EAAS2J,CAAc;AACrC,QAAA4D,IAAcD,EAAiB,KAAK,MAAM,OAAO3D,CAAc,EAAE,iBAAiBx5B,CAAK,CAAC;AAAA,MAC5F;AACA,MAAAs9B,IAAMF,IAAcF,GACpBM,IAAMF,IAAMP,GACZW,IAAKne,EAAU,MACfqe,IAAKre,EAAU;AAAA,IACnB;AACA,UAAMue,KAAQx9B,EAAeuB,EAAQ,MAAM,eAAeu2B,CAAW,GAC/D2F,IAAO,KAAK,IAAI,GAAG,KAAK,KAAK3F,IAAc0F,EAAK,CAAC;AACvD,SAAI/kC,IAAI,GAAGA,IAAIq/B,GAAar/B,KAAKglC,GAAK;AAClC,YAAM/wB,IAAU,KAAK,WAAWjU,CAAC,GAC3BilC,IAAclB,EAAK,WAAW9vB,CAAO,GACrCixB,KAAoB1P,EAAO,WAAWvhB,CAAO,GAC7CkxB,IAAYF,EAAY,WACxBG,KAAYH,EAAY,OACxBI,KAAaH,GAAkB,QAAQ,CAAA,GACvCI,KAAmBJ,GAAkB,YACrC1D,KAAYyD,EAAY,WACxBM,KAAYN,EAAY,WACxBO,KAAiBP,EAAY,kBAAkB,CAAA,GAC/CQ,KAAuBR,EAAY;AAEzC,MADApF,IAAYH,GAAoB,MAAM1/B,GAAGw+B,CAAM,GAC3CqB,MAAc,WAGlByE,IAAmB5uB,GAAYC,GAAOkqB,GAAWsF,CAAS,GACtDnD,IACAuC,IAAME,IAAME,IAAKE,IAAKP,IAEtBE,IAAME,IAAME,IAAKE,IAAKR,GAE1Bp1B,EAAM,KAAK;AAAA,QACP,KAAAq1B;AAAA,QACA,KAAAC;AAAA,QACA,KAAAC;AAAA,QACA,KAAAC;AAAA,QACA,IAAAC;AAAA,QACA,IAAAC;AAAA,QACA,IAAAC;AAAA,QACA,IAAAC;AAAA,QACA,OAAOK;AAAA,QACP,OAAOC;AAAA,QACP,YAAAC;AAAA,QACA,kBAAAC;AAAA,QACA,WAAA9D;AAAA,QACA,WAAA+D;AAAA,QACA,gBAAAC;AAAA,QACA,sBAAAC;AAAA,MAChB,CAAa;AAAA,IACL;AACA,gBAAK,eAAepG,GACpB,KAAK,eAAegF,GACbn1B;AAAA,EACX;AAAA,EACH,mBAAmBsX,GAAW;AACvB,UAAM5V,IAAO,KAAK,MACZ9H,IAAU,KAAK,SACf,EAAE,UAAAguB,GAAW,OAAO+M,EAAW,IAAM/6B,GACrCk5B,IAAe,KAAK,aAAY,GAChCnvB,IAAQ,KAAK,OACb,EAAE,OAAAjD,GAAQ,YAAA81B,GAAa,SAAA3K,GAAU,QAAA4K,EAAM,IAAM9B,GAC7CG,IAAKhE,GAAkBl3B,EAAQ,IAAI,GACnC88B,IAAiB5B,IAAKjJ,GACtB8K,IAAkBF,IAAS,CAAC5K,IAAU6K,GACtCjvB,IAAW,CAAC7K,GAAU,KAAK,aAAa,GACxCoD,IAAQ,CAAA;AACd,QAAIlP,GAAGqI,GAAM+3B,GAAMvM,GAAO,GAAGlzB,GAAGmlC,GAAWlwB,GAAOhB,GAAM4uB,GAAYuC,GAAWC,GAC3EC,IAAe;AACnB,QAAInP,MAAa;AACb,MAAAn2B,IAAI,KAAK,SAASklC,GAClBC,IAAY,KAAK,wBAAuB;AAAA,aACjChP,MAAa;AACpB,MAAAn2B,IAAI,KAAK,MAAMklC,GACfC,IAAY,KAAK,wBAAuB;AAAA,aACjChP,MAAa,QAAQ;AAC5B,YAAM7zB,IAAM,KAAK,wBAAwB+gC,CAAE;AAC3C,MAAA8B,IAAY7iC,EAAI,WAChB,IAAIA,EAAI;AAAA,IACZ,WAAW6zB,MAAa,SAAS;AAC7B,YAAM7zB,IAAM,KAAK,wBAAwB+gC,CAAE;AAC3C,MAAA8B,IAAY7iC,EAAI,WAChB,IAAIA,EAAI;AAAA,IACZ,WAAW2N,MAAS,KAAK;AACrB,UAAIkmB,MAAa;AACb,QAAAn2B,KAAK6lB,EAAU,MAAMA,EAAU,UAAU,IAAIof;AAAA,eACtCz+B,EAAS2vB,CAAQ,GAAG;AAC3B,cAAM2J,IAAiB,OAAO,KAAK3J,CAAQ,EAAE,CAAC,GACxC7vB,IAAQ6vB,EAAS2J,CAAc;AACrC,QAAA9/B,IAAI,KAAK,MAAM,OAAO8/B,CAAc,EAAE,iBAAiBx5B,CAAK,IAAI2+B;AAAA,MACpE;AACA,MAAAE,IAAY,KAAK,wBAAuB;AAAA,IAC5C,WAAWl1B,MAAS,KAAK;AACrB,UAAIkmB,MAAa;AACb,aAAKtQ,EAAU,OAAOA,EAAU,SAAS,IAAIof;AAAA,eACtCz+B,EAAS2vB,CAAQ,GAAG;AAC3B,cAAM2J,IAAiB,OAAO,KAAK3J,CAAQ,EAAE,CAAC,GACxC7vB,IAAQ6vB,EAAS2J,CAAc;AACrC,YAAI,KAAK,MAAM,OAAOA,CAAc,EAAE,iBAAiBx5B,CAAK;AAAA,MAChE;AACA,MAAA6+B,IAAY,KAAK,wBAAwB9B,CAAE,EAAE;AAAA,IACjD;AACA,IAAIpzB,MAAS,QACLhB,MAAU,UACVq2B,IAAe,QACRr2B,MAAU,UACjBq2B,IAAe;AAGvB,UAAMvE,KAAa,KAAK,eAAc;AACtC,SAAI1hC,IAAI,GAAGqI,IAAOwK,EAAM,QAAQ7S,IAAIqI,GAAM,EAAErI,GAAE;AAC1C,MAAAogC,IAAOvtB,EAAM7S,CAAC,GACd6zB,IAAQuM,EAAK;AACb,YAAM6E,IAAcpB,EAAY,WAAW,KAAK,WAAW7jC,CAAC,CAAC;AAC7D,MAAA4V,IAAQ,KAAK,gBAAgB5V,CAAC,IAAI6jC,EAAY,aAC9CjvB,IAAO,KAAK,wBAAwB5U,CAAC,GACrCwjC,IAAa5uB,EAAK,YAClBmxB,IAAY7+B,EAAQ2sB,CAAK,IAAIA,EAAM,SAAS;AAC5C,YAAMqS,IAAYH,IAAY,GACxBz/B,IAAQ2+B,EAAY,OACpBkB,KAAclB,EAAY,iBAC1BmB,IAAcnB,EAAY;AAChC,UAAIoB,KAAgBP;AACpB,MAAI9D,KACA,IAAIpsB,GACAkwB,MAAc,YACV9lC,MAAMqI,IAAO,IACbg+B,KAAiB,KAAK,QAAQ,UAAoB,SAAV,UACjCrmC,MAAM,IACbqmC,KAAiB,KAAK,QAAQ,UAAmB,UAAT,SAExCA,KAAgB,WAGpBvP,MAAa,QACT4O,MAAe,UAAU/uB,MAAa,IACtCqvB,IAAa,CAACD,IAAYvC,IAAaA,IAAa,IAC7CkC,MAAe,WACtBM,IAAa,CAACtE,GAAW,QAAQ,SAAS,IAAIwE,IAAY1C,IAAaA,IAEvEwC,IAAa,CAACtE,GAAW,QAAQ,SAAS8B,IAAa,IAGvDkC,MAAe,UAAU/uB,MAAa,IACtCqvB,IAAaxC,IAAa,IACnBkC,MAAe,WACtBM,IAAatE,GAAW,QAAQ,SAAS,IAAIwE,IAAY1C,IAEzDwC,IAAatE,GAAW,QAAQ,SAASqE,IAAYvC,GAGzDmC,MACAK,KAAc,KAEdrvB,MAAa,KAAK,CAACsuB,EAAY,sBAC/B,KAAKzB,IAAa,IAAI,KAAK,IAAI7sB,CAAQ,OAG3ChW,IAAIiV,GACJowB,KAAc,IAAID,KAAavC,IAAa;AAEhD,UAAI8C;AACJ,UAAIrB,EAAY,mBAAmB;AAC/B,cAAMsB,KAAeltB,EAAU4rB,EAAY,eAAe,GACpDzjB,KAASkgB,GAAW,QAAQ1hC,CAAC,GAC7B6V,KAAQ6rB,GAAW,OAAO1hC,CAAC;AACjC,YAAI8X,KAAMkuB,IAAaO,GAAa,KAChCx2B,KAAO,IAAIw2B,GAAa;AAC5B,gBAAON,GAAY;AAAA,UACf,KAAK;AACD,YAAAnuB,MAAO0J,KAAS;AAChB;AAAA,UACJ,KAAK;AACD,YAAA1J,MAAO0J;AACP;AAAA,QACxB;AACgB,gBAAOskB,GAAS;AAAA,UACZ,KAAK;AACD,YAAA/1B,MAAQ8F,KAAQ;AAChB;AAAA,UACJ,KAAK;AACD,YAAA9F,MAAQ8F;AACR;AAAA,UACJ,KAAK;AACD,YAAI7V,MAAMqI,IAAO,IACb0H,MAAQ8F,KACD7V,IAAI,MACX+P,MAAQ8F,KAAQ;AAEpB;AAAA,QACxB;AACgB,QAAAywB,KAAW;AAAA,UACP,MAAAv2B;AAAA,UACA,KAAA+H;AAAA,UACA,OAAOjC,KAAQ0wB,GAAa;AAAA,UAC5B,QAAQ/kB,KAAS+kB,GAAa;AAAA,UAC9B,OAAOtB,EAAY;AAAA,QACvC;AAAA,MACY;AACA,MAAA/1B,EAAM,KAAK;AAAA,QACP,OAAA2kB;AAAA,QACA,MAAAjf;AAAA,QACA,YAAAoxB;AAAA,QACA,SAAS;AAAA,UACL,UAAArvB;AAAA,UACA,OAAArQ;AAAA,UACA,aAAA6/B;AAAA,UACA,aAAAC;AAAA,UACA,WAAWC;AAAA,UACX,cAAAJ;AAAA,UACA,aAAa;AAAA,YACT;AAAA,YACAtlC;AAAA,UACxB;AAAA,UACoB,UAAA2lC;AAAA,QACpB;AAAA,MACA,CAAa;AAAA,IACL;AACA,WAAOp3B;AAAA,EACX;AAAA,EACA,0BAA0B;AACtB,UAAM,EAAE,UAAA4nB,GAAW,OAAAjkB,EAAK,IAAM,KAAK;AAEnC,QADiB,CAAC/G,GAAU,KAAK,aAAa;AAE1C,aAAOgrB,MAAa,QAAQ,SAAS;AAEzC,QAAIlnB,IAAQ;AACZ,WAAIiD,EAAM,UAAU,UAChBjD,IAAQ,SACDiD,EAAM,UAAU,QACvBjD,IAAQ,UACDiD,EAAM,UAAU,YACvBjD,IAAQ,UAELA;AAAA,EACX;AAAA,EACA,wBAAwBo0B,GAAI;AACxB,UAAM,EAAE,UAAAlN,GAAW,OAAO,EAAE,YAAA4O,GAAa,QAAAC,GAAS,SAAA5K,EAAO,MAAS,KAAK,SACjE2G,IAAa,KAAK,eAAc,GAChCkE,IAAiB5B,IAAKjJ,GACtBmH,IAASR,EAAW,OAAO;AACjC,QAAIoE,GACA7kC;AACJ,WAAI61B,MAAa,SACT6O,KACA1kC,IAAI,KAAK,QAAQ85B,GACb2K,MAAe,SACfI,IAAY,SACLJ,MAAe,YACtBI,IAAY,UACZ7kC,KAAKihC,IAAS,MAEd4D,IAAY,SACZ7kC,KAAKihC,OAGTjhC,IAAI,KAAK,QAAQ2kC,GACbF,MAAe,SACfI,IAAY,UACLJ,MAAe,YACtBI,IAAY,UACZ7kC,KAAKihC,IAAS,MAEd4D,IAAY,QACZ7kC,IAAI,KAAK,SAGV61B,MAAa,UAChB6O,KACA1kC,IAAI,KAAK,OAAO85B,GACZ2K,MAAe,SACfI,IAAY,UACLJ,MAAe,YACtBI,IAAY,UACZ7kC,KAAKihC,IAAS,MAEd4D,IAAY,QACZ7kC,KAAKihC,OAGTjhC,IAAI,KAAK,OAAO2kC,GACZF,MAAe,SACfI,IAAY,SACLJ,MAAe,YACtBI,IAAY,UACZ7kC,KAAKihC,IAAS,MAEd4D,IAAY,SACZ7kC,IAAI,KAAK,UAIjB6kC,IAAY,SAET;AAAA,MACH,WAAAA;AAAA,MACA,GAAA7kC;AAAA,IACZ;AAAA,EACI;AAAA,EACH,oBAAoB;AACb,QAAI,KAAK,QAAQ,MAAM;AACnB;AAEJ,UAAM0U,IAAQ,KAAK,OACbmhB,IAAW,KAAK,QAAQ;AAC9B,QAAIA,MAAa,UAAUA,MAAa;AACpC,aAAO;AAAA,QACH,KAAK;AAAA,QACL,MAAM,KAAK;AAAA,QACX,QAAQnhB,EAAM;AAAA,QACd,OAAO,KAAK;AAAA,MAC5B;AAEQ,QAAImhB,MAAa,SAASA,MAAa;AACnC,aAAO;AAAA,QACH,KAAK,KAAK;AAAA,QACV,MAAM;AAAA,QACN,QAAQ,KAAK;AAAA,QACb,OAAOnhB,EAAM;AAAA,MAC7B;AAAA,EAEI;AAAA,EACH,iBAAiB;AACV,UAAM,EAAE,KAAAzB,GAAM,SAAS,EAAE,iBAAAsyB,EAAe,GAAM,MAAAz2B,GAAO,KAAA+H,GAAM,OAAAjC,GAAQ,QAAA2L,EAAM,IAAM;AAC/E,IAAIglB,MACAtyB,EAAI,KAAI,GACRA,EAAI,YAAYsyB,GAChBtyB,EAAI,SAASnE,GAAM+H,GAAKjC,GAAO2L,CAAM,GACrCtN,EAAI,QAAO;AAAA,EAEnB;AAAA,EACA,qBAAqBjN,GAAO;AACxB,UAAM88B,IAAO,KAAK,QAAQ;AAC1B,QAAI,CAAC,KAAK,WAAU,KAAM,CAACA,EAAK;AAC5B,aAAO;AAGX,UAAMl2B,IADQ,KAAK,MACC,UAAU,CAACpO,MAAIA,EAAE,UAAUwH,CAAK;AACpD,WAAI4G,KAAS,IACIk2B,EAAK,WAAW,KAAK,WAAWl2B,CAAK,CAAC,EACvC,YAET;AAAA,EACX;AAAA,EACH,SAAS2Y,GAAW;AACb,UAAMud,IAAO,KAAK,QAAQ,MACpB7vB,IAAM,KAAK,KACXhF,IAAQ,KAAK,mBAAmB,KAAK,iBAAiB,KAAK,sBAAsBsX,CAAS;AAChG,QAAIxmB,GAAGqI;AACP,UAAMo+B,IAAW,CAACriC,GAAIC,GAAIqS,MAAQ;AAC9B,MAAI,CAACA,EAAM,SAAS,CAACA,EAAM,UAG3BxC,EAAI,KAAI,GACRA,EAAI,YAAYwC,EAAM,OACtBxC,EAAI,cAAcwC,EAAM,OACxBxC,EAAI,YAAYwC,EAAM,cAAc,CAAA,CAAE,GACtCxC,EAAI,iBAAiBwC,EAAM,kBAC3BxC,EAAI,UAAS,GACbA,EAAI,OAAO9P,EAAG,GAAGA,EAAG,CAAC,GACrB8P,EAAI,OAAO7P,EAAG,GAAGA,EAAG,CAAC,GACrB6P,EAAI,OAAM,GACVA,EAAI,QAAO;AAAA,IACf;AACA,QAAI6vB,EAAK;AACL,WAAI/jC,IAAI,GAAGqI,IAAO6G,EAAM,QAAQlP,IAAIqI,GAAM,EAAErI,GAAE;AAC1C,cAAMiK,IAAOiF,EAAMlP,CAAC;AACpB,QAAI+jC,EAAK,mBACL0C,EAAS;AAAA,UACL,GAAGx8B,EAAK;AAAA,UACR,GAAGA,EAAK;AAAA,QAChC,GAAuB;AAAA,UACC,GAAGA,EAAK;AAAA,UACR,GAAGA,EAAK;AAAA,QAChC,GAAuBA,CAAI,GAEP85B,EAAK,aACL0C,EAAS;AAAA,UACL,GAAGx8B,EAAK;AAAA,UACR,GAAGA,EAAK;AAAA,QAChC,GAAuB;AAAA,UACC,GAAGA,EAAK;AAAA,UACR,GAAGA,EAAK;AAAA,QAChC,GAAuB;AAAA,UACC,OAAOA,EAAK;AAAA,UACZ,OAAOA,EAAK;AAAA,UACZ,YAAYA,EAAK;AAAA,UACjB,kBAAkBA,EAAK;AAAA,QAC/C,CAAqB;AAAA,MAET;AAAA,EAER;AAAA,EACH,aAAa;AACN,UAAM,EAAE,OAAA0L,GAAQ,KAAAzB,GAAM,SAAS,EAAE,QAAAshB,GAAS,MAAAuO,EAAI,EAAG,IAAM,MACjDE,IAAazO,EAAO,WAAW,KAAK,WAAU,CAAE,GAChD0O,IAAY1O,EAAO,UAAUyO,EAAW,QAAQ;AACtD,QAAI,CAACC;AACD;AAEJ,UAAMwC,IAAgB3C,EAAK,WAAW,KAAK,WAAW,CAAC,CAAC,EAAE,WACpDM,IAAc,KAAK;AACzB,QAAIM,GAAIE,GAAID,GAAIE;AAChB,IAAI,KAAK,kBACLH,IAAKjvB,GAAYC,GAAO,KAAK,MAAMuuB,CAAS,IAAIA,IAAY,GAC5DW,IAAKnvB,GAAYC,GAAO,KAAK,OAAO+wB,CAAa,IAAIA,IAAgB,GACrE9B,IAAKE,IAAKT,MAEVO,IAAKlvB,GAAYC,GAAO,KAAK,KAAKuuB,CAAS,IAAIA,IAAY,GAC3DY,IAAKpvB,GAAYC,GAAO,KAAK,QAAQ+wB,CAAa,IAAIA,IAAgB,GACtE/B,IAAKE,IAAKR,IAEdnwB,EAAI,KAAI,GACRA,EAAI,YAAY+vB,EAAW,OAC3B/vB,EAAI,cAAc+vB,EAAW,OAC7B/vB,EAAI,UAAS,GACbA,EAAI,OAAOywB,GAAIC,CAAE,GACjB1wB,EAAI,OAAO2wB,GAAIC,CAAE,GACjB5wB,EAAI,OAAM,GACVA,EAAI,QAAO;AAAA,EACf;AAAA,EACH,WAAWsS,GAAW;AAEf,QAAI,CADgB,KAAK,QAAQ,MAChB;AACb;AAEJ,UAAMtS,IAAM,KAAK,KACX6C,IAAO,KAAK,kBAAiB;AACnC,IAAIA,KACAE,GAAS/C,GAAK6C,CAAI;AAEtB,UAAM7H,IAAQ,KAAK,cAAcsX,CAAS;AAC1C,eAAWvc,KAAQiF,GAAM;AACrB,YAAMy3B,IAAoB18B,EAAK,SACzBq5B,IAAWr5B,EAAK,MAChB4pB,IAAQ5pB,EAAK,OACbtJ,IAAIsJ,EAAK;AACf,MAAAkO,GAAWjE,GAAK2f,GAAO,GAAGlzB,GAAG2iC,GAAUqD,CAAiB;AAAA,IAC5D;AACA,IAAI5vB,KACAG,GAAWhD,CAAG;AAAA,EAEtB;AAAA,EACH,YAAY;AACL,UAAM,EAAE,KAAAA,GAAM,SAAS,EAAE,UAAA4iB,GAAW,OAAA8P,GAAQ,SAAA3+B,EAAO,EAAG,IAAM;AAC5D,QAAI,CAAC2+B,EAAM;AACP;AAEJ,UAAMhyB,IAAO0E,EAAOstB,EAAM,IAAI,GACxB7L,IAAU1hB,EAAUutB,EAAM,OAAO,GACjCh3B,IAAQg3B,EAAM;AACpB,QAAIpI,IAAS5pB,EAAK,aAAa;AAC/B,IAAIkiB,MAAa,YAAYA,MAAa,YAAY3vB,EAAS2vB,CAAQ,KACnE0H,KAAUzD,EAAQ,QACd7zB,EAAQ0/B,EAAM,IAAI,MAClBpI,KAAU5pB,EAAK,cAAcgyB,EAAM,KAAK,SAAS,OAGrDpI,KAAUzD,EAAQ;AAEtB,UAAM,EAAE,QAAAwF,GAAS,QAAAC,GAAS,UAAA9e,GAAW,UAAA/K,EAAQ,IAAM2pB,GAAU,MAAM9B,GAAQ1H,GAAUlnB,CAAK;AAC1F,IAAAuI,GAAWjE,GAAK0yB,EAAM,MAAM,GAAG,GAAGhyB,GAAM;AAAA,MACpC,OAAOgyB,EAAM;AAAA,MACb,UAAAllB;AAAA,MACA,UAAA/K;AAAA,MACA,WAAW0pB,GAAWzwB,GAAOknB,GAAU7uB,CAAO;AAAA,MAC9C,cAAc;AAAA,MACd,aAAa;AAAA,QACTs4B;AAAA,QACAC;AAAA,MAChB;AAAA,IACA,CAAS;AAAA,EACL;AAAA,EACA,KAAKha,GAAW;AACZ,IAAK,KAAK,iBAGV,KAAK,eAAc,GACnB,KAAK,SAASA,CAAS,GACvB,KAAK,WAAU,GACf,KAAK,UAAS,GACd,KAAK,WAAWA,CAAS;AAAA,EAC7B;AAAA,EACH,UAAU;AACH,UAAM9O,IAAO,KAAK,SACZmvB,IAAKnvB,EAAK,SAASA,EAAK,MAAM,KAAK,GACnCovB,IAAKv/B,EAAemQ,EAAK,QAAQA,EAAK,KAAK,GAAG,EAAE,GAChDqvB,IAAKx/B,EAAemQ,EAAK,UAAUA,EAAK,OAAO,GAAG,CAAC;AACzD,WAAI,CAAC,KAAK,gBAAgB,KAAK,SAASgpB,GAAM,UAAU,OAC7C;AAAA,MACH;AAAA,QACI,GAAGmG;AAAA,QACH,MAAM,CAACrgB,MAAY;AACf,eAAK,KAAKA,CAAS;AAAA,QACvB;AAAA,MACpB;AAAA,IACA,IAEe;AAAA,MACH;AAAA,QACI,GAAGsgB;AAAA,QACH,MAAM,CAACtgB,MAAY;AACf,eAAK,eAAc,GACnB,KAAK,SAASA,CAAS,GACvB,KAAK,UAAS;AAAA,QAClB;AAAA,MAChB;AAAA,MACY;AAAA,QACI,GAAGugB;AAAA,QACH,MAAM,MAAI;AACN,eAAK,WAAU;AAAA,QACnB;AAAA,MAChB;AAAA,MACY;AAAA,QACI,GAAGF;AAAA,QACH,MAAM,CAACrgB,MAAY;AACf,eAAK,WAAWA,CAAS;AAAA,QAC7B;AAAA,MAChB;AAAA,IACA;AAAA,EACI;AAAA,EACH,wBAAwBpgB,GAAM;AACvB,UAAM46B,IAAQ,KAAK,MAAM,6BAA4B,GAC/C3O,IAAS,KAAK,OAAO,UACrBhnB,IAAS,CAAA;AACf,QAAIrL,GAAGqI;AACP,SAAIrI,IAAI,GAAGqI,IAAO24B,EAAM,QAAQhhC,IAAIqI,GAAM,EAAErI,GAAE;AAC1C,YAAMmQ,IAAO6wB,EAAMhhC,CAAC;AACpB,MAAImQ,EAAKkiB,CAAM,MAAM,KAAK,OAAO,CAACjsB,KAAQ+J,EAAK,SAAS/J,MACpDiF,EAAO,KAAK8E,CAAI;AAAA,IAExB;AACA,WAAO9E;AAAA,EACX;AAAA,EACH,wBAAwBwC,GAAO;AACxB,UAAM6J,IAAO,KAAK,QAAQ,MAAM,WAAW,KAAK,WAAW7J,CAAK,CAAC;AACjE,WAAOyL,EAAO5B,EAAK,IAAI;AAAA,EAC3B;AAAA,EACH,aAAa;AACN,UAAMsvB,IAAW,KAAK,wBAAwB,CAAC,EAAE;AACjD,YAAQ,KAAK,aAAY,IAAK,KAAK,QAAQ,KAAK,UAAUA;AAAA,EAC9D;AACJ;AAEA,MAAMC,GAAc;AAAA,EAChB,YAAY7gC,GAAMyN,GAAOqzB,GAAS;AAC9B,SAAK,OAAO9gC,GACZ,KAAK,QAAQyN,GACb,KAAK,WAAWqzB,GAChB,KAAK,QAAQ,uBAAO,OAAO,IAAI;AAAA,EACnC;AAAA,EACA,UAAU9gC,GAAM;AACZ,WAAO,OAAO,UAAU,cAAc,KAAK,KAAK,KAAK,WAAWA,EAAK,SAAS;AAAA,EAClF;AAAA,EACH,SAAS6D,GAAM;AACR,UAAMlE,IAAQ,OAAO,eAAekE,CAAI;AACxC,QAAIk9B;AACJ,IAAIC,GAAkBrhC,CAAK,MACvBohC,IAAc,KAAK,SAASphC,CAAK;AAErC,UAAMmJ,IAAQ,KAAK,OACbnI,IAAKkD,EAAK,IACV4J,IAAQ,KAAK,QAAQ,MAAM9M;AACjC,QAAI,CAACA;AACD,YAAM,IAAI,MAAM,6BAA6BkD,CAAI;AAErD,WAAIlD,KAAMmI,MAGVA,EAAMnI,CAAE,IAAIkD,GACZo9B,GAAiBp9B,GAAM4J,GAAOszB,CAAW,GACrC,KAAK,YACLl1B,EAAS,SAAShI,EAAK,IAAIA,EAAK,SAAS,IAEtC4J;AAAA,EACX;AAAA,EACH,IAAI9M,GAAI;AACD,WAAO,KAAK,MAAMA,CAAE;AAAA,EACxB;AAAA,EACH,WAAWkD,GAAM;AACV,UAAMiF,IAAQ,KAAK,OACbnI,IAAKkD,EAAK,IACV4J,IAAQ,KAAK;AACnB,IAAI9M,KAAMmI,KACN,OAAOA,EAAMnI,CAAE,GAEf8M,KAAS9M,KAAMkL,EAAS4B,CAAK,MAC7B,OAAO5B,EAAS4B,CAAK,EAAE9M,CAAE,GACrB,KAAK,YACL,OAAOyM,GAAUzM,CAAE;AAAA,EAG/B;AACJ;AACA,SAASsgC,GAAiBp9B,GAAM4J,GAAOszB,GAAa;AAChD,QAAMG,IAAer+B,GAAM,uBAAO,OAAO,IAAI,GAAG;AAAA,IAC5Ck+B,IAAcl1B,EAAS,IAAIk1B,CAAW,IAAI,CAAA;AAAA,IAC1Cl1B,EAAS,IAAI4B,CAAK;AAAA,IAClB5J,EAAK;AAAA,EACb,CAAK;AACD,EAAAgI,EAAS,IAAI4B,GAAOyzB,CAAY,GAC5Br9B,EAAK,iBACLs9B,GAAc1zB,GAAO5J,EAAK,aAAa,GAEvCA,EAAK,eACLgI,EAAS,SAAS4B,GAAO5J,EAAK,WAAW;AAEjD;AACA,SAASs9B,GAAc1zB,GAAO2zB,GAAQ;AAClC,SAAO,KAAKA,CAAM,EAAE,QAAQ,CAAC37B,MAAW;AACpC,UAAM47B,IAAgB57B,EAAS,MAAM,GAAG,GAClC67B,IAAaD,EAAc,IAAG,GAC9BE,IAAc;AAAA,MAChB9zB;AAAA,IACZ,EAAU,OAAO4zB,CAAa,EAAE,KAAK,GAAG,GAC1Bh+B,IAAQ+9B,EAAO37B,CAAQ,EAAE,MAAM,GAAG,GAClCuI,IAAa3K,EAAM,IAAG,GACtB0K,IAAc1K,EAAM,KAAK,GAAG;AAClC,IAAAwI,EAAS,MAAM01B,GAAaD,GAAYvzB,GAAaC,CAAU;AAAA,EACnE,CAAC;AACL;AACA,SAASgzB,GAAkBrhC,GAAO;AAC9B,SAAO,QAAQA,KAAS,cAAcA;AAC1C;AAEA,MAAM6hC,GAAS;AAAA,EACX,cAAa;AACT,SAAK,cAAc,IAAIX,GAAcjb,IAAmB,YAAY,EAAI,GACxE,KAAK,WAAW,IAAIib,GAAczJ,IAAS,UAAU,GACrD,KAAK,UAAU,IAAIyJ,GAAc,QAAQ,SAAS,GAClD,KAAK,SAAS,IAAIA,GAAcvG,IAAO,QAAQ,GAC/C,KAAK,mBAAmB;AAAA,MACpB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACjB;AAAA,EACI;AAAA,EACH,OAAO74B,GAAM;AACN,SAAK,MAAM,YAAYA,CAAI;AAAA,EAC/B;AAAA,EACA,UAAUA,GAAM;AACZ,SAAK,MAAM,cAAcA,CAAI;AAAA,EACjC;AAAA,EACH,kBAAkBA,GAAM;AACjB,SAAK,MAAM,YAAYA,GAAM,KAAK,WAAW;AAAA,EACjD;AAAA,EACH,eAAeA,GAAM;AACd,SAAK,MAAM,YAAYA,GAAM,KAAK,QAAQ;AAAA,EAC9C;AAAA,EACH,cAAcA,GAAM;AACb,SAAK,MAAM,YAAYA,GAAM,KAAK,OAAO;AAAA,EAC7C;AAAA,EACH,aAAaA,GAAM;AACZ,SAAK,MAAM,YAAYA,GAAM,KAAK,MAAM;AAAA,EAC5C;AAAA,EACH,cAAcd,GAAI;AACX,WAAO,KAAK,KAAKA,GAAI,KAAK,aAAa,YAAY;AAAA,EACvD;AAAA,EACH,WAAWA,GAAI;AACR,WAAO,KAAK,KAAKA,GAAI,KAAK,UAAU,SAAS;AAAA,EACjD;AAAA,EACH,UAAUA,GAAI;AACP,WAAO,KAAK,KAAKA,GAAI,KAAK,SAAS,QAAQ;AAAA,EAC/C;AAAA,EACH,SAASA,GAAI;AACN,WAAO,KAAK,KAAKA,GAAI,KAAK,QAAQ,OAAO;AAAA,EAC7C;AAAA,EACH,qBAAqBc,GAAM;AACpB,SAAK,MAAM,cAAcA,GAAM,KAAK,WAAW;AAAA,EACnD;AAAA,EACH,kBAAkBA,GAAM;AACjB,SAAK,MAAM,cAAcA,GAAM,KAAK,QAAQ;AAAA,EAChD;AAAA,EACH,iBAAiBA,GAAM;AAChB,SAAK,MAAM,cAAcA,GAAM,KAAK,OAAO;AAAA,EAC/C;AAAA,EACH,gBAAgBA,GAAM;AACf,SAAK,MAAM,cAAcA,GAAM,KAAK,MAAM;AAAA,EAC9C;AAAA,EACH,MAAM6G,GAAQ7G,GAAMggC,GAAe;AAC5B;AAAA,MACI,GAAGhgC;AAAA,IACf,EAAU,QAAQ,CAACigC,MAAM;AACb,YAAMC,IAAMF,KAAiB,KAAK,oBAAoBC,CAAG;AACzD,MAAID,KAAiBE,EAAI,UAAUD,CAAG,KAAKC,MAAQ,KAAK,WAAWD,EAAI,KACnE,KAAK,MAAMp5B,GAAQq5B,GAAKD,CAAG,IAE3B//B,EAAK+/B,GAAK,CAAC79B,MAAO;AACd,cAAM+9B,IAAUH,KAAiB,KAAK,oBAAoB59B,CAAI;AAC9D,aAAK,MAAMyE,GAAQs5B,GAAS/9B,CAAI;AAAA,MACpC,CAAC;AAAA,IAET,CAAC;AAAA,EACL;AAAA,EACH,MAAMyE,GAAQu5B,GAAUC,GAAW;AAC5B,UAAMC,IAAct+B,GAAY6E,CAAM;AACtC,IAAA/G,EAASugC,EAAU,WAAWC,CAAW,GAAG,CAAA,GAAID,CAAS,GACzDD,EAASv5B,CAAM,EAAEw5B,CAAS,GAC1BvgC,EAASugC,EAAU,UAAUC,CAAW,GAAG,CAAA,GAAID,CAAS;AAAA,EAC5D;AAAA,EACH,oBAAoB9hC,GAAM;AACnB,aAAQpG,IAAI,GAAGA,IAAI,KAAK,iBAAiB,QAAQA,KAAI;AACjD,YAAM+nC,IAAM,KAAK,iBAAiB/nC,CAAC;AACnC,UAAI+nC,EAAI,UAAU3hC,CAAI;AAClB,eAAO2hC;AAAA,IAEf;AACA,WAAO,KAAK;AAAA,EAChB;AAAA,EACH,KAAKhhC,GAAI8gC,GAAezhC,GAAM;AACvB,UAAM6D,IAAO49B,EAAc,IAAI9gC,CAAE;AACjC,QAAIkD,MAAS;AACT,YAAM,IAAI,MAAM,MAAMlD,IAAK,2BAA2BX,IAAO,GAAG;AAEpE,WAAO6D;AAAA,EACX;AACJ;AACA,IAAIg+B,KAA2B,oBAAIL,GAAQ;AAE3C,MAAMQ,GAAc;AAAA,EAChB,cAAa;AACT,SAAK,QAAQ,CAAA;AAAA,EACjB;AAAA,EACH,OAAOzyB,GAAO0yB,GAAMxgC,GAAMygC,GAAQ;AAC3B,IAAID,MAAS,iBACT,KAAK,QAAQ,KAAK,mBAAmB1yB,GAAO,EAAI,GAChD,KAAK,QAAQ,KAAK,OAAOA,GAAO,SAAS;AAE7C,UAAMlC,IAAc60B,IAAS,KAAK,aAAa3yB,CAAK,EAAE,OAAO2yB,CAAM,IAAI,KAAK,aAAa3yB,CAAK,GACxFtK,IAAS,KAAK,QAAQoI,GAAakC,GAAO0yB,GAAMxgC,CAAI;AAC1D,WAAIwgC,MAAS,mBACT,KAAK,QAAQ50B,GAAakC,GAAO,MAAM,GACvC,KAAK,QAAQ,KAAK,OAAOA,GAAO,WAAW,IAExCtK;AAAA,EACX;AAAA,EACH,QAAQoI,GAAakC,GAAO0yB,GAAMxgC,GAAM;AACjC,IAAAA,IAAOA,KAAQ,CAAA;AACf,eAAW0gC,KAAc90B,GAAY;AACjC,YAAM+0B,IAASD,EAAW,QACpB75B,IAAS85B,EAAOH,CAAI,GACpBrP,IAAS;AAAA,QACXrjB;AAAA,QACA9N;AAAA,QACA0gC,EAAW;AAAA,MAC3B;AACY,UAAI5gC,EAAS+G,GAAQsqB,GAAQwP,CAAM,MAAM,MAAS3gC,EAAK;AACnD,eAAO;AAAA,IAEf;AACA,WAAO;AAAA,EACX;AAAA,EACA,aAAa;AACT,IAAKb,EAAc,KAAK,MAAM,MAC1B,KAAK,YAAY,KAAK,QACtB,KAAK,SAAS;AAAA,EAEtB;AAAA,EACH,aAAa2O,GAAO;AACb,QAAI,KAAK;AACL,aAAO,KAAK;AAEhB,UAAMlC,IAAc,KAAK,SAAS,KAAK,mBAAmBkC,CAAK;AAC/D,gBAAK,oBAAoBA,CAAK,GACvBlC;AAAA,EACX;AAAA,EACA,mBAAmBkC,GAAO8yB,GAAK;AAC3B,UAAMpgB,IAAS1S,KAASA,EAAM,QACxB7M,IAAUvB,EAAe8gB,EAAO,WAAWA,EAAO,QAAQ,SAAS,EAAE,GACrEqgB,IAAUC,GAAWtgB,CAAM;AACjC,WAAOvf,MAAY,MAAS,CAAC2/B,IAAM,CAAA,IAAKG,GAAkBjzB,GAAO+yB,GAAS5/B,GAAS2/B,CAAG;AAAA,EAC1F;AAAA,EACH,oBAAoB9yB,GAAO;AACpB,UAAMkzB,IAAsB,KAAK,aAAa,CAAA,GACxCp1B,IAAc,KAAK,QACnBwrB,IAAO,CAAC7+B,GAAGM,MAAIN,EAAE,OAAO,CAACa,MAAI,CAACP,EAAE,KAAK,CAACC,MAAIM,EAAE,OAAO,OAAON,EAAE,OAAO,EAAE,CAAC;AAC5E,SAAK,QAAQs+B,EAAK4J,GAAqBp1B,CAAW,GAAGkC,GAAO,MAAM,GAClE,KAAK,QAAQspB,EAAKxrB,GAAao1B,CAAmB,GAAGlzB,GAAO,OAAO;AAAA,EACvE;AACJ;AACC,SAASgzB,GAAWtgB,GAAQ;AACzB,QAAMygB,IAAW,CAAA,GACXJ,IAAU,CAAA,GACV7jC,IAAO,OAAO,KAAKojC,GAAS,QAAQ,KAAK;AAC/C,WAAQjoC,IAAI,GAAGA,IAAI6E,EAAK,QAAQ7E;AAC5B,IAAA0oC,EAAQ,KAAKT,GAAS,UAAUpjC,EAAK7E,CAAC,CAAC,CAAC;AAE5C,QAAMwU,IAAQ6T,EAAO,WAAW,CAAA;AAChC,WAAQroB,IAAI,GAAGA,IAAIwU,EAAM,QAAQxU,KAAI;AACjC,UAAMwoC,IAASh0B,EAAMxU,CAAC;AACtB,IAAI0oC,EAAQ,QAAQF,CAAM,MAAM,OAC5BE,EAAQ,KAAKF,CAAM,GACnBM,EAASN,EAAO,EAAE,IAAI;AAAA,EAE9B;AACA,SAAO;AAAA,IACH,SAAAE;AAAA,IACA,UAAAI;AAAA,EACR;AACA;AACA,SAASC,GAAQjgC,GAAS2/B,GAAK;AAC3B,SAAI,CAACA,KAAO3/B,MAAY,KACb,OAEPA,MAAY,KACL,CAAA,IAEJA;AACX;AACA,SAAS8/B,GAAkBjzB,GAAO,EAAE,SAAA+yB,GAAU,UAAAI,EAAQ,GAAKhgC,GAAS2/B,GAAK;AACrE,QAAMp9B,IAAS,CAAA,GACT4I,IAAU0B,EAAM,WAAU;AAChC,aAAW6yB,KAAUE,GAAQ;AACzB,UAAM3hC,IAAKyhC,EAAO,IACZ9wB,IAAOqxB,GAAQjgC,EAAQ/B,CAAE,GAAG0hC,CAAG;AACrC,IAAI/wB,MAAS,QAGbrM,EAAO,KAAK;AAAA,MACR,QAAAm9B;AAAA,MACA,SAASQ,GAAWrzB,EAAM,QAAQ;AAAA,QAC9B,QAAA6yB;AAAA,QACA,OAAOM,EAAS/hC,CAAE;AAAA,MAClC,GAAe2Q,GAAMzD,CAAO;AAAA,IAC5B,CAAS;AAAA,EACL;AACA,SAAO5I;AACX;AACA,SAAS29B,GAAW3gB,GAAQ,EAAE,QAAAmgB,GAAS,OAAAh0B,EAAK,GAAKkD,GAAMzD,GAAS;AAC5D,QAAMpP,IAAOwjB,EAAO,gBAAgBmgB,CAAM,GACpCnuB,IAASgO,EAAO,gBAAgB3Q,GAAM7S,CAAI;AAChD,SAAI2P,KAASg0B,EAAO,YAChBnuB,EAAO,KAAKmuB,EAAO,QAAQ,GAExBngB,EAAO,eAAehO,GAAQpG,GAAS;AAAA,IAC1C;AAAA,EACR,GAAO;AAAA,IACC,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,SAAS;AAAA,EACjB,CAAK;AACL;AAEA,SAASg1B,GAAa7iC,GAAM0C,GAAS;AACjC,QAAMogC,IAAkBj3B,EAAS,SAAS7L,CAAI,KAAK,CAAA;AAEnD,WADwB0C,EAAQ,YAAY,CAAA,GAAI1C,CAAI,KAAK,CAAA,GACnC,aAAa0C,EAAQ,aAAaogC,EAAgB,aAAa;AACzF;AACA,SAASC,GAA0BpiC,GAAIsW,GAAW;AAC9C,MAAIzM,IAAO7J;AACX,SAAIA,MAAO,YACP6J,IAAOyM,IACAtW,MAAO,cACd6J,IAAOyM,MAAc,MAAM,MAAM,MAE9BzM;AACX;AACA,SAASw4B,GAA0Bx4B,GAAMyM,GAAW;AAChD,SAAOzM,MAASyM,IAAY,YAAY;AAC5C;AACA,SAASgsB,GAActiC,GAAI;AACvB,MAAIA,MAAO,OAAOA,MAAO,OAAOA,MAAO;AACnC,WAAOA;AAEf;AACA,SAASuiC,GAAiBxS,GAAU;AAChC,MAAIA,MAAa,SAASA,MAAa;AACnC,WAAO;AAEX,MAAIA,MAAa,UAAUA,MAAa;AACpC,WAAO;AAEf;AACA,SAASyS,GAAcxiC,MAAOyiC,GAAc;AACxC,MAAIH,GAActiC,CAAE;AAChB,WAAOA;AAEX,aAAW2Q,KAAQ8xB,GAAa;AAC5B,UAAM54B,IAAO8G,EAAK,QAAQ4xB,GAAiB5xB,EAAK,QAAQ,KAAK3Q,EAAG,SAAS,KAAKsiC,GAActiC,EAAG,CAAC,EAAE,aAAa;AAC/G,QAAI6J;AACA,aAAOA;AAAA,EAEf;AACA,QAAM,IAAI,MAAM,6BAA6B7J,CAAE,qDAAqD;AACxG;AACA,SAAS0iC,GAAmB1iC,GAAI6J,GAAMqb,GAAS;AAC3C,MAAIA,EAAQrb,IAAO,QAAQ,MAAM7J;AAC7B,WAAO;AAAA,MACH,MAAA6J;AAAA,IACZ;AAEA;AACA,SAAS84B,GAAyB3iC,GAAIshB,GAAQ;AAC1C,MAAIA,EAAO,QAAQA,EAAO,KAAK,UAAU;AACrC,UAAMshB,IAAUthB,EAAO,KAAK,SAAS,OAAO,CAAC9nB,MAAIA,EAAE,YAAYwG,KAAMxG,EAAE,YAAYwG,CAAE;AACrF,QAAI4iC,EAAQ;AACR,aAAOF,GAAmB1iC,GAAI,KAAK4iC,EAAQ,CAAC,CAAC,KAAKF,GAAmB1iC,GAAI,KAAK4iC,EAAQ,CAAC,CAAC;AAAA,EAEhG;AACA,SAAO,CAAA;AACX;AACA,SAASC,GAAiBvhB,GAAQvf,GAAS;AACvC,QAAM+gC,IAAgBr2B,GAAU6U,EAAO,IAAI,KAAK;AAAA,IAC5C,QAAQ,CAAA;AAAA,EAChB,GACUyhB,IAAehhC,EAAQ,UAAU,CAAA,GACjCihC,IAAiBd,GAAa5gB,EAAO,MAAMvf,CAAO,GAClDwiB,IAAS,uBAAO,OAAO,IAAI;AACjC,gBAAO,KAAKwe,CAAY,EAAE,QAAQ,CAAC/iC,MAAK;AACpC,UAAMijC,IAAYF,EAAa/iC,CAAE;AACjC,QAAI,CAACI,EAAS6iC,CAAS;AACnB,aAAO,QAAQ,MAAM,0CAA0CjjC,CAAE,EAAE;AAEvE,QAAIijC,EAAU;AACV,aAAO,QAAQ,KAAK,kDAAkDjjC,CAAE,EAAE;AAE9E,UAAM6J,IAAO24B,GAAcxiC,GAAIijC,GAAWN,GAAyB3iC,GAAIshB,CAAM,GAAGpW,EAAS,OAAO+3B,EAAU,IAAI,CAAC,GACzGC,IAAYb,GAA0Bx4B,GAAMm5B,CAAc,GAC1DG,IAAsBL,EAAc,UAAU,CAAA;AACpD,IAAAve,EAAOvkB,CAAE,IAAIsC,GAAQ,uBAAO,OAAO,IAAI,GAAG;AAAA,MACtC;AAAA,QACI,MAAAuH;AAAA,MAChB;AAAA,MACYo5B;AAAA,MACAE,EAAoBt5B,CAAI;AAAA,MACxBs5B,EAAoBD,CAAS;AAAA,IACzC,CAAS;AAAA,EACL,CAAC,GACD5hB,EAAO,KAAK,SAAS,QAAQ,CAAC4D,MAAU;AACpC,UAAM7lB,IAAO6lB,EAAQ,QAAQ5D,EAAO,MAC9BhL,IAAY4O,EAAQ,aAAagd,GAAa7iC,GAAM0C,CAAO,GAE3DohC,KADkB12B,GAAUpN,CAAI,KAAK,CAAA,GACC,UAAU,CAAA;AACtD,WAAO,KAAK8jC,CAAmB,EAAE,QAAQ,CAACC,MAAY;AAClD,YAAMv5B,IAAOu4B,GAA0BgB,GAAW9sB,CAAS,GACrDtW,IAAKklB,EAAQrb,IAAO,QAAQ,KAAKA;AACvC,MAAA0a,EAAOvkB,CAAE,IAAIukB,EAAOvkB,CAAE,KAAK,uBAAO,OAAO,IAAI,GAC7CsC,GAAQiiB,EAAOvkB,CAAE,GAAG;AAAA,QAChB;AAAA,UACI,MAAA6J;AAAA,QACpB;AAAA,QACgBk5B,EAAa/iC,CAAE;AAAA,QACfmjC,EAAoBC,CAAS;AAAA,MAC7C,CAAa;AAAA,IACL,CAAC;AAAA,EACL,CAAC,GACD,OAAO,KAAK7e,CAAM,EAAE,QAAQ,CAAC1iB,MAAM;AAC/B,UAAM2d,IAAQ+E,EAAO1iB,CAAG;AACxB,IAAAS,GAAQkd,GAAO;AAAA,MACXtU,EAAS,OAAOsU,EAAM,IAAI;AAAA,MAC1BtU,EAAS;AAAA,IACrB,CAAS;AAAA,EACL,CAAC,GACMqZ;AACX;AACA,SAAS8e,GAAY/hB,GAAQ;AACzB,QAAMvf,IAAUuf,EAAO,YAAYA,EAAO,UAAU,CAAA;AACpD,EAAAvf,EAAQ,UAAUvB,EAAeuB,EAAQ,SAAS,CAAA,CAAE,GACpDA,EAAQ,SAAS8gC,GAAiBvhB,GAAQvf,CAAO;AACrD;AACA,SAASuhC,GAASv1B,GAAM;AACpB,SAAAA,IAAOA,KAAQ,CAAA,GACfA,EAAK,WAAWA,EAAK,YAAY,CAAA,GACjCA,EAAK,SAASA,EAAK,UAAU,CAAA,GACtBA;AACX;AACA,SAASw1B,GAAWjiB,GAAQ;AACxB,SAAAA,IAASA,KAAU,CAAA,GACnBA,EAAO,OAAOgiB,GAAShiB,EAAO,IAAI,GAClC+hB,GAAY/hB,CAAM,GACXA;AACX;AACA,MAAMkiB,KAAW,oBAAI,IAAG,GAClBC,KAAa,oBAAI,IAAG;AAC1B,SAASC,GAAWl4B,GAAUm4B,GAAU;AACpC,MAAI7lC,IAAO0lC,GAAS,IAAIh4B,CAAQ;AAChC,SAAK1N,MACDA,IAAO6lC,EAAQ,GACfH,GAAS,IAAIh4B,GAAU1N,CAAI,GAC3B2lC,GAAW,IAAI3lC,CAAI,IAEhBA;AACX;AACA,MAAM8lC,KAAa,CAACx7B,GAAK9I,GAAKuC,MAAM;AAChC,QAAM8O,IAAO9N,GAAiBvD,GAAKuC,CAAG;AACtC,EAAI8O,MAAS,UACTvI,EAAI,IAAIuI,CAAI;AAEpB;AACA,MAAMkzB,GAAO;AAAA,EACT,YAAYviB,GAAO;AACf,SAAK,UAAUiiB,GAAWjiB,CAAM,GAChC,KAAK,cAAc,oBAAI,IAAG,GAC1B,KAAK,iBAAiB,oBAAI,IAAG;AAAA,EACjC;AAAA,EACA,IAAI,WAAW;AACX,WAAO,KAAK,QAAQ;AAAA,EACxB;AAAA,EACA,IAAI,OAAO;AACP,WAAO,KAAK,QAAQ;AAAA,EACxB;AAAA,EACA,IAAI,KAAKjiB,GAAM;AACX,SAAK,QAAQ,OAAOA;AAAA,EACxB;AAAA,EACA,IAAI,OAAO;AACP,WAAO,KAAK,QAAQ;AAAA,EACxB;AAAA,EACA,IAAI,KAAK0O,GAAM;AACX,SAAK,QAAQ,OAAOu1B,GAASv1B,CAAI;AAAA,EACrC;AAAA,EACA,IAAI,UAAU;AACV,WAAO,KAAK,QAAQ;AAAA,EACxB;AAAA,EACA,IAAI,QAAQhM,GAAS;AACjB,SAAK,QAAQ,UAAUA;AAAA,EAC3B;AAAA,EACA,IAAI,UAAU;AACV,WAAO,KAAK,QAAQ;AAAA,EACxB;AAAA,EACA,SAAS;AACL,UAAMuf,IAAS,KAAK;AACpB,SAAK,WAAU,GACf+hB,GAAY/hB,CAAM;AAAA,EACtB;AAAA,EACA,aAAa;AACT,SAAK,YAAY,MAAK,GACtB,KAAK,eAAe,MAAK;AAAA,EAC7B;AAAA,EACH,iBAAiBwiB,GAAa;AACvB,WAAOJ,GAAWI,GAAa,MAAI;AAAA,MAC3B;AAAA,QACI,YAAYA,CAAW;AAAA,QACvB;AAAA,MACpB;AAAA,IACA,CAAa;AAAA,EACT;AAAA,EACH,0BAA0BA,GAAa9c,GAAY;AAC5C,WAAO0c,GAAW,GAAGI,CAAW,eAAe9c,CAAU,IAAI,MAAI;AAAA,MACzD;AAAA,QACI,YAAY8c,CAAW,gBAAgB9c,CAAU;AAAA,QACjD,eAAeA,CAAU;AAAA,MAC7C;AAAA,MACgB;AAAA,QACI,YAAY8c,CAAW;AAAA,QACvB;AAAA,MACpB;AAAA,IACA,CAAa;AAAA,EACT;AAAA,EACH,wBAAwBA,GAAahd,GAAa;AAC3C,WAAO4c,GAAW,GAAGI,CAAW,IAAIhd,CAAW,IAAI,MAAI;AAAA,MAC/C;AAAA,QACI,YAAYgd,CAAW,aAAahd,CAAW;AAAA,QAC/C,YAAYgd,CAAW;AAAA,QACvB,YAAYhd,CAAW;AAAA,QACvB;AAAA,MACpB;AAAA,IACA,CAAa;AAAA,EACT;AAAA,EACH,gBAAgB2a,GAAQ;AACjB,UAAMzhC,IAAKyhC,EAAO,IACZpiC,IAAO,KAAK;AAClB,WAAOqkC,GAAW,GAAGrkC,CAAI,WAAWW,CAAE,IAAI,MAAI;AAAA,MACtC;AAAA,QACI,WAAWA,CAAE;AAAA,QACb,GAAGyhC,EAAO,0BAA0B,CAAA;AAAA,MACxD;AAAA,IACA,CAAa;AAAA,EACT;AAAA,EACH,cAAcsC,GAAWC,GAAY;AAC9B,UAAMC,IAAc,KAAK;AACzB,QAAI31B,IAAQ21B,EAAY,IAAIF,CAAS;AACrC,YAAI,CAACz1B,KAAS01B,OACV11B,IAAQ,oBAAI,IAAG,GACf21B,EAAY,IAAIF,GAAWz1B,CAAK,IAE7BA;AAAA,EACX;AAAA,EACH,gBAAgBy1B,GAAWG,GAAUF,GAAY;AAC1C,UAAM,EAAE,SAAAjiC,GAAU,MAAA1C,EAAI,IAAM,MACtBiP,IAAQ,KAAK,cAAcy1B,GAAWC,CAAU,GAChDnf,IAASvW,EAAM,IAAI41B,CAAQ;AACjC,QAAIrf;AACA,aAAOA;AAEX,UAAMvR,IAAS,oBAAI,IAAG;AACtB,IAAA4wB,EAAS,QAAQ,CAACpmC,MAAO;AACrB,MAAIimC,MACAzwB,EAAO,IAAIywB,CAAS,GACpBjmC,EAAK,QAAQ,CAAC+D,MAAM+hC,GAAWtwB,GAAQywB,GAAWliC,CAAG,CAAC,IAE1D/D,EAAK,QAAQ,CAAC+D,MAAM+hC,GAAWtwB,GAAQvR,GAASF,CAAG,CAAC,GACpD/D,EAAK,QAAQ,CAAC+D,MAAM+hC,GAAWtwB,GAAQ7G,GAAUpN,CAAI,KAAK,IAAIwC,CAAG,CAAC,GAClE/D,EAAK,QAAQ,CAAC+D,MAAM+hC,GAAWtwB,GAAQpI,GAAUrJ,CAAG,CAAC,GACrD/D,EAAK,QAAQ,CAAC+D,MAAM+hC,GAAWtwB,GAAQ5G,IAAa7K,CAAG,CAAC;AAAA,IAC5D,CAAC;AACD,UAAMgD,IAAQ,MAAM,KAAKyO,CAAM;AAC/B,WAAIzO,EAAM,WAAW,KACjBA,EAAM,KAAK,uBAAO,OAAO,IAAI,CAAC,GAE9B4+B,GAAW,IAAIS,CAAQ,KACvB51B,EAAM,IAAI41B,GAAUr/B,CAAK,GAEtBA;AAAA,EACX;AAAA,EACH,oBAAoB;AACb,UAAM,EAAE,SAAA9C,GAAU,MAAA1C,EAAI,IAAM;AAC5B,WAAO;AAAA,MACH0C;AAAA,MACA0K,GAAUpN,CAAI,KAAK,CAAA;AAAA,MACnB6L,EAAS,SAAS7L,CAAI,KAAK,CAAA;AAAA,MAC3B;AAAA,QACI,MAAAA;AAAA,MAChB;AAAA,MACY6L;AAAA,MACAwB;AAAA,IACZ;AAAA,EACI;AAAA,EACH,oBAAoB4G,GAAQpV,GAAOgP,GAASqG,IAAW;AAAA,IAChD;AAAA,EACR,GAAO;AACC,UAAMjP,IAAS;AAAA,MACX,SAAS;AAAA,IACrB,GACc,EAAE,UAAAgR,GAAW,aAAA6uB,MAAiBC,GAAY,KAAK,gBAAgB9wB,GAAQC,CAAQ;AACrF,QAAIxR,IAAUuT;AACd,QAAI+uB,GAAY/uB,GAAUpX,CAAK,GAAG;AAC9B,MAAAoG,EAAO,UAAU,IACjB4I,IAAUlK,GAAWkK,CAAO,IAAIA,EAAO,IAAKA;AAC5C,YAAMo3B,IAAc,KAAK,eAAehxB,GAAQpG,GAASi3B,CAAW;AACpE,MAAApiC,IAAUiS,GAAesB,GAAUpI,GAASo3B,CAAW;AAAA,IAC3D;AACA,eAAWnyB,KAAQjU;AACf,MAAAoG,EAAO6N,CAAI,IAAIpQ,EAAQoQ,CAAI;AAE/B,WAAO7N;AAAA,EACX;AAAA,EACH,eAAegP,GAAQpG,GAASqG,IAAW;AAAA,IACpC;AAAA,EACR,GAAOY,GAAoB;AACnB,UAAM,EAAE,UAAAmB,EAAQ,IAAM8uB,GAAY,KAAK,gBAAgB9wB,GAAQC,CAAQ;AACvE,WAAOnT,EAAS8M,CAAO,IAAI8G,GAAesB,GAAUpI,GAAS,QAAWiH,CAAkB,IAAImB;AAAA,EAClG;AACJ;AACA,SAAS8uB,GAAYG,GAAejxB,GAAQC,GAAU;AAClD,MAAIjF,IAAQi2B,EAAc,IAAIjxB,CAAM;AACpC,EAAKhF,MACDA,IAAQ,oBAAI,IAAG,GACfi2B,EAAc,IAAIjxB,GAAQhF,CAAK;AAEnC,QAAM9C,IAAW+H,EAAS,KAAI;AAC9B,MAAIsR,IAASvW,EAAM,IAAI9C,CAAQ;AAC/B,SAAKqZ,MAEDA,IAAS;AAAA,IACL,UAFaxR,GAAgBC,GAAQC,CAAQ;AAAA,IAG7C,aAAaA,EAAS,OAAO,CAACha,MAAI,CAACA,EAAE,YAAW,EAAG,SAAS,OAAO,CAAC;AAAA,EAChF,GACQ+U,EAAM,IAAI9C,GAAUqZ,CAAM,IAEvBA;AACX;AACA,MAAM2f,KAAc,CAACtkC,MAAQE,EAASF,CAAK,KAAK,OAAO,oBAAoBA,CAAK,EAAE,KAAK,CAAC2B,MAAMmB,GAAW9C,EAAM2B,CAAG,CAAC,CAAC;AACpH,SAASwiC,GAAYpwB,GAAO/V,GAAO;AAC/B,QAAM,EAAE,cAAAumC,GAAe,aAAArvB,MAAiBpI,GAAaiH,CAAK;AAC1D,aAAW9B,KAAQjU,GAAM;AACrB,UAAMwmC,IAAaD,EAAatyB,CAAI,GAC9BwyB,IAAYvvB,EAAYjD,CAAI,GAC5BjS,KAASykC,KAAaD,MAAezwB,EAAM9B,CAAI;AACrD,QAAIuyB,MAAe1hC,GAAW9C,CAAK,KAAKskC,GAAYtkC,CAAK,MAAMykC,KAAaxkC,EAAQD,CAAK;AACrF,aAAO;AAAA,EAEf;AACA,SAAO;AACX;AAEA,IAAI0kC,KAAU;AAEd,MAAMC,KAAkB;AAAA,EACpB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AACA,SAASC,GAAqB/U,GAAUlmB,GAAM;AAC1C,SAAOkmB,MAAa,SAASA,MAAa,YAAY8U,GAAgB,QAAQ9U,CAAQ,MAAM,MAAMlmB,MAAS;AAC/G;AACA,SAASk7B,GAAcC,GAAIC,GAAI;AAC3B,SAAO,SAAS5rC,GAAGM,GAAG;AAClB,WAAON,EAAE2rC,CAAE,MAAMrrC,EAAEqrC,CAAE,IAAI3rC,EAAE4rC,CAAE,IAAItrC,EAAEsrC,CAAE,IAAI5rC,EAAE2rC,CAAE,IAAIrrC,EAAEqrC,CAAE;AAAA,EACzD;AACJ;AACA,SAASE,GAAqBh4B,GAAS;AACnC,QAAM0B,IAAQ1B,EAAQ,OAChBqU,IAAmB3S,EAAM,QAAQ;AACvC,EAAAA,EAAM,cAAc,aAAa,GACjChO,EAAS2gB,KAAoBA,EAAiB,YAAY;AAAA,IACtDrU;AAAA,EACR,GAAO0B,CAAK;AACZ;AACA,SAASu2B,GAAoBj4B,GAAS;AAClC,QAAM0B,IAAQ1B,EAAQ,OAChBqU,IAAmB3S,EAAM,QAAQ;AACvC,EAAAhO,EAAS2gB,KAAoBA,EAAiB,YAAY;AAAA,IACtDrU;AAAA,EACR,GAAO0B,CAAK;AACZ;AACC,SAASw2B,GAAUliC,GAAM;AACtB,SAAI2V,GAAe,KAAM,OAAO3V,KAAS,WACrCA,IAAO,SAAS,eAAeA,CAAI,IAC5BA,KAAQA,EAAK,WACpBA,IAAOA,EAAK,CAAC,IAEbA,KAAQA,EAAK,WACbA,IAAOA,EAAK,SAETA;AACX;AACA,MAAMmiC,KAAY,CAAA,GACZC,KAAW,CAACzjC,MAAM;AACpB,QAAMqN,IAASk2B,GAAUvjC,CAAG;AAC5B,SAAO,OAAO,OAAOwjC,EAAS,EAAE,OAAO,CAAClsC,MAAIA,EAAE,WAAW+V,CAAM,EAAE,IAAG;AACxE;AACA,SAASq2B,GAAgBjmC,GAAK2G,GAAOwhB,GAAM;AACvC,QAAM3pB,IAAO,OAAO,KAAKwB,CAAG;AAC5B,aAAWuC,KAAO/D,GAAK;AACnB,UAAM0nC,IAAS,CAAC3jC;AAChB,QAAI2jC,KAAUv/B,GAAO;AACjB,YAAM/F,IAAQZ,EAAIuC,CAAG;AACrB,aAAOvC,EAAIuC,CAAG,IACV4lB,IAAO,KAAK+d,IAASv/B,OACrB3G,EAAIkmC,IAAS/d,CAAI,IAAIvnB;AAAA,IAE7B;AAAA,EACJ;AACJ;AACC,SAASulC,GAAmB9sC,GAAG+sC,GAAWC,GAAaC,GAAS;AAC7D,SAAI,CAACD,KAAehtC,EAAE,SAAS,aACpB,OAEPitC,IACOF,IAEJ/sC;AACX;AACA,MAAMktC,GAAM;AAAA,EACR,OAAO,WAAW36B;AAAA,EAClB,OAAO,YAAYm6B;AAAA,EACnB,OAAO,YAAY54B;AAAA,EACnB,OAAO,WAAWy0B;AAAA,EAClB,OAAO,UAAU0D;AAAA,EACjB,OAAO,WAAWU;AAAA,EAClB,OAAO,YAAYn9B,GAAO;AACtB,IAAA+4B,GAAS,IAAI,GAAG/4B,CAAK,GACrB29B,GAAiB;AAAA,EACrB;AAAA,EACA,OAAO,cAAc39B,GAAO;AACxB,IAAA+4B,GAAS,OAAO,GAAG/4B,CAAK,GACxB29B,GAAiB;AAAA,EACrB;AAAA,EACA,YAAY5iC,GAAM6iC,GAAW;AACzB,UAAMzkB,IAAS,KAAK,SAAS,IAAIuiB,GAAOkC,CAAU,GAC5CC,IAAgBZ,GAAUliC,CAAI,GAC9B+iC,IAAgBX,GAASU,CAAa;AAC5C,QAAIC;AACA,YAAM,IAAI,MAAM,8CAA+CA,EAAc,KAAK,oDAA2DA,EAAc,OAAO,KAAK,kBAAmB;AAE9L,UAAMlkC,IAAUuf,EAAO,eAAeA,EAAO,qBAAqB,KAAK,YAAY;AACnF,SAAK,WAAW,KAAKA,EAAO,YAAYkV,GAAgBwP,CAAa,GAAC,GACtE,KAAK,SAAS,aAAa1kB,CAAM;AACjC,UAAMpU,IAAU,KAAK,SAAS,eAAe84B,GAAejkC,EAAQ,WAAW,GACzEmN,IAAShC,KAAWA,EAAQ,QAC5BuN,IAASvL,KAAUA,EAAO,QAC1BJ,IAAQI,KAAUA,EAAO;AA6B/B,QA5BA,KAAK,KAAKnP,GAAG,GACb,KAAK,MAAMmN,GACX,KAAK,SAASgC,GACd,KAAK,QAAQJ,GACb,KAAK,SAAS2L,GACd,KAAK,WAAW1Y,GAChB,KAAK,eAAe,KAAK,aACzB,KAAK,UAAU,CAAA,GACf,KAAK,YAAY,CAAA,GACjB,KAAK,UAAU,QACf,KAAK,QAAQ,CAAA,GACb,KAAK,0BAA0B,QAC/B,KAAK,YAAY,QACjB,KAAK,UAAU,CAAA,GACf,KAAK,aAAa,QAClB,KAAK,aAAa,CAAA,GACjB,KAAK,uBAAuB,QAC7B,KAAK,kBAAkB,CAAA,GACvB,KAAK,SAAS,CAAA,GACd,KAAK,WAAW,IAAIs/B,GAAa,GACjC,KAAK,WAAW,CAAA,GAChB,KAAK,iBAAiB,CAAA,GACtB,KAAK,WAAW,IAChB,KAAK,sBAAsB,QAC3B,KAAK,WAAW,QAChB,KAAK,YAAY54B,GAAS,CAAC8H,MAAO,KAAK,OAAOA,CAAI,GAAGxO,EAAQ,eAAe,CAAC,GAC7E,KAAK,eAAe,CAAA,GACpBsjC,GAAU,KAAK,EAAE,IAAI,MACjB,CAACn4B,KAAW,CAACgC,GAAQ;AACrB,cAAQ,MAAM,mEAAmE;AACjF;AAAA,IACJ;AACA,IAAAsR,GAAS,OAAO,MAAM,YAAY0kB,EAAoB,GACtD1kB,GAAS,OAAO,MAAM,YAAY2kB,EAAmB,GACrD,KAAK,YAAW,GACZ,KAAK,YACL,KAAK,OAAM;AAAA,EAEnB;AAAA,EACA,IAAI,cAAc;AACd,UAAM,EAAE,SAAS,EAAE,aAAA9pB,GAAc,qBAAA6qB,EAAmB,GAAM,OAAAp3B,GAAQ,QAAA2L,GAAS,cAAA0rB,EAAY,IAAM;AAC7F,WAAKlmC,EAAcob,CAAW,IAG1B6qB,KAAuBC,IAChBA,IAEJ1rB,IAAS3L,IAAQ2L,IAAS,OALtBY;AAAA,EAMf;AAAA,EACA,IAAI,OAAO;AACP,WAAO,KAAK,OAAO;AAAA,EACvB;AAAA,EACA,IAAI,KAAKtN,GAAM;AACX,SAAK,OAAO,OAAOA;AAAA,EACvB;AAAA,EACA,IAAI,UAAU;AACV,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAI,QAAQhM,GAAS;AACjB,SAAK,OAAO,UAAUA;AAAA,EAC1B;AAAA,EACA,IAAI,WAAW;AACX,WAAOm/B;AAAA,EACX;AAAA,EACH,cAAc;AACP,gBAAK,cAAc,YAAY,GAC3B,KAAK,QAAQ,aACb,KAAK,OAAM,IAEX1lB,GAAY,MAAM,KAAK,QAAQ,gBAAgB,GAEnD,KAAK,WAAU,GACf,KAAK,cAAc,WAAW,GACvB;AAAA,EACX;AAAA,EACA,QAAQ;AACJ,WAAAvM,GAAY,KAAK,QAAQ,KAAK,GAAG,GAC1B;AAAA,EACX;AAAA,EACA,OAAO;AACH,WAAAuR,GAAS,KAAK,IAAI,GACX;AAAA,EACX;AAAA,EACH,OAAO1R,GAAO2L,GAAQ;AACf,IAAK+F,GAAS,QAAQ,IAAI,IAGtB,KAAK,oBAAoB;AAAA,MACrB,OAAA1R;AAAA,MACA,QAAA2L;AAAA,IAChB,IALY,KAAK,QAAQ3L,GAAO2L,CAAM;AAAA,EAOlC;AAAA,EACA,QAAQ3L,GAAO2L,GAAQ;AACnB,UAAM1Y,IAAU,KAAK,SACfmN,IAAS,KAAK,QACdmM,IAActZ,EAAQ,uBAAuB,KAAK,aAClDqkC,IAAU,KAAK,SAAS,eAAel3B,GAAQJ,GAAO2L,GAAQY,CAAW,GACzEgrB,IAAWtkC,EAAQ,oBAAoB,KAAK,SAAS,oBAAmB,GACxEwO,IAAO,KAAK,QAAQ,WAAW;AAIrC,IAHA,KAAK,QAAQ61B,EAAQ,OACrB,KAAK,SAASA,EAAQ,QACtB,KAAK,eAAe,KAAK,aACpB5qB,GAAY,MAAM6qB,GAAU,EAAI,MAGrC,KAAK,cAAc,UAAU;AAAA,MACzB,MAAMD;AAAA,IAClB,CAAS,GACDxlC,EAASmB,EAAQ,UAAU;AAAA,MACvB;AAAA,MACAqkC;AAAA,IACZ,GAAW,IAAI,GACH,KAAK,YACD,KAAK,UAAU71B,CAAI,KACnB,KAAK,OAAM;AAAA,EAGvB;AAAA,EACA,sBAAsB;AAElB,UAAM+1B,IADU,KAAK,QACS,UAAU,CAAA;AACxC,IAAAtlC,EAAKslC,GAAe,CAACC,GAAajb,MAAS;AACvC,MAAAib,EAAY,KAAKjb;AAAA,IACrB,CAAC;AAAA,EACL;AAAA,EACH,sBAAsB;AACf,UAAMvpB,IAAU,KAAK,SACfykC,IAAYzkC,EAAQ,QACpBwiB,IAAS,KAAK,QACdkiB,IAAU,OAAO,KAAKliB,CAAM,EAAE,OAAO,CAACjlB,GAAKU,OAC7CV,EAAIU,CAAE,IAAI,IACHV,IACR,CAAA,CAAE;AACL,QAAI6I,IAAQ,CAAA;AACZ,IAAIq+B,MACAr+B,IAAQA,EAAM,OAAO,OAAO,KAAKq+B,CAAS,EAAE,IAAI,CAACxmC,MAAK;AAClD,YAAMyiC,IAAe+D,EAAUxmC,CAAE,GAC3B6J,IAAO24B,GAAcxiC,GAAIyiC,CAAY,GACrCiE,IAAW78B,MAAS,KACpBoxB,IAAepxB,MAAS;AAC9B,aAAO;AAAA,QACH,SAAS44B;AAAA,QACT,WAAWiE,IAAW,cAAczL,IAAe,WAAW;AAAA,QAC9D,OAAOyL,IAAW,iBAAiBzL,IAAe,aAAa;AAAA,MACnF;AAAA,IACY,CAAC,CAAC,IAENj6B,EAAKmH,GAAO,CAACjF,MAAO;AAChB,YAAMu/B,IAAev/B,EAAK,SACpBlD,IAAKyiC,EAAa,IAClB54B,IAAO24B,GAAcxiC,GAAIyiC,CAAY,GACrCkE,IAAYnmC,EAAeiiC,EAAa,MAAMv/B,EAAK,KAAK;AAC9D,OAAIu/B,EAAa,aAAa,UAAaqC,GAAqBrC,EAAa,UAAU54B,CAAI,MAAMi7B,GAAqB5hC,EAAK,SAAS,OAChIu/B,EAAa,WAAWv/B,EAAK,YAEjCujC,EAAQzmC,CAAE,IAAI;AACd,UAAIwf,IAAQ;AACZ,UAAIxf,KAAMukB,KAAUA,EAAOvkB,CAAE,EAAE,SAAS2mC;AACpC,QAAAnnB,IAAQ+E,EAAOvkB,CAAE;AAAA,WACd;AACH,cAAM4mC,IAAa1F,GAAS,SAASyF,CAAS;AAC9C,QAAAnnB,IAAQ,IAAIonB,EAAW;AAAA,UACnB,IAAA5mC;AAAA,UACA,MAAM2mC;AAAA,UACN,KAAK,KAAK;AAAA,UACV,OAAO;AAAA,QAC3B,CAAiB,GACDpiB,EAAO/E,EAAM,EAAE,IAAIA;AAAA,MACvB;AACA,MAAAA,EAAM,KAAKijB,GAAc1gC,CAAO;AAAA,IACpC,CAAC,GACDf,EAAKylC,GAAS,CAACI,GAAY7mC,MAAK;AAC5B,MAAK6mC,KACD,OAAOtiB,EAAOvkB,CAAE;AAAA,IAExB,CAAC,GACDgB,EAAKujB,GAAQ,CAAC/E,MAAQ;AAClB,MAAAsS,EAAQ,UAAU,MAAMtS,GAAOA,EAAM,OAAO,GAC5CsS,EAAQ,OAAO,MAAMtS,CAAK;AAAA,IAC9B,CAAC;AAAA,EACL;AAAA,EACH,kBAAkB;AACX,UAAMgD,IAAW,KAAK,WAChBgF,IAAU,KAAK,KAAK,SAAS,QAC7BD,IAAU/E,EAAS;AAEzB,QADAA,EAAS,KAAK,CAACnpB,GAAGM,MAAIN,EAAE,QAAQM,EAAE,KAAK,GACnC4tB,IAAUC,GAAS;AACnB,eAAQvuB,IAAIuuB,GAASvuB,IAAIsuB,GAAS,EAAEtuB;AAChC,aAAK,oBAAoBA,CAAC;AAE9B,MAAAupB,EAAS,OAAOgF,GAASD,IAAUC,CAAO;AAAA,IAC9C;AACA,SAAK,kBAAkBhF,EAAS,MAAM,CAAC,EAAE,KAAKuiB,GAAc,SAAS,OAAO,CAAC;AAAA,EACjF;AAAA,EACH,8BAA8B;AACvB,UAAM,EAAE,WAAWviB,GAAW,MAAM,EAAE,UAAAskB,EAAQ,EAAG,IAAM;AACvD,IAAItkB,EAAS,SAASskB,EAAS,UAC3B,OAAO,KAAK,SAEhBtkB,EAAS,QAAQ,CAACpZ,GAAMtC,MAAQ;AAC5B,MAAIggC,EAAS,OAAO,CAAC5sC,MAAIA,MAAMkP,EAAK,QAAQ,EAAE,WAAW,KACrD,KAAK,oBAAoBtC,CAAK;AAAA,IAEtC,CAAC;AAAA,EACL;AAAA,EACA,2BAA2B;AACvB,UAAMigC,IAAiB,CAAA,GACjBD,IAAW,KAAK,KAAK;AAC3B,QAAI7tC,GAAGqI;AAEP,SADA,KAAK,4BAA2B,GAC5BrI,IAAI,GAAGqI,IAAOwlC,EAAS,QAAQ7tC,IAAIqI,GAAMrI,KAAI;AAC7C,YAAMisB,IAAU4hB,EAAS7tC,CAAC;AAC1B,UAAImQ,IAAO,KAAK,eAAenQ,CAAC;AAChC,YAAMoG,IAAO6lB,EAAQ,QAAQ,KAAK,OAAO;AAWzC,UAVI9b,EAAK,QAAQA,EAAK,SAAS/J,MAC3B,KAAK,oBAAoBpG,CAAC,GAC1BmQ,IAAO,KAAK,eAAenQ,CAAC,IAEhCmQ,EAAK,OAAO/J,GACZ+J,EAAK,YAAY8b,EAAQ,aAAagd,GAAa7iC,GAAM,KAAK,OAAO,GACrE+J,EAAK,QAAQ8b,EAAQ,SAAS,GAC9B9b,EAAK,QAAQnQ,GACbmQ,EAAK,QAAQ,KAAK8b,EAAQ,OAC1B9b,EAAK,UAAU,KAAK,iBAAiBnQ,CAAC,GAClCmQ,EAAK;AACL,QAAAA,EAAK,WAAW,YAAYnQ,CAAC,GAC7BmQ,EAAK,WAAW,WAAU;AAAA,WACvB;AACH,cAAM49B,IAAkB9F,GAAS,cAAc7hC,CAAI,GAC7C,EAAE,oBAAA4nC,GAAqB,iBAAAC,EAAe,IAAMh8B,EAAS,SAAS7L,CAAI;AACxE,eAAO,OAAO2nC,GAAiB;AAAA,UAC3B,iBAAiB9F,GAAS,WAAWgG,CAAe;AAAA,UACpD,oBAAoBD,KAAsB/F,GAAS,WAAW+F,CAAkB;AAAA,QACpG,CAAiB,GACD79B,EAAK,aAAa,IAAI49B,EAAgB,MAAM/tC,CAAC,GAC7C8tC,EAAe,KAAK39B,EAAK,UAAU;AAAA,MACvC;AAAA,IACJ;AACA,gBAAK,gBAAe,GACb29B;AAAA,EACX;AAAA,EACH,iBAAiB;AACV,IAAA/lC,EAAK,KAAK,KAAK,UAAU,CAACkkB,GAASlG,MAAe;AAC9C,WAAK,eAAeA,CAAY,EAAE,WAAW,MAAK;AAAA,IACtD,GAAG,IAAI;AAAA,EACX;AAAA,EACH,QAAQ;AACD,SAAK,eAAc,GACnB,KAAK,cAAc,OAAO;AAAA,EAC9B;AAAA,EACA,OAAOzO,GAAM;AACT,UAAM+Q,IAAS,KAAK;AACpB,IAAAA,EAAO,OAAM;AACb,UAAMvf,IAAU,KAAK,WAAWuf,EAAO,eAAeA,EAAO,kBAAiB,GAAI,KAAK,YAAY,GAC7F6lB,IAAgB,KAAK,sBAAsB,CAACplC,EAAQ;AAK1D,QAJA,KAAK,cAAa,GAClB,KAAK,oBAAmB,GACxB,KAAK,qBAAoB,GACzB,KAAK,SAAS,WAAU,GACpB,KAAK,cAAc,gBAAgB;AAAA,MACnC,MAAAwO;AAAA,MACA,YAAY;AAAA,IACxB,CAAS,MAAM;AACH;AAEJ,UAAMw2B,IAAiB,KAAK,yBAAwB;AACpD,SAAK,cAAc,sBAAsB;AACzC,QAAIhT,IAAa;AACjB,aAAQ96B,IAAI,GAAGqI,IAAO,KAAK,KAAK,SAAS,QAAQrI,IAAIqI,GAAMrI,KAAI;AAC3D,YAAM,EAAE,YAAAgrB,EAAU,IAAM,KAAK,eAAehrB,CAAC,GACvC+wB,IAAQ,CAACmd,KAAiBJ,EAAe,QAAQ9iB,CAAU,MAAM;AACvE,MAAAA,EAAW,sBAAsB+F,CAAK,GACtC+J,IAAa,KAAK,IAAI,CAAC9P,EAAW,eAAc,GAAI8P,CAAU;AAAA,IAClE;AACA,IAAAA,IAAa,KAAK,cAAchyB,EAAQ,OAAO,cAAcgyB,IAAa,GAC1E,KAAK,cAAcA,CAAU,GACxBoT,KACDnmC,EAAK+lC,GAAgB,CAAC9iB,MAAa;AAC/B,MAAAA,EAAW,MAAK;AAAA,IACpB,CAAC,GAEL,KAAK,gBAAgB1T,CAAI,GACzB,KAAK,cAAc,eAAe;AAAA,MAC9B,MAAAA;AAAA,IACZ,CAAS,GACD,KAAK,QAAQ,KAAKw0B,GAAc,KAAK,MAAM,CAAC;AAC5C,UAAM,EAAE,SAAAqC,GAAU,YAAAC,EAAU,IAAM;AAClC,IAAIA,IACA,KAAK,cAAcA,GAAY,EAAI,IAC5BD,EAAQ,UACf,KAAK,mBAAmBA,GAASA,GAAS,EAAI,GAElD,KAAK,OAAM;AAAA,EACf;AAAA,EACH,gBAAgB;AACT,IAAApmC,EAAK,KAAK,QAAQ,CAACwe,MAAQ;AACvB,MAAAsS,EAAQ,UAAU,MAAMtS,CAAK;AAAA,IACjC,CAAC,GACD,KAAK,oBAAmB,GACxB,KAAK,oBAAmB;AAAA,EAC5B;AAAA,EACH,sBAAsB;AACf,UAAMzd,IAAU,KAAK,SACfulC,IAAiB,IAAI,IAAI,OAAO,KAAK,KAAK,UAAU,CAAC,GACrDC,IAAY,IAAI,IAAIxlC,EAAQ,MAAM;AACxC,KAAI,CAACkB,GAAUqkC,GAAgBC,CAAS,KAAK,CAAC,CAAC,KAAK,yBAAyBxlC,EAAQ,gBACjF,KAAK,aAAY,GACjB,KAAK,WAAU;AAAA,EAEvB;AAAA,EACH,uBAAuB;AAChB,UAAM,EAAE,gBAAAylC,EAAc,IAAM,MACtBC,IAAU,KAAK,uBAAsB,KAAM,CAAA;AACjD,eAAW,EAAE,QAAA9/B,GAAS,OAAA1B,GAAQ,OAAAuD,EAAK,KAAOi+B,GAAQ;AAC9C,YAAMhgB,IAAO9f,MAAW,oBAAoB,CAAC6B,IAAQA;AACrD,MAAA+7B,GAAgBiC,GAAgBvhC,GAAOwhB,CAAI;AAAA,IAC/C;AAAA,EACJ;AAAA,EACH,yBAAyB;AAClB,UAAMigB,IAAe,KAAK;AAC1B,QAAI,CAACA,KAAgB,CAACA,EAAa;AAC/B;AAEJ,SAAK,eAAe,CAAA;AACpB,UAAMC,IAAe,KAAK,KAAK,SAAS,QAClCC,IAAU,CAAChL,MAAM,IAAI,IAAI8K,EAAa,OAAO,CAACvuC,MAAIA,EAAE,CAAC,MAAMyjC,CAAG,EAAE,IAAI,CAACzjC,GAAGF,MAAIA,IAAI,MAAME,EAAE,OAAO,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,GAC5G0uC,IAAYD,EAAQ,CAAC;AAC3B,aAAQ3uC,IAAI,GAAGA,IAAI0uC,GAAc1uC;AAC7B,UAAI,CAACgK,GAAU4kC,GAAWD,EAAQ3uC,CAAC,CAAC;AAChC;AAGR,WAAO,MAAM,KAAK4uC,CAAS,EAAE,IAAI,CAAC1uC,MAAIA,EAAE,MAAM,GAAG,CAAC,EAAE,IAAI,CAACE,OAAK;AAAA,MACtD,QAAQA,EAAE,CAAC;AAAA,MACX,OAAO,CAACA,EAAE,CAAC;AAAA,MACX,OAAO,CAACA,EAAE,CAAC;AAAA,IAC3B,EAAc;AAAA,EACV;AAAA,EACH,cAAc06B,GAAY;AACnB,QAAI,KAAK,cAAc,gBAAgB;AAAA,MACnC,YAAY;AAAA,IACxB,CAAS,MAAM;AACH;AAEJ,IAAAjC,EAAQ,OAAO,MAAM,KAAK,OAAO,KAAK,QAAQiC,CAAU;AACxD,UAAM/jB,IAAO,KAAK,WACZ83B,IAAS93B,EAAK,SAAS,KAAKA,EAAK,UAAU;AACjD,SAAK,UAAU,CAAA,GACfhP,EAAK,KAAK,OAAO,CAACkZ,MAAM;AACpB,MAAI4tB,KAAU5tB,EAAI,aAAa,gBAG3BA,EAAI,aACJA,EAAI,UAAS,GAEjB,KAAK,QAAQ,KAAK,GAAGA,EAAI,QAAO,CAAE;AAAA,IACtC,GAAG,IAAI,GACP,KAAK,QAAQ,QAAQ,CAAChX,GAAM4D,MAAQ;AAChC,MAAA5D,EAAK,OAAO4D;AAAA,IAChB,CAAC,GACD,KAAK,cAAc,aAAa;AAAA,EACpC;AAAA,EACH,gBAAgByJ,GAAM;AACf,QAAI,KAAK,cAAc,wBAAwB;AAAA,MAC3C,MAAAA;AAAA,MACA,YAAY;AAAA,IACxB,CAAS,MAAM,IAGP;AAAA,eAAQtX,IAAI,GAAGqI,IAAO,KAAK,KAAK,SAAS,QAAQrI,IAAIqI,GAAM,EAAErI;AACzD,aAAK,eAAeA,CAAC,EAAE,WAAW,UAAS;AAE/C,eAAQA,IAAI,GAAGqI,IAAO,KAAK,KAAK,SAAS,QAAQrI,IAAIqI,GAAM,EAAErI;AACzD,aAAK,eAAeA,GAAG+J,GAAWuN,CAAI,IAAIA,EAAK;AAAA,UAC3C,cAActX;AAAA,QAC9B,CAAa,IAAIsX,CAAI;AAEb,WAAK,cAAc,uBAAuB;AAAA,QACtC,MAAAA;AAAA,MACZ,CAAS;AAAA;AAAA,EACL;AAAA,EACH,eAAezJ,GAAOyJ,GAAM;AACrB,UAAMnH,IAAO,KAAK,eAAetC,CAAK,GAChChG,IAAO;AAAA,MACT,MAAAsI;AAAA,MACA,OAAAtC;AAAA,MACA,MAAAyJ;AAAA,MACA,YAAY;AAAA,IACxB;AACQ,IAAI,KAAK,cAAc,uBAAuBzP,CAAI,MAAM,OAGxDsI,EAAK,WAAW,QAAQmH,CAAI,GAC5BzP,EAAK,aAAa,IAClB,KAAK,cAAc,sBAAsBA,CAAI;AAAA,EACjD;AAAA,EACA,SAAS;AACL,IAAI,KAAK,cAAc,gBAAgB;AAAA,MACnC,YAAY;AAAA,IACxB,CAAS,MAAM,OAGH0f,GAAS,IAAI,IAAI,IACb,KAAK,YAAY,CAACA,GAAS,QAAQ,IAAI,KACvCA,GAAS,MAAM,IAAI,KAGvB,KAAK,KAAI,GACT0kB,GAAqB;AAAA,MACjB,OAAO;AAAA,IACvB,CAAa;AAAA,EAET;AAAA,EACA,OAAO;AACH,QAAIjsC;AACJ,QAAI,KAAK,mBAAmB;AACxB,YAAM,EAAE,OAAA6V,GAAQ,QAAA2L,EAAM,IAAM,KAAK;AACjC,WAAK,oBAAoB,MACzB,KAAK,QAAQ3L,GAAO2L,CAAM;AAAA,IAC9B;AAKA,QAJA,KAAK,MAAK,GACN,KAAK,SAAS,KAAK,KAAK,UAAU,KAGlC,KAAK,cAAc,cAAc;AAAA,MACjC,YAAY;AAAA,IACxB,CAAS,MAAM;AACH;AAEJ,UAAMstB,IAAS,KAAK;AACpB,SAAI9uC,IAAI,GAAGA,IAAI8uC,EAAO,UAAUA,EAAO9uC,CAAC,EAAE,KAAK,GAAG,EAAEA;AAChD,MAAA8uC,EAAO9uC,CAAC,EAAE,KAAK,KAAK,SAAS;AAGjC,SADA,KAAK,cAAa,GACZA,IAAI8uC,EAAO,QAAQ,EAAE9uC;AACvB,MAAA8uC,EAAO9uC,CAAC,EAAE,KAAK,KAAK,SAAS;AAEjC,SAAK,cAAc,WAAW;AAAA,EAClC;AAAA,EACH,uBAAuBspB,GAAe;AAC/B,UAAMC,IAAW,KAAK,iBAChBle,IAAS,CAAA;AACf,QAAIrL,GAAGqI;AACP,SAAIrI,IAAI,GAAGqI,IAAOkhB,EAAS,QAAQvpB,IAAIqI,GAAM,EAAErI,GAAE;AAC7C,YAAMmQ,IAAOoZ,EAASvpB,CAAC;AACvB,OAAI,CAACspB,KAAiBnZ,EAAK,YACvB9E,EAAO,KAAK8E,CAAI;AAAA,IAExB;AACA,WAAO9E;AAAA,EACX;AAAA,EACH,+BAA+B;AACxB,WAAO,KAAK,uBAAuB,EAAI;AAAA,EAC3C;AAAA,EACH,gBAAgB;AACT,QAAI,KAAK,cAAc,sBAAsB;AAAA,MACzC,YAAY;AAAA,IACxB,CAAS,MAAM;AACH;AAEJ,UAAMke,IAAW,KAAK,6BAA4B;AAClD,aAAQvpB,IAAIupB,EAAS,SAAS,GAAGvpB,KAAK,GAAG,EAAEA;AACvC,WAAK,aAAaupB,EAASvpB,CAAC,CAAC;AAEjC,SAAK,cAAc,mBAAmB;AAAA,EAC1C;AAAA,EACH,aAAamQ,GAAM;AACZ,UAAM+D,IAAM,KAAK,KACXrM,IAAO;AAAA,MACT,MAAAsI;AAAA,MACA,OAAOA,EAAK;AAAA,MACZ,YAAY;AAAA,IACxB,GACcyW,IAAOD,GAAmB,MAAMxW,CAAI;AAC1C,IAAI,KAAK,cAAc,qBAAqBtI,CAAI,MAAM,OAGlD+e,KACA3P,GAAS/C,GAAK0S,CAAI,GAEtBzW,EAAK,WAAW,KAAI,GAChByW,KACA1P,GAAWhD,CAAG,GAElBrM,EAAK,aAAa,IAClB,KAAK,cAAc,oBAAoBA,CAAI;AAAA,EAC/C;AAAA,EACH,cAAcmJ,GAAO;AACd,WAAO8F,GAAe9F,GAAO,KAAK,WAAW,KAAK,WAAW;AAAA,EACjE;AAAA,EACA,0BAA0BtR,GAAG4X,GAAMxO,GAASwuB,GAAkB;AAC1D,UAAM5oB,IAASypB,GAAY,MAAM7gB,CAAI;AACrC,WAAI,OAAO5I,KAAW,aACXA,EAAO,MAAMhP,GAAGoJ,GAASwuB,CAAgB,IAE7C,CAAA;AAAA,EACX;AAAA,EACA,eAAevR,GAAc;AACzB,UAAMkG,IAAU,KAAK,KAAK,SAASlG,CAAY,GACzCwD,IAAW,KAAK;AACtB,QAAIpZ,IAAOoZ,EAAS,OAAO,CAACtoB,MAAIA,KAAKA,EAAE,aAAagrB,CAAO,EAAE,IAAG;AAChE,WAAK9b,MACDA,IAAO;AAAA,MACH,MAAM;AAAA,MACN,MAAM,CAAA;AAAA,MACN,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO8b,KAAWA,EAAQ,SAAS;AAAA,MACnC,OAAOlG;AAAA,MACP,UAAUkG;AAAA,MACV,SAAS,CAAA;AAAA,MACT,SAAS;AAAA,IACzB,GACY1C,EAAS,KAAKpZ,CAAI,IAEfA;AAAA,EACX;AAAA,EACA,aAAa;AACT,WAAO,KAAK,aAAa,KAAK,WAAW+J,GAAc,MAAM;AAAA,MACzD,OAAO;AAAA,MACP,MAAM;AAAA,IAClB,CAAS;AAAA,EACL;AAAA,EACA,yBAAyB;AACrB,WAAO,KAAK,6BAA4B,EAAG;AAAA,EAC/C;AAAA,EACA,iBAAiB6L,GAAc;AAC3B,UAAMkG,IAAU,KAAK,KAAK,SAASlG,CAAY;AAC/C,QAAI,CAACkG;AACD,aAAO;AAEX,UAAM9b,IAAO,KAAK,eAAe4V,CAAY;AAC7C,WAAO,OAAO5V,EAAK,UAAW,YAAY,CAACA,EAAK,SAAS,CAAC8b,EAAQ;AAAA,EACtE;AAAA,EACA,qBAAqBlG,GAAcgpB,GAAS;AACxC,UAAM5+B,IAAO,KAAK,eAAe4V,CAAY;AAC7C,IAAA5V,EAAK,SAAS,CAAC4+B;AAAA,EACnB;AAAA,EACA,qBAAqBlhC,GAAO;AACxB,SAAK,eAAeA,CAAK,IAAI,CAAC,KAAK,eAAeA,CAAK;AAAA,EAC3D;AAAA,EACA,kBAAkBA,GAAO;AACrB,WAAO,CAAC,KAAK,eAAeA,CAAK;AAAA,EACrC;AAAA,EACH,kBAAkBkY,GAAcoL,GAAW4d,GAAS;AAC7C,UAAMz3B,IAAOy3B,IAAU,SAAS,QAC1B5+B,IAAO,KAAK,eAAe4V,CAAY,GACvCe,IAAQ3W,EAAK,WAAW,mBAAmB,QAAWmH,CAAI;AAChE,IAAIxN,GAAQqnB,CAAS,KACjBhhB,EAAK,KAAKghB,CAAS,EAAE,SAAS,CAAC4d,GAC/B,KAAK,OAAM,MAEX,KAAK,qBAAqBhpB,GAAcgpB,CAAO,GAC/CjoB,EAAM,OAAO3W,GAAM;AAAA,MACf,SAAA4+B;AAAA,IAChB,CAAa,GACD,KAAK,OAAO,CAAC76B,MAAMA,EAAI,iBAAiB6R,IAAezO,IAAO,MAAS;AAAA,EAE/E;AAAA,EACA,KAAKyO,GAAcoL,GAAW;AAC1B,SAAK,kBAAkBpL,GAAcoL,GAAW,EAAK;AAAA,EACzD;AAAA,EACA,KAAKpL,GAAcoL,GAAW;AAC1B,SAAK,kBAAkBpL,GAAcoL,GAAW,EAAI;AAAA,EACxD;AAAA,EACH,oBAAoBpL,GAAc;AAC3B,UAAM5V,IAAO,KAAK,UAAU4V,CAAY;AACxC,IAAI5V,KAAQA,EAAK,cACbA,EAAK,WAAW,SAAQ,GAE5B,OAAO,KAAK,UAAU4V,CAAY;AAAA,EACtC;AAAA,EACA,QAAQ;AACJ,QAAI/lB,GAAGqI;AAGP,SAFA,KAAK,KAAI,GACTkf,GAAS,OAAO,IAAI,GAChBvnB,IAAI,GAAGqI,IAAO,KAAK,KAAK,SAAS,QAAQrI,IAAIqI,GAAM,EAAErI;AACrD,WAAK,oBAAoBA,CAAC;AAAA,EAElC;AAAA,EACA,UAAU;AACN,SAAK,cAAc,eAAe;AAClC,UAAM,EAAE,QAAAiW,GAAS,KAAA/B,EAAG,IAAM;AAC1B,SAAK,MAAK,GACV,KAAK,OAAO,WAAU,GAClB+B,MACA,KAAK,aAAY,GACjBD,GAAYC,GAAQ/B,CAAG,GACvB,KAAK,SAAS,eAAeA,CAAG,GAChC,KAAK,SAAS,MACd,KAAK,MAAM,OAEf,OAAOk4B,GAAU,KAAK,EAAE,GACxB,KAAK,cAAc,cAAc;AAAA,EACrC;AAAA,EACA,iBAAiBvkC,GAAM;AACnB,WAAO,KAAK,OAAO,UAAU,GAAGA,CAAI;AAAA,EACxC;AAAA,EACH,aAAa;AACN,SAAK,eAAc,GACf,KAAK,QAAQ,aACb,KAAK,qBAAoB,IAEzB,KAAK,WAAW;AAAA,EAExB;AAAA,EACH,iBAAiB;AACV,UAAMmH,IAAY,KAAK,YACjBggC,IAAW,KAAK,UAChBC,IAAO,CAAC7oC,GAAMqI,MAAW;AAC3B,MAAAugC,EAAS,iBAAiB,MAAM5oC,GAAMqI,CAAQ,GAC9CO,EAAU5I,CAAI,IAAIqI;AAAA,IACtB,GACMA,IAAW,CAAC/O,GAAGuB,GAAGN,MAAI;AACxB,MAAAjB,EAAE,UAAUuB,GACZvB,EAAE,UAAUiB,GACZ,KAAK,cAAcjB,CAAC;AAAA,IACxB;AACA,IAAAqI,EAAK,KAAK,QAAQ,QAAQ,CAAC3B,MAAO6oC,EAAK7oC,GAAMqI,CAAQ,CAAC;AAAA,EAC1D;AAAA,EACH,uBAAuB;AAChB,IAAK,KAAK,yBACN,KAAK,uBAAuB,CAAA;AAEhC,UAAMO,IAAY,KAAK,sBACjBggC,IAAW,KAAK,UAChBC,IAAO,CAAC7oC,GAAMqI,MAAW;AAC3B,MAAAugC,EAAS,iBAAiB,MAAM5oC,GAAMqI,CAAQ,GAC9CO,EAAU5I,CAAI,IAAIqI;AAAA,IACtB,GACMygC,IAAU,CAAC9oC,GAAMqI,MAAW;AAC9B,MAAIO,EAAU5I,CAAI,MACd4oC,EAAS,oBAAoB,MAAM5oC,GAAMqI,CAAQ,GACjD,OAAOO,EAAU5I,CAAI;AAAA,IAE7B,GACMqI,IAAW,CAACoH,GAAO2L,MAAS;AAC9B,MAAI,KAAK,UACL,KAAK,OAAO3L,GAAO2L,CAAM;AAAA,IAEjC;AACA,QAAI2tB;AACJ,UAAMC,IAAW,MAAI;AACjB,MAAAF,EAAQ,UAAUE,CAAQ,GAC1B,KAAK,WAAW,IAChB,KAAK,OAAM,GACXH,EAAK,UAAUxgC,CAAQ,GACvBwgC,EAAK,UAAUE,CAAQ;AAAA,IAC3B;AACA,IAAAA,IAAW,MAAI;AACX,WAAK,WAAW,IAChBD,EAAQ,UAAUzgC,CAAQ,GAC1B,KAAK,MAAK,GACV,KAAK,QAAQ,GAAG,CAAC,GACjBwgC,EAAK,UAAUG,CAAQ;AAAA,IAC3B,GACIJ,EAAS,WAAW,KAAK,MAAM,IAC/BI,EAAQ,IAERD,EAAQ;AAAA,EAEhB;AAAA,EACH,eAAe;AACR,IAAApnC,EAAK,KAAK,YAAY,CAAC0G,GAAUrI,MAAO;AACpC,WAAK,SAAS,oBAAoB,MAAMA,GAAMqI,CAAQ;AAAA,IAC1D,CAAC,GACD,KAAK,aAAa,CAAA,GAClB1G,EAAK,KAAK,sBAAsB,CAAC0G,GAAUrI,MAAO;AAC9C,WAAK,SAAS,oBAAoB,MAAMA,GAAMqI,CAAQ;AAAA,IAC1D,CAAC,GACD,KAAK,uBAAuB;AAAA,EAChC;AAAA,EACA,iBAAiBS,GAAOoI,GAAM+3B,GAAS;AACnC,UAAM5zB,IAAS4zB,IAAU,QAAQ;AACjC,QAAIl/B,GAAMlG,GAAMjK,GAAGqI;AAKnB,SAJIiP,MAAS,cACTnH,IAAO,KAAK,eAAejB,EAAM,CAAC,EAAE,YAAY,GAChDiB,EAAK,WAAW,MAAMsL,IAAS,mBAAmB,EAAC,IAEnDzb,IAAI,GAAGqI,IAAO6G,EAAM,QAAQlP,IAAIqI,GAAM,EAAErI,GAAE;AAC1C,MAAAiK,IAAOiF,EAAMlP,CAAC;AACd,YAAMgrB,IAAa/gB,KAAQ,KAAK,eAAeA,EAAK,YAAY,EAAE;AAClE,MAAI+gB,KACAA,EAAWvP,IAAS,YAAY,EAAExR,EAAK,SAASA,EAAK,cAAcA,EAAK,KAAK;AAAA,IAErF;AAAA,EACJ;AAAA,EACH,oBAAoB;AACb,WAAO,KAAK,WAAW,CAAA;AAAA,EAC3B;AAAA,EACH,kBAAkBqlC,GAAgB;AAC3B,UAAMC,IAAa,KAAK,WAAW,CAAA,GAC7B5hB,IAAS2hB,EAAe,IAAI,CAAC,EAAE,cAAAvpB,GAAe,OAAAlY,QAAW;AAC3D,YAAMsC,IAAO,KAAK,eAAe4V,CAAY;AAC7C,UAAI,CAAC5V;AACD,cAAM,IAAI,MAAM,+BAA+B4V,CAAY;AAE/D,aAAO;AAAA,QACH,cAAAA;AAAA,QACA,SAAS5V,EAAK,KAAKtC,CAAK;AAAA,QACxB,OAAAA;AAAA,MAChB;AAAA,IACQ,CAAC;AAED,IADgB,CAAC3F,GAAeylB,GAAQ4hB,CAAU,MAE9C,KAAK,UAAU5hB,GACf,KAAK,aAAa,MAClB,KAAK,mBAAmBA,GAAQ4hB,CAAU;AAAA,EAElD;AAAA,EACH,cAAclH,GAAMxgC,GAAMygC,GAAQ;AAC3B,WAAO,KAAK,SAAS,OAAO,MAAMD,GAAMxgC,GAAMygC,CAAM;AAAA,EACxD;AAAA,EACH,gBAAgBkH,GAAU;AACnB,WAAO,KAAK,SAAS,OAAO,OAAO,CAAClvC,MAAIA,EAAE,OAAO,OAAOkvC,CAAQ,EAAE,WAAW;AAAA,EACjF;AAAA,EACH,mBAAmB7hB,GAAQ4hB,GAAYE,GAAQ;AACxC,UAAMC,IAAe,KAAK,QAAQ,OAC5BzQ,IAAO,CAAC7+B,GAAGM,MAAIN,EAAE,OAAO,CAACa,MAAI,CAACP,EAAE,KAAK,CAACC,MAAIM,EAAE,iBAAiBN,EAAE,gBAAgBM,EAAE,UAAUN,EAAE,KAAK,CAAC,GACnGgvC,IAAc1Q,EAAKsQ,GAAY5hB,CAAM,GACrCiiB,IAAYH,IAAS9hB,IAASsR,EAAKtR,GAAQ4hB,CAAU;AAC3D,IAAII,EAAY,UACZ,KAAK,iBAAiBA,GAAaD,EAAa,MAAM,EAAK,GAE3DE,EAAU,UAAUF,EAAa,QACjC,KAAK,iBAAiBE,GAAWF,EAAa,MAAM,EAAI;AAAA,EAEhE;AAAA,EACH,cAAchwC,GAAG+vC,GAAQ;AAClB,UAAM5nC,IAAO;AAAA,MACT,OAAOnI;AAAA,MACP,QAAA+vC;AAAA,MACA,YAAY;AAAA,MACZ,aAAa,KAAK,cAAc/vC,CAAC;AAAA,IAC7C,GACcmwC,IAAc,CAACrH,OAAUA,EAAO,QAAQ,UAAU,KAAK,QAAQ,QAAQ,SAAS9oC,EAAE,OAAO,IAAI;AACnG,QAAI,KAAK,cAAc,eAAemI,GAAMgoC,CAAW,MAAM;AACzD;AAEJ,UAAMt+B,IAAU,KAAK,aAAa7R,GAAG+vC,GAAQ5nC,EAAK,WAAW;AAC7D,WAAAA,EAAK,aAAa,IAClB,KAAK,cAAc,cAAcA,GAAMgoC,CAAW,IAC9Ct+B,KAAW1J,EAAK,YAChB,KAAK,OAAM,GAER;AAAA,EACX;AAAA,EACH,aAAanI,GAAG+vC,GAAQ/C,GAAa;AAC9B,UAAM,EAAE,SAAS6C,IAAa,CAAA,GAAK,SAAAzmC,EAAO,IAAM,MAC1CwuB,IAAmBmY,GACnB9hB,IAAS,KAAK,mBAAmBjuB,GAAG6vC,GAAY7C,GAAapV,CAAgB,GAC7EqV,IAAUziC,GAAcxK,CAAC,GACzB+sC,IAAYD,GAAmB9sC,GAAG,KAAK,YAAYgtC,GAAaC,CAAO;AAC7E,IAAID,MACA,KAAK,aAAa,MAClB/kC,EAASmB,EAAQ,SAAS;AAAA,MACtBpJ;AAAA,MACAiuB;AAAA,MACA;AAAA,IAChB,GAAe,IAAI,GACHgf,KACAhlC,EAASmB,EAAQ,SAAS;AAAA,MACtBpJ;AAAA,MACAiuB;AAAA,MACA;AAAA,IACpB,GAAmB,IAAI;AAGf,UAAMpc,IAAU,CAACrJ,GAAeylB,GAAQ4hB,CAAU;AAClD,YAAIh+B,KAAWk+B,OACX,KAAK,UAAU9hB,GACf,KAAK,mBAAmBA,GAAQ4hB,GAAYE,CAAM,IAEtD,KAAK,aAAahD,GACXl7B;AAAA,EACX;AAAA,EACH,mBAAmB7R,GAAG6vC,GAAY7C,GAAapV,GAAkB;AAC1D,QAAI53B,EAAE,SAAS;AACX,aAAO,CAAA;AAEX,QAAI,CAACgtC;AACD,aAAO6C;AAEX,UAAMG,IAAe,KAAK,QAAQ;AAClC,WAAO,KAAK,0BAA0BhwC,GAAGgwC,EAAa,MAAMA,GAAcpY,CAAgB;AAAA,EAC9F;AACJ;AACA,SAASuV,KAAoB;AACzB,SAAO9kC,EAAK6kC,GAAM,WAAW,CAACj3B,MAAQA,EAAM,SAAS,YAAY;AACrE;AAEA,SAASm6B,GAAS57B,GAAKkM,GAAS4S,GAAU;AACtC,QAAM,EAAE,YAAAD,GAAa,GAAA9xB,GAAI,GAAAN,GAAI,aAAA2zB,GAAc,aAAAC,GAAc,SAAAzrB,EAAO,IAAMsX,GAChE,EAAE,aAAA2vB,GAAc,iBAAAC,EAAe,IAAMlnC,GACrCmnC,IAAiB,KAAK,IAAIF,IAAczb,GAAaxnB,EAAgBimB,IAAaC,CAAQ,CAAC;AAGjG,MAFA9e,EAAI,UAAS,GACbA,EAAI,IAAIjT,GAAGN,GAAG2zB,IAAcyb,IAAc,GAAGhd,IAAakd,IAAiB,GAAGjd,IAAWid,IAAiB,CAAC,GACvG1b,IAAc,GAAG;AACjB,UAAM2b,IAAiB,KAAK,IAAIH,IAAcxb,GAAaznB,EAAgBimB,IAAaC,CAAQ,CAAC;AACjG,IAAA9e,EAAI,IAAIjT,GAAGN,GAAG4zB,IAAcwb,IAAc,GAAG/c,IAAWkd,IAAiB,GAAGnd,IAAamd,IAAiB,GAAG,EAAI;AAAA,EACrH,OAAO;AACH,UAAMC,IAAY,KAAK,IAAIJ,IAAc,GAAGzb,IAAcxnB,EAAgBimB,IAAaC,CAAQ,CAAC;AAChG,QAAIgd,MAAoB;AACpB,MAAA97B,EAAI,IAAIjT,GAAGN,GAAGwvC,GAAWnd,IAAW7oB,IAAK,GAAG4oB,IAAa5oB,IAAK,GAAG,EAAI;AAAA,aAC9D6lC,MAAoB,SAAS;AACpC,YAAMlwC,IAAI,IAAIqwC,IAAYA,GACpBhd,IAAO,CAACrzB,IAAI,KAAK,IAAIkzB,IAAW7oB,IAAK,CAAC,IAAIlJ,GAC1CmyB,IAAO,CAACtzB,IAAI,KAAK,IAAIkzB,IAAW7oB,IAAK,CAAC,IAAIxJ,GAC1CsyB,IAASnzB,IAAI,KAAK,IAAIizB,IAAa5oB,IAAK,CAAC,IAAIlJ,GAC7CiyB,IAASpzB,IAAI,KAAK,IAAIizB,IAAa5oB,IAAK,CAAC,IAAIxJ;AACnD,MAAAuT,EAAI,OAAOif,GAAMC,CAAI,GACrBlf,EAAI,OAAO+e,GAAQC,CAAM;AAAA,IAC7B;AAAA,EACJ;AACA,EAAAhf,EAAI,UAAS,GACbA,EAAI,OAAO,GAAG,CAAC,GACfA,EAAI,KAAK,GAAG,GAAGA,EAAI,OAAO,OAAOA,EAAI,OAAO,MAAM,GAClDA,EAAI,KAAK,SAAS;AACtB;AACA,SAASk8B,GAAQl8B,GAAKkM,GAAS4S,GAAU;AACrC,QAAM,EAAE,YAAAD,GAAa,aAAAsd,GAAc,GAAApvC,GAAI,GAAAN,GAAI,aAAA2zB,GAAc,aAAAC,EAAW,IAAMnU;AAC1E,MAAIkwB,IAAcD,IAAc/b;AAGhC,EAAApgB,EAAI,UAAS,GACbA,EAAI,IAAIjT,GAAGN,GAAG2zB,GAAavB,IAAaud,GAAatd,IAAWsd,CAAW,GACvE/b,IAAc8b,KACdC,IAAcD,IAAc9b,GAC5BrgB,EAAI,IAAIjT,GAAGN,GAAG4zB,GAAavB,IAAWsd,GAAavd,IAAaud,GAAa,EAAI,KAEjFp8B,EAAI,IAAIjT,GAAGN,GAAG0vC,GAAard,IAAWxoB,GAASuoB,IAAavoB,CAAO,GAEvE0J,EAAI,UAAS,GACbA,EAAI,KAAI;AACZ;AACA,SAASq8B,GAAgBtpC,GAAO;AAC5B,SAAO6R,GAAkB7R,GAAO;AAAA,IAC5B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACR,CAAK;AACL;AAGI,SAASupC,GAAoB3b,GAAKN,GAAaD,GAAamc,GAAY;AACxE,QAAM7wC,IAAI2wC,GAAgB1b,EAAI,QAAQ,YAAY,GAC5C6b,KAAiBpc,IAAcC,KAAe,GAC9Coc,IAAa,KAAK,IAAID,GAAeD,IAAalc,IAAc,CAAC,GAQjEqc,IAAoB,CAAChqC,MAAM;AAC7B,UAAMiqC,KAAiBvc,IAAc,KAAK,IAAIoc,GAAe9pC,CAAG,KAAK6pC,IAAa;AAClF,WAAOljC,EAAY3G,GAAK,GAAG,KAAK,IAAI8pC,GAAeG,CAAa,CAAC;AAAA,EACrE;AACA,SAAO;AAAA,IACH,YAAYD,EAAkBhxC,EAAE,UAAU;AAAA,IAC1C,UAAUgxC,EAAkBhxC,EAAE,QAAQ;AAAA,IACtC,YAAY2N,EAAY3N,EAAE,YAAY,GAAG+wC,CAAU;AAAA,IACnD,UAAUpjC,EAAY3N,EAAE,UAAU,GAAG+wC,CAAU;AAAA,EACvD;AACA;AAGI,SAASG,GAAWhxC,GAAGixC,GAAO9vC,GAAGN,GAAG;AACpC,SAAO;AAAA,IACH,GAAGM,IAAInB,IAAI,KAAK,IAAIixC,CAAK;AAAA,IACzB,GAAGpwC,IAAIb,IAAI,KAAK,IAAIixC,CAAK;AAAA,EACjC;AACA;AAcI,SAASC,GAAQ98B,GAAKkM,GAASoe,GAAQtK,GAASjnB,GAAKgkC,GAAU;AAC/D,QAAM,EAAE,GAAAhwC,GAAI,GAAAN,GAAI,YAAYqM,GAAQ,aAAAqjC,GAAc,aAAaa,EAAM,IAAM9wB,GACrEkU,IAAc,KAAK,IAAIlU,EAAQ,cAAc8T,IAAUsK,IAAS6R,GAAa,CAAC,GAC9E9b,IAAc2c,IAAS,IAAIA,IAAShd,IAAUsK,IAAS6R,IAAc;AAC3E,MAAIc,IAAgB;AACpB,QAAMjuC,IAAQ+J,IAAMD;AACpB,MAAIknB,GAAS;AAIT,UAAMkd,IAAuBF,IAAS,IAAIA,IAAShd,IAAU,GACvDmd,IAAuB/c,IAAc,IAAIA,IAAcJ,IAAU,GACjEod,KAAsBF,IAAuBC,KAAwB,GACrEE,KAAgBD,MAAuB,IAAIpuC,IAAQouC,KAAsBA,IAAqBpd,KAAWhxB;AAC/G,IAAAiuC,KAAiBjuC,IAAQquC,MAAiB;AAAA,EAC9C;AACA,QAAMC,IAAO,KAAK,IAAI,MAAOtuC,IAAQoxB,IAAckK,IAASr0B,CAAE,IAAImqB,GAC5Dmd,KAAevuC,IAAQsuC,KAAQ,GAC/Bze,IAAa/lB,IAAQykC,IAAcN,GACnCne,IAAW/lB,IAAMwkC,IAAcN,GAC/B,EAAE,YAAAO,GAAa,UAAAC,GAAW,YAAAC,GAAa,UAAAC,EAAQ,IAAMrB,GAAoBpwB,GAASmU,GAAaD,GAAatB,IAAWD,CAAU,GACjI+e,IAA2Bxd,IAAcod,GACzCK,IAAyBzd,IAAcqd,GACvCK,IAA0Bjf,IAAa2e,IAAaI,GACpDG,IAAwBjf,IAAW2e,IAAWI,GAC9CG,IAA2B3d,IAAcqd,GACzCO,IAAyB5d,IAAcsd,GACvCO,IAA0Brf,IAAa6e,IAAaM,GACpDG,KAAwBrf,IAAW6e,IAAWM;AAEpD,MADAj+B,EAAI,UAAS,GACT+8B,GAAU;AAEV,UAAMqB,KAAyBN,IAA0BC,KAAyB;AAIlF,QAHA/9B,EAAI,IAAIjT,GAAGN,GAAG2zB,GAAa0d,GAAyBM,CAAqB,GACzEp+B,EAAI,IAAIjT,GAAGN,GAAG2zB,GAAage,GAAuBL,CAAqB,GAEnEN,IAAW,GAAG;AACd,YAAMY,IAAUzB,GAAWiB,GAAwBE,GAAuBhxC,GAAGN,CAAC;AAC9E,MAAAuT,EAAI,IAAIq+B,EAAQ,GAAGA,EAAQ,GAAGZ,GAAUM,GAAuBjf,IAAWxoB,CAAO;AAAA,IACrF;AAEA,UAAMgoC,IAAK1B,GAAWqB,GAAwBnf,GAAU/xB,GAAGN,CAAC;AAG5D,QAFAuT,EAAI,OAAOs+B,EAAG,GAAGA,EAAG,CAAC,GAEjBX,IAAW,GAAG;AACd,YAAMU,IAAUzB,GAAWqB,GAAwBE,IAAuBpxC,GAAGN,CAAC;AAC9E,MAAAuT,EAAI,IAAIq+B,EAAQ,GAAGA,EAAQ,GAAGV,GAAU7e,IAAWxoB,GAAS6nC,KAAwB,KAAK,EAAE;AAAA,IAC/F;AAEA,UAAMI,KAAyBzf,IAAW6e,IAAWtd,KAAexB,IAAa6e,IAAard,MAAgB;AAI9G,QAHArgB,EAAI,IAAIjT,GAAGN,GAAG4zB,GAAavB,IAAW6e,IAAWtd,GAAake,GAAuB,EAAI,GACzFv+B,EAAI,IAAIjT,GAAGN,GAAG4zB,GAAake,GAAuB1f,IAAa6e,IAAard,GAAa,EAAI,GAEzFqd,IAAa,GAAG;AAChB,YAAMW,IAAUzB,GAAWoB,GAA0BE,GAAyBnxC,GAAGN,CAAC;AAClF,MAAAuT,EAAI,IAAIq+B,EAAQ,GAAGA,EAAQ,GAAGX,GAAYQ,IAA0B,KAAK,IAAIrf,IAAavoB,CAAO;AAAA,IACrG;AAEA,UAAMkoC,KAAK5B,GAAWgB,GAA0B/e,GAAY9xB,GAAGN,CAAC;AAGhE,QAFAuT,EAAI,OAAOw+B,GAAG,GAAGA,GAAG,CAAC,GAEjBhB,IAAa,GAAG;AAChB,YAAMa,IAAUzB,GAAWgB,GAA0BE,GAAyB/wC,GAAGN,CAAC;AAClF,MAAAuT,EAAI,IAAIq+B,EAAQ,GAAGA,EAAQ,GAAGb,GAAY3e,IAAavoB,GAASwnC,CAAuB;AAAA,IAC3F;AAAA,EACJ,OAAO;AACH,IAAA99B,EAAI,OAAOjT,GAAGN,CAAC;AACf,UAAMgyC,IAAc,KAAK,IAAIX,CAAuB,IAAI1d,IAAcrzB,GAChE2xC,IAAc,KAAK,IAAIZ,CAAuB,IAAI1d,IAAc3zB;AACtE,IAAAuT,EAAI,OAAOy+B,GAAaC,CAAW;AACnC,UAAMC,IAAY,KAAK,IAAIZ,CAAqB,IAAI3d,IAAcrzB,GAC5D6xC,KAAY,KAAK,IAAIb,CAAqB,IAAI3d,IAAc3zB;AAClE,IAAAuT,EAAI,OAAO2+B,GAAWC,EAAS;AAAA,EACnC;AACA,EAAA5+B,EAAI,UAAS;AACjB;AACA,SAAS6+B,GAAQ7+B,GAAKkM,GAASoe,GAAQtK,GAAS+c,GAAU;AACtD,QAAM,EAAE,aAAA+B,GAAc,YAAAjgB,GAAa,eAAAJ,EAAa,IAAMvS;AACtD,MAAI4S,IAAW5S,EAAQ;AACvB,MAAI4yB,GAAa;AACb,IAAAhC,GAAQ98B,GAAKkM,GAASoe,GAAQtK,GAASlB,GAAUie,CAAQ;AACzD,aAAQjxC,IAAI,GAAGA,IAAIgzC,GAAa,EAAEhzC;AAC9B,MAAAkU,EAAI,KAAI;AAEZ,IAAK,MAAMye,CAAa,MACpBK,IAAWD,KAAcJ,IAAgBvoB,KAAOA;AAAA,EAExD;AACA,SAAA4mC,GAAQ98B,GAAKkM,GAASoe,GAAQtK,GAASlB,GAAUie,CAAQ,GACzD/8B,EAAI,KAAI,GACD8e;AACX;AACA,SAASigB,GAAW/+B,GAAKkM,GAASoe,GAAQtK,GAAS+c,GAAU;AACzD,QAAM,EAAE,aAAA+B,GAAc,YAAAjgB,GAAa,eAAAJ,GAAgB,SAAA7pB,EAAO,IAAMsX,GAC1D,EAAE,aAAA2vB,GAAc,iBAAAC,GAAkB,YAAA3K,GAAa,kBAAAC,GAAmB,cAAA4N,EAAY,IAAMpqC,GACpFqqC,IAAQrqC,EAAQ,gBAAgB;AACtC,MAAI,CAACinC;AACD;AAEJ,EAAA77B,EAAI,YAAYmxB,KAAc,EAAE,GAChCnxB,EAAI,iBAAiBoxB,GACjB6N,KACAj/B,EAAI,YAAY67B,IAAc,GAC9B77B,EAAI,WAAW87B,KAAmB,YAElC97B,EAAI,YAAY67B,GAChB77B,EAAI,WAAW87B,KAAmB;AAEtC,MAAIhd,IAAW5S,EAAQ;AACvB,MAAI4yB,GAAa;AACb,IAAAhC,GAAQ98B,GAAKkM,GAASoe,GAAQtK,GAASlB,GAAUie,CAAQ;AACzD,aAAQjxC,IAAI,GAAGA,IAAIgzC,GAAa,EAAEhzC;AAC9B,MAAAkU,EAAI,OAAM;AAEd,IAAK,MAAMye,CAAa,MACpBK,IAAWD,KAAcJ,IAAgBvoB,KAAOA;AAAA,EAExD;AACA,EAAI+oC,KACA/C,GAAQl8B,GAAKkM,GAAS4S,CAAQ,GAE9BlqB,EAAQ,YAAYkqB,IAAWD,KAAc5oB,KAAM+oC,MAAiB,KAAKlD,MAAoB,WAC7FF,GAAS57B,GAAKkM,GAAS4S,CAAQ,GAE9BggB,MACDhC,GAAQ98B,GAAKkM,GAASoe,GAAQtK,GAASlB,GAAUie,CAAQ,GACzD/8B,EAAI,OAAM;AAElB;AACA,MAAMk/B,WAAmB5V,GAAQ;AAAA,EAC7B,OAAO,KAAK;AAAA,EACZ,OAAO,WAAW;AAAA,IACd,aAAa;AAAA,IACb,aAAa;AAAA,IACb,YAAY,CAAA;AAAA,IACZ,kBAAkB;AAAA,IAClB,iBAAiB;AAAA,IACjB,cAAc;AAAA,IACd,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,OAAO;AAAA,IACP,UAAU;AAAA,IACV,UAAU;AAAA,EAClB;AAAA,EACI,OAAO,gBAAgB;AAAA,IACnB,iBAAiB;AAAA,EACzB;AAAA,EACI,OAAO,cAAc;AAAA,IACjB,aAAa;AAAA,IACb,YAAY,CAACtrB,MAAOA,MAAS;AAAA,EACrC;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY2V,GAAI;AACZ,UAAK,GACL,KAAK,UAAU,QACf,KAAK,gBAAgB,QACrB,KAAK,aAAa,QAClB,KAAK,WAAW,QAChB,KAAK,cAAc,QACnB,KAAK,cAAc,QACnB,KAAK,cAAc,GACnB,KAAK,cAAc,GACfA,KACA,OAAO,OAAO,MAAMA,CAAG;AAAA,EAE/B;AAAA,EACA,QAAQwrB,GAAQC,GAAQhc,GAAkB;AACtC,UAAMtmB,IAAQ,KAAK,SAAS;AAAA,MACxB;AAAA,MACA;AAAA,IACZ,GAAWsmB,CAAgB,GACb,EAAE,OAAA7qB,GAAQ,UAAAqrB,MAAc3rB,GAAkB6E,GAAO;AAAA,MACnD,GAAGqiC;AAAA,MACH,GAAGC;AAAA,IACf,CAAS,GACK,EAAE,YAAAvgB,GAAa,UAAAC,GAAW,aAAAuB,GAAc,aAAAD,GAAc,eAAA3B,EAAa,IAAM,KAAK,SAAS;AAAA,MACzF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACZ,GAAW2E,CAAgB,GACbic,KAAW,KAAK,QAAQ,UAAU,KAAK,QAAQ,eAAe,GAC9DC,IAAiBjsC,EAAeorB,GAAeK,IAAWD,CAAU,GACpE0gB,IAAiB1mC,GAAcN,GAAOsmB,GAAYC,CAAQ,KAAKD,MAAeC,GAC9E0gB,IAAgBF,KAAkBppC,KAAOqpC,GACzCE,IAAelmC,GAAWqqB,GAAUvD,IAAcgf,GAASjf,IAAcif,CAAO;AACtF,WAAOG,KAAiBC;AAAA,EAC5B;AAAA,EACA,eAAerc,GAAkB;AAC7B,UAAM,EAAE,GAAAr2B,GAAI,GAAAN,GAAI,YAAAoyB,GAAa,UAAAC,GAAW,aAAAuB,GAAc,aAAAD,EAAW,IAAM,KAAK,SAAS;AAAA,MACjF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACZ,GAAWgD,CAAgB,GACb,EAAE,QAAAkH,GAAS,SAAAtK,EAAO,IAAM,KAAK,SAC7B0f,KAAa7gB,IAAaC,KAAY,GACtC6gB,KAActf,IAAcD,IAAcJ,IAAUsK,KAAU;AACpE,WAAO;AAAA,MACH,GAAGv9B,IAAI,KAAK,IAAI2yC,CAAS,IAAIC;AAAA,MAC7B,GAAGlzC,IAAI,KAAK,IAAIizC,CAAS,IAAIC;AAAA,IACzC;AAAA,EACI;AAAA,EACA,gBAAgBvc,GAAkB;AAC9B,WAAO,KAAK,eAAeA,CAAgB;AAAA,EAC/C;AAAA,EACA,KAAKpjB,GAAK;AACN,UAAM,EAAE,SAAApL,GAAU,eAAA6pB,EAAa,IAAM,MAC/B6L,KAAU11B,EAAQ,UAAU,KAAK,GACjCorB,KAAWprB,EAAQ,WAAW,KAAK,GACnCmoC,IAAWnoC,EAAQ;AAGzB,QAFA,KAAK,cAAcA,EAAQ,gBAAgB,UAAU,OAAO,GAC5D,KAAK,cAAc6pB,IAAgBvoB,IAAM,KAAK,MAAMuoB,IAAgBvoB,CAAG,IAAI,GACvEuoB,MAAkB,KAAK,KAAK,cAAc,KAAK,KAAK,cAAc;AAClE;AAEJ,IAAAze,EAAI,KAAI;AACR,UAAM0/B,KAAa,KAAK,aAAa,KAAK,YAAY;AACtD,IAAA1/B,EAAI,UAAU,KAAK,IAAI0/B,CAAS,IAAIpV,GAAQ,KAAK,IAAIoV,CAAS,IAAIpV,CAAM;AACxE,UAAMsV,IAAM,IAAI,KAAK,IAAI,KAAK,IAAI3pC,GAAIwoB,KAAiB,CAAC,CAAC,GACnDohB,IAAevV,IAASsV;AAC9B,IAAA5/B,EAAI,YAAYpL,EAAQ,iBACxBoL,EAAI,cAAcpL,EAAQ,aAC1BiqC,GAAQ7+B,GAAK,MAAM6/B,GAAc7f,GAAS+c,CAAQ,GAClDgC,GAAW/+B,GAAK,MAAM6/B,GAAc7f,GAAS+c,CAAQ,GACrD/8B,EAAI,QAAO;AAAA,EACf;AACJ;AAEA,SAAS8/B,GAAS9/B,GAAKpL,GAAS4N,IAAQ5N,GAAS;AAC7C,EAAAoL,EAAI,UAAU3M,EAAemP,EAAM,gBAAgB5N,EAAQ,cAAc,GACzEoL,EAAI,YAAY3M,EAAemP,EAAM,YAAY5N,EAAQ,UAAU,CAAC,GACpEoL,EAAI,iBAAiB3M,EAAemP,EAAM,kBAAkB5N,EAAQ,gBAAgB,GACpFoL,EAAI,WAAW3M,EAAemP,EAAM,iBAAiB5N,EAAQ,eAAe,GAC5EoL,EAAI,YAAY3M,EAAemP,EAAM,aAAa5N,EAAQ,WAAW,GACrEoL,EAAI,cAAc3M,EAAemP,EAAM,aAAa5N,EAAQ,WAAW;AAC3E;AACA,SAASmrC,GAAO//B,GAAKkD,GAAU3O,GAAQ;AACnC,EAAAyL,EAAI,OAAOzL,EAAO,GAAGA,EAAO,CAAC;AACjC;AACC,SAASyrC,GAAcprC,GAAS;AAC7B,SAAIA,EAAQ,UACDqO,KAEPrO,EAAQ,WAAWA,EAAQ,2BAA2B,aAC/C0O,KAEJy8B;AACX;AACA,SAASE,GAAS/jC,GAAQ8T,GAAS8U,IAAS,CAAA,GAAI;AAC5C,QAAMzoB,IAAQH,EAAO,QACf,EAAE,OAAOgkC,IAAc,GAAI,KAAKC,IAAY9jC,IAAQ,EAAC,IAAMyoB,GAC3D,EAAE,OAAOsb,GAAe,KAAKC,EAAU,IAAMrwB,GAC7ClX,IAAQ,KAAK,IAAIonC,GAAaE,CAAY,GAC1CrnC,IAAM,KAAK,IAAIonC,GAAWE,CAAU,GACpCC,IAAUJ,IAAcE,KAAgBD,IAAYC,KAAgBF,IAAcG,KAAcF,IAAYE;AAClH,SAAO;AAAA,IACH,OAAAhkC;AAAA,IACA,OAAAvD;AAAA,IACA,MAAMkX,EAAQ;AAAA,IACd,MAAMjX,IAAMD,KAAS,CAACwnC,IAAUjkC,IAAQtD,IAAMD,IAAQC,IAAMD;AAAA,EACpE;AACA;AACC,SAASynC,GAAYvgC,GAAK0D,GAAMsM,GAAS8U,GAAQ;AAC9C,QAAM,EAAE,QAAA5oB,GAAS,SAAAtH,EAAO,IAAM8O,GACxB,EAAE,OAAArH,GAAQ,OAAAvD,GAAQ,MAAAyS,GAAO,MAAApX,EAAI,IAAM8rC,GAAS/jC,GAAQ8T,GAAS8U,CAAM,GACnE0b,IAAaR,GAAcprC,CAAO;AACxC,MAAI,EAAE,MAAA0lB,IAAM,IAAO,SAAAvmB,EAAO,IAAM+wB,KAAU,CAAA,GACtCh5B,GAAGgR,GAAO2O;AACd,OAAI3f,IAAI,GAAGA,KAAKqI,GAAM,EAAErI;AAEpB,IADAgR,IAAQZ,GAAQpD,KAAS/E,IAAUI,IAAOrI,IAAIA,MAAMuQ,CAAK,GACrD,CAAAS,EAAM,SAECwd,KACPta,EAAI,OAAOlD,EAAM,GAAGA,EAAM,CAAC,GAC3Bwd,IAAO,MAEPkmB,EAAWxgC,GAAKyL,GAAM3O,GAAO/I,GAASa,EAAQ,OAAO,GAEzD6W,IAAO3O;AAEX,SAAIyO,MACAzO,IAAQZ,GAAQpD,KAAS/E,IAAUI,IAAO,MAAMkI,CAAK,GACrDmkC,EAAWxgC,GAAKyL,GAAM3O,GAAO/I,GAASa,EAAQ,OAAO,IAElD,CAAC,CAAC2W;AACb;AACC,SAASk1B,GAAgBzgC,GAAK0D,GAAMsM,GAAS8U,GAAQ;AAClD,QAAM5oB,IAASwH,EAAK,QACd,EAAE,OAAArH,GAAQ,OAAAvD,GAAQ,MAAA3E,EAAI,IAAM8rC,GAAS/jC,GAAQ8T,GAAS8U,CAAM,GAC5D,EAAE,MAAAxK,IAAM,IAAO,SAAAvmB,EAAO,IAAM+wB,KAAU,CAAA;AAC5C,MAAI4b,IAAO,GACPC,IAAS,GACT70C,GAAGgR,GAAO8jC,GAAOphB,GAAMF,GAAMuhB;AACjC,QAAMC,IAAa,CAACnnC,OAASb,KAAS/E,IAAUI,IAAOwF,IAAQA,MAAU0C,GACnE0kC,IAAQ,MAAI;AACd,IAAIvhB,MAASF,MACTtf,EAAI,OAAO0gC,GAAMphB,CAAI,GACrBtf,EAAI,OAAO0gC,GAAMlhB,CAAI,GACrBxf,EAAI,OAAO0gC,GAAMG,CAAK;AAAA,EAE9B;AAKA,OAJIvmB,MACAxd,IAAQZ,EAAO4kC,EAAW,CAAC,CAAC,GAC5B9gC,EAAI,OAAOlD,EAAM,GAAGA,EAAM,CAAC,IAE3BhR,IAAI,GAAGA,KAAKqI,GAAM,EAAErI,GAAE;AAEtB,QADAgR,IAAQZ,EAAO4kC,EAAWh1C,CAAC,CAAC,GACxBgR,EAAM;AACN;AAEJ,UAAM/P,IAAI+P,EAAM,GACVrQ,IAAIqQ,EAAM,GACVkkC,IAASj0C,IAAI;AACnB,IAAIi0C,MAAWJ,KACPn0C,IAAI+yB,IACJA,IAAO/yB,IACAA,IAAI6yB,MACXA,IAAO7yB,IAEXi0C,KAAQC,IAASD,IAAO3zC,KAAK,EAAE4zC,MAE/BI,EAAK,GACL/gC,EAAI,OAAOjT,GAAGN,CAAC,GACfm0C,IAAQI,GACRL,IAAS,GACTnhB,IAAOF,IAAO7yB,IAElBo0C,IAAQp0C;AAAA,EACZ;AACA,EAAAs0C,EAAK;AACT;AACC,SAASE,GAAkBv9B,GAAM;AAC9B,QAAMF,IAAOE,EAAK,SACZytB,IAAa3tB,EAAK,cAAcA,EAAK,WAAW;AAEtD,SADoB,CAACE,EAAK,cAAc,CAACA,EAAK,SAAS,CAACF,EAAK,WAAWA,EAAK,2BAA2B,cAAc,CAACA,EAAK,WAAW,CAAC2tB,IACnHsP,KAAkBF;AAC3C;AACC,SAASW,GAAwBtsC,GAAS;AACvC,SAAIA,EAAQ,UACDma,KAEPna,EAAQ,WAAWA,EAAQ,2BAA2B,aAC/Coa,KAEJF;AACX;AACA,SAASqyB,GAAoBnhC,GAAK0D,GAAM5K,GAAOuD,GAAO;AAClD,MAAI+kC,IAAO19B,EAAK;AAChB,EAAK09B,MACDA,IAAO19B,EAAK,QAAQ,IAAI,OAAM,GAC1BA,EAAK,KAAK09B,GAAMtoC,GAAOuD,CAAK,KAC5B+kC,EAAK,UAAS,IAGtBtB,GAAS9/B,GAAK0D,EAAK,OAAO,GAC1B1D,EAAI,OAAOohC,CAAI;AACnB;AACA,SAASC,GAAiBrhC,GAAK0D,GAAM5K,GAAOuD,GAAO;AAC/C,QAAM,EAAE,UAAA2U,GAAW,SAAApc,EAAO,IAAM8O,GAC1B49B,IAAgBL,GAAkBv9B,CAAI;AAC5C,aAAWsM,KAAWgB;AAClB,IAAA8uB,GAAS9/B,GAAKpL,GAASob,EAAQ,KAAK,GACpChQ,EAAI,UAAS,GACTshC,EAActhC,GAAK0D,GAAMsM,GAAS;AAAA,MAClC,OAAAlX;AAAA,MACA,KAAKA,IAAQuD,IAAQ;AAAA,IACjC,CAAS,KACG2D,EAAI,UAAS,GAEjBA,EAAI,OAAM;AAElB;AACA,MAAMuhC,KAAY,OAAO,UAAW;AACpC,SAAStuB,GAAKjT,GAAK0D,GAAM5K,GAAOuD,GAAO;AACnC,EAAIklC,MAAa,CAAC79B,EAAK,QAAQ,UAC3By9B,GAAoBnhC,GAAK0D,GAAM5K,GAAOuD,CAAK,IAE3CglC,GAAiBrhC,GAAK0D,GAAM5K,GAAOuD,CAAK;AAEhD;AACA,MAAMmlC,WAAoBlY,GAAQ;AAAA,EAC9B,OAAO,KAAK;AAAA,EACf,OAAO,WAAW;AAAA,IACX,gBAAgB;AAAA,IAChB,YAAY,CAAA;AAAA,IACZ,kBAAkB;AAAA,IAClB,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,iBAAiB;AAAA,IACjB,wBAAwB;AAAA,IACxB,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAAS;AAAA,IACT,SAAS;AAAA,EACjB;AAAA,EACC,OAAO,gBAAgB;AAAA,IAChB,iBAAiB;AAAA,IACjB,aAAa;AAAA,EACrB;AAAA,EACI,OAAO,cAAc;AAAA,IACjB,aAAa;AAAA,IACb,YAAY,CAACtrB,MAAOA,MAAS,gBAAgBA,MAAS;AAAA,EAC9D;AAAA,EACI,YAAY2V,GAAI;AACZ,UAAK,GACL,KAAK,WAAW,IAChB,KAAK,UAAU,QACf,KAAK,SAAS,QACd,KAAK,QAAQ,QACb,KAAK,YAAY,QACjB,KAAK,QAAQ,QACb,KAAK,UAAU,QACf,KAAK,YAAY,QACjB,KAAK,aAAa,IAClB,KAAK,iBAAiB,IACtB,KAAK,gBAAgB,QACjBA,KACA,OAAO,OAAO,MAAMA,CAAG;AAAA,EAE/B;AAAA,EACA,oBAAoBrB,GAAWnJ,GAAW;AACtC,UAAMvU,IAAU,KAAK;AACrB,SAAKA,EAAQ,WAAWA,EAAQ,2BAA2B,eAAe,CAACA,EAAQ,WAAW,CAAC,KAAK,gBAAgB;AAChH,YAAM2W,IAAO3W,EAAQ,WAAW,KAAK,QAAQ,KAAK;AAClD,MAAA0W,GAA2B,KAAK,SAAS1W,GAAS0d,GAAW/G,GAAMpC,CAAS,GAC5E,KAAK,iBAAiB;AAAA,IAC1B;AAAA,EACJ;AAAA,EACA,IAAI,OAAOjN,GAAQ;AACf,SAAK,UAAUA,GACf,OAAO,KAAK,WACZ,OAAO,KAAK,OACZ,KAAK,iBAAiB;AAAA,EAC1B;AAAA,EACA,IAAI,SAAS;AACT,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAI,WAAW;AACX,WAAO,KAAK,cAAc,KAAK,YAAYmV,GAAiB,MAAM,KAAK,QAAQ,OAAO;AAAA,EAC1F;AAAA,EACH,QAAQ;AACD,UAAML,IAAW,KAAK,UAChB9U,IAAS,KAAK;AACpB,WAAO8U,EAAS,UAAU9U,EAAO8U,EAAS,CAAC,EAAE,KAAK;AAAA,EACtD;AAAA,EACH,OAAO;AACA,UAAMA,IAAW,KAAK,UAChB9U,IAAS,KAAK,QACdG,IAAQ2U,EAAS;AACvB,WAAO3U,KAASH,EAAO8U,EAAS3U,IAAQ,CAAC,EAAE,GAAG;AAAA,EAClD;AAAA,EACH,YAAYS,GAAOnF,GAAU;AACtB,UAAM/C,IAAU,KAAK,SACf7B,IAAQ+J,EAAMnF,CAAQ,GACtBuE,IAAS,KAAK,QACd8U,IAAWD,GAAe,MAAM;AAAA,MAClC,UAAApZ;AAAA,MACA,OAAO5E;AAAA,MACP,KAAKA;AAAA,IACjB,CAAS;AACD,QAAI,CAACie,EAAS;AACV;AAEJ,UAAM7Z,IAAS,CAAA,GACTsqC,IAAeP,GAAwBtsC,CAAO;AACpD,QAAI9I,GAAGqI;AACP,SAAIrI,IAAI,GAAGqI,IAAO6c,EAAS,QAAQllB,IAAIqI,GAAM,EAAErI,GAAE;AAC7C,YAAM,EAAE,OAAAgN,GAAQ,KAAAC,MAASiY,EAASllB,CAAC,GAC7BoE,IAAKgM,EAAOpD,CAAK,GACjB3I,IAAK+L,EAAOnD,CAAG;AACrB,UAAI7I,MAAOC,GAAI;AACX,QAAAgH,EAAO,KAAKjH,CAAE;AACd;AAAA,MACJ;AACA,YAAM3E,IAAI,KAAK,KAAKwH,IAAQ7C,EAAGyH,CAAQ,MAAMxH,EAAGwH,CAAQ,IAAIzH,EAAGyH,CAAQ,EAAE,GACnE+pC,IAAeD,EAAavxC,GAAIC,GAAI5E,GAAGqJ,EAAQ,OAAO;AAC5D,MAAA8sC,EAAa/pC,CAAQ,IAAImF,EAAMnF,CAAQ,GACvCR,EAAO,KAAKuqC,CAAY;AAAA,IAC5B;AACA,WAAOvqC,EAAO,WAAW,IAAIA,EAAO,CAAC,IAAIA;AAAA,EAC7C;AAAA,EACH,YAAY6I,GAAKgQ,GAAS8U,GAAQ;AAE3B,WADsBmc,GAAkB,IAAI,EACvBjhC,GAAK,MAAMgQ,GAAS8U,CAAM;AAAA,EACnD;AAAA,EACH,KAAK9kB,GAAKlH,GAAOuD,GAAO;AACjB,UAAM2U,IAAW,KAAK,UAChBswB,IAAgBL,GAAkB,IAAI;AAC5C,QAAI11B,IAAO,KAAK;AAChB,IAAAzS,IAAQA,KAAS,GACjBuD,IAAQA,KAAS,KAAK,OAAO,SAASvD;AACtC,eAAWkX,KAAWgB;AAClB,MAAAzF,KAAQ+1B,EAActhC,GAAK,MAAMgQ,GAAS;AAAA,QACtC,OAAAlX;AAAA,QACA,KAAKA,IAAQuD,IAAQ;AAAA,MACrC,CAAa;AAEL,WAAO,CAAC,CAACkP;AAAA,EACb;AAAA,EACH,KAAKvL,GAAKsS,GAAWxZ,GAAOuD,GAAO;AAC5B,UAAMzH,IAAU,KAAK,WAAW,CAAA;AAEhC,KADe,KAAK,UAAU,CAAA,GACnB,UAAUA,EAAQ,gBACzBoL,EAAI,KAAI,GACRiT,GAAKjT,GAAK,MAAMlH,GAAOuD,CAAK,GAC5B2D,EAAI,QAAO,IAEX,KAAK,aACL,KAAK,iBAAiB,IACtB,KAAK,QAAQ;AAAA,EAErB;AACJ;AAEA,SAAS2hC,GAAUv1B,GAAIK,GAAK/P,GAAM0mB,GAAkB;AAChD,QAAMxuB,IAAUwX,EAAG,SACb,EAAE,CAAC1P,CAAI,GAAG3J,EAAK,IAAMqZ,EAAG,SAAS;AAAA,IACnC1P;AAAA,EACR,GAAO0mB,CAAgB;AACnB,SAAO,KAAK,IAAI3W,IAAM1Z,CAAK,IAAI6B,EAAQ,SAASA,EAAQ;AAC5D;AACA,MAAMgtC,WAAqBtY,GAAQ;AAAA,EAC/B,OAAO,KAAK;AAAA,EACZ;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAGE,OAAO,WAAW;AAAA,IAChB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,kBAAkB;AAAA,IAClB,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,UAAU;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA,EAGM,OAAO,gBAAgB;AAAA,IACrB,iBAAiB;AAAA,IACjB,aAAa;AAAA,EACrB;AAAA,EACI,YAAY3V,GAAI;AACZ,UAAK,GACL,KAAK,UAAU,QACf,KAAK,SAAS,QACd,KAAK,OAAO,QACZ,KAAK,OAAO,QACRA,KACA,OAAO,OAAO,MAAMA,CAAG;AAAA,EAE/B;AAAA,EACA,QAAQkuB,GAAQC,GAAQ1e,GAAkB;AACtC,UAAMxuB,IAAU,KAAK,SACf,EAAE,GAAA7H,GAAI,GAAAN,MAAO,KAAK,SAAS;AAAA,MAC7B;AAAA,MACA;AAAA,IACZ,GAAW22B,CAAgB;AACnB,WAAO,KAAK,IAAIye,IAAS90C,GAAG,CAAC,IAAI,KAAK,IAAI+0C,IAASr1C,GAAG,CAAC,IAAI,KAAK,IAAImI,EAAQ,YAAYA,EAAQ,QAAQ,CAAC;AAAA,EAC7G;AAAA,EACA,SAASitC,GAAQze,GAAkB;AAC/B,WAAOue,GAAU,MAAME,GAAQ,KAAKze,CAAgB;AAAA,EACxD;AAAA,EACA,SAAS0e,GAAQ1e,GAAkB;AAC/B,WAAOue,GAAU,MAAMG,GAAQ,KAAK1e,CAAgB;AAAA,EACxD;AAAA,EACA,eAAeA,GAAkB;AAC7B,UAAM,EAAE,GAAAr2B,GAAI,GAAAN,MAAO,KAAK,SAAS;AAAA,MAC7B;AAAA,MACA;AAAA,IACZ,GAAW22B,CAAgB;AACnB,WAAO;AAAA,MACH,GAAAr2B;AAAA,MACA,GAAAN;AAAA,IACZ;AAAA,EACI;AAAA,EACA,KAAKmI,GAAS;AACV,IAAAA,IAAUA,KAAW,KAAK,WAAW,CAAA;AACrC,QAAI8N,IAAS9N,EAAQ,UAAU;AAC/B,IAAA8N,IAAS,KAAK,IAAIA,GAAQA,KAAU9N,EAAQ,eAAe,CAAC;AAC5D,UAAMinC,IAAcn5B,KAAU9N,EAAQ,eAAe;AACrD,YAAQ8N,IAASm5B,KAAe;AAAA,EACpC;AAAA,EACA,KAAK77B,GAAK6C,GAAM;AACZ,UAAMjO,IAAU,KAAK;AACrB,IAAI,KAAK,QAAQA,EAAQ,SAAS,OAAO,CAACgO,GAAe,MAAMC,GAAM,KAAK,KAAKjO,CAAO,IAAI,CAAC,MAG3FoL,EAAI,cAAcpL,EAAQ,aAC1BoL,EAAI,YAAYpL,EAAQ,aACxBoL,EAAI,YAAYpL,EAAQ,iBACxBoN,GAAUhC,GAAKpL,GAAS,KAAK,GAAG,KAAK,CAAC;AAAA,EAC1C;AAAA,EACA,WAAW;AACP,UAAMA,IAAU,KAAK,WAAW,CAAA;AAEhC,WAAOA,EAAQ,SAASA,EAAQ;AAAA,EACpC;AACJ;AAEA,SAASmtC,GAAaC,GAAK5e,GAAkB;AACzC,QAAM,EAAE,GAAAr2B,GAAI,GAAAN,GAAI,MAAAgO,GAAO,OAAAkH,GAAQ,QAAA2L,EAAM,IAAO00B,EAAI,SAAS;AAAA,IACrD;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACR,GAAO5e,CAAgB;AACnB,MAAIvnB,GAAMC,GAAO8H,GAAKC,GAAQo+B;AAC9B,SAAID,EAAI,cACJC,IAAO30B,IAAS,GAChBzR,IAAO,KAAK,IAAI9O,GAAG0N,CAAI,GACvBqB,IAAQ,KAAK,IAAI/O,GAAG0N,CAAI,GACxBmJ,IAAMnX,IAAIw1C,GACVp+B,IAASpX,IAAIw1C,MAEbA,IAAOtgC,IAAQ,GACf9F,IAAO9O,IAAIk1C,GACXnmC,IAAQ/O,IAAIk1C,GACZr+B,IAAM,KAAK,IAAInX,GAAGgO,CAAI,GACtBoJ,IAAS,KAAK,IAAIpX,GAAGgO,CAAI,IAEtB;AAAA,IACH,MAAAoB;AAAA,IACA,KAAA+H;AAAA,IACA,OAAA9H;AAAA,IACA,QAAA+H;AAAA,EACR;AACA;AACA,SAASq+B,GAAY7X,GAAMt3B,GAAOpD,GAAKF,GAAK;AACxC,SAAO46B,IAAO,IAAIhxB,EAAYtG,GAAOpD,GAAKF,CAAG;AACjD;AACA,SAAS0yC,GAAiBH,GAAKI,GAAMC,GAAM;AACvC,QAAMtvC,IAAQivC,EAAI,QAAQ,aACpB3X,IAAO2X,EAAI,eACX,IAAI/8B,GAAOlS,CAAK;AACtB,SAAO;AAAA,IACH,GAAGmvC,GAAY7X,EAAK,KAAK,EAAE,KAAK,GAAGgY,CAAI;AAAA,IACvC,GAAGH,GAAY7X,EAAK,OAAO,EAAE,OAAO,GAAG+X,CAAI;AAAA,IAC3C,GAAGF,GAAY7X,EAAK,QAAQ,EAAE,QAAQ,GAAGgY,CAAI;AAAA,IAC7C,GAAGH,GAAY7X,EAAK,MAAM,EAAE,MAAM,GAAG+X,CAAI;AAAA,EACjD;AACA;AACA,SAASE,GAAkBN,GAAKI,GAAMC,GAAM;AACxC,QAAM,EAAE,oBAAAE,EAAkB,IAAMP,EAAI,SAAS;AAAA,IACzC;AAAA,EACR,CAAK,GACKjvC,IAAQivC,EAAI,QAAQ,cACpB,IAAI98B,GAAcnS,CAAK,GACvByvC,IAAO,KAAK,IAAIJ,GAAMC,CAAI,GAC1BhY,IAAO2X,EAAI,eACXS,IAAeF,KAAsBtvC,EAASF,CAAK;AACzD,SAAO;AAAA,IACH,SAASmvC,GAAY,CAACO,KAAgBpY,EAAK,OAAOA,EAAK,MAAM,EAAE,SAAS,GAAGmY,CAAI;AAAA,IAC/E,UAAUN,GAAY,CAACO,KAAgBpY,EAAK,OAAOA,EAAK,OAAO,EAAE,UAAU,GAAGmY,CAAI;AAAA,IAClF,YAAYN,GAAY,CAACO,KAAgBpY,EAAK,UAAUA,EAAK,MAAM,EAAE,YAAY,GAAGmY,CAAI;AAAA,IACxF,aAAaN,GAAY,CAACO,KAAgBpY,EAAK,UAAUA,EAAK,OAAO,EAAE,aAAa,GAAGmY,CAAI;AAAA,EACnG;AACA;AACA,SAASE,GAAcV,GAAK;AACxB,QAAM/xB,IAAS8xB,GAAaC,CAAG,GACzBrgC,IAAQsO,EAAO,QAAQA,EAAO,MAC9B3C,IAAS2C,EAAO,SAASA,EAAO,KAChCqR,IAAS6gB,GAAiBH,GAAKrgC,IAAQ,GAAG2L,IAAS,CAAC,GACpD5K,IAAS4/B,GAAkBN,GAAKrgC,IAAQ,GAAG2L,IAAS,CAAC;AAC3D,SAAO;AAAA,IACH,OAAO;AAAA,MACH,GAAG2C,EAAO;AAAA,MACV,GAAGA,EAAO;AAAA,MACV,GAAGtO;AAAA,MACH,GAAG2L;AAAA,MACH,QAAA5K;AAAA,IACZ;AAAA,IACQ,OAAO;AAAA,MACH,GAAGuN,EAAO,OAAOqR,EAAO;AAAA,MACxB,GAAGrR,EAAO,MAAMqR,EAAO;AAAA,MACvB,GAAG3f,IAAQ2f,EAAO,IAAIA,EAAO;AAAA,MAC7B,GAAGhU,IAASgU,EAAO,IAAIA,EAAO;AAAA,MAC9B,QAAQ;AAAA,QACJ,SAAS,KAAK,IAAI,GAAG5e,EAAO,UAAU,KAAK,IAAI4e,EAAO,GAAGA,EAAO,CAAC,CAAC;AAAA,QAClE,UAAU,KAAK,IAAI,GAAG5e,EAAO,WAAW,KAAK,IAAI4e,EAAO,GAAGA,EAAO,CAAC,CAAC;AAAA,QACpE,YAAY,KAAK,IAAI,GAAG5e,EAAO,aAAa,KAAK,IAAI4e,EAAO,GAAGA,EAAO,CAAC,CAAC;AAAA,QACxE,aAAa,KAAK,IAAI,GAAG5e,EAAO,cAAc,KAAK,IAAI4e,EAAO,GAAGA,EAAO,CAAC,CAAC;AAAA,MAC1F;AAAA,IACA;AAAA,EACA;AACA;AACA,SAASqC,GAAQqe,GAAKj1C,GAAGN,GAAG22B,GAAkB;AAC1C,QAAMuf,IAAQ51C,MAAM,MACd61C,IAAQn2C,MAAM,MAEdwjB,IAAS+xB,KAAO,EADLW,KAASC,MACSb,GAAaC,GAAK5e,CAAgB;AACrE,SAAOnT,MAAW0yB,KAASppC,GAAWxM,GAAGkjB,EAAO,MAAMA,EAAO,KAAK,OAAO2yB,KAASrpC,GAAW9M,GAAGwjB,EAAO,KAAKA,EAAO,MAAM;AAC7H;AACA,SAAS4yB,GAAUngC,GAAQ;AACvB,SAAOA,EAAO,WAAWA,EAAO,YAAYA,EAAO,cAAcA,EAAO;AAC5E;AACC,SAASogC,GAAkB9iC,GAAKsE,GAAM;AACnC,EAAAtE,EAAI,KAAKsE,EAAK,GAAGA,EAAK,GAAGA,EAAK,GAAGA,EAAK,CAAC;AAC3C;AACA,SAASy+B,GAAYz+B,GAAM0+B,GAAQC,IAAU,CAAA,GAAI;AAC7C,QAAMl2C,IAAIuX,EAAK,MAAM2+B,EAAQ,IAAI,CAACD,IAAS,GACrCv2C,IAAI6X,EAAK,MAAM2+B,EAAQ,IAAI,CAACD,IAAS,GACrC1zC,KAAKgV,EAAK,IAAIA,EAAK,MAAM2+B,EAAQ,IAAIA,EAAQ,IAAID,IAAS,KAAKj2C,GAC/Dd,KAAKqY,EAAK,IAAIA,EAAK,MAAM2+B,EAAQ,IAAIA,EAAQ,IAAID,IAAS,KAAKv2C;AACrE,SAAO;AAAA,IACH,GAAG6X,EAAK,IAAIvX;AAAA,IACZ,GAAGuX,EAAK,IAAI7X;AAAA,IACZ,GAAG6X,EAAK,IAAIhV;AAAA,IACZ,GAAGgV,EAAK,IAAIrY;AAAA,IACZ,QAAQqY,EAAK;AAAA,EACrB;AACA;AACA,MAAM4+B,WAAmB5Z,GAAQ;AAAA,EAC7B,OAAO,KAAK;AAAA,EACf,OAAO,WAAW;AAAA,IACX,eAAe;AAAA,IACf,aAAa;AAAA,IACb,cAAc;AAAA,IACd,eAAe;AAAA,IACf,YAAY;AAAA,EACpB;AAAA,EACC,OAAO,gBAAgB;AAAA,IAChB,iBAAiB;AAAA,IACjB,aAAa;AAAA,EACrB;AAAA,EACI,YAAY3V,GAAI;AACZ,UAAK,GACL,KAAK,UAAU,QACf,KAAK,aAAa,QAClB,KAAK,OAAO,QACZ,KAAK,QAAQ,QACb,KAAK,SAAS,QACd,KAAK,gBAAgB,QACjBA,KACA,OAAO,OAAO,MAAMA,CAAG;AAAA,EAE/B;AAAA,EACA,KAAK3T,GAAK;AACN,UAAM,EAAE,eAAA0c,GAAgB,SAAS,EAAE,aAAAymB,GAAc,iBAAA7Q,EAAe,EAAG,IAAM,MACnE,EAAE,OAAA2M,GAAQ,OAAAmE,MAAWV,GAAc,IAAI,GACvCW,IAAcR,GAAUO,EAAM,MAAM,IAAI/+B,KAAqBy+B;AACnE,IAAA9iC,EAAI,KAAI,IACJojC,EAAM,MAAMnE,EAAM,KAAKmE,EAAM,MAAMnE,EAAM,OACzCj/B,EAAI,UAAS,GACbqjC,EAAYrjC,GAAK+iC,GAAYK,GAAO1mB,GAAeuiB,CAAK,CAAC,GACzDj/B,EAAI,KAAI,GACRqjC,EAAYrjC,GAAK+iC,GAAY9D,GAAO,CAACviB,GAAe0mB,CAAK,CAAC,GAC1DpjC,EAAI,YAAYmjC,GAChBnjC,EAAI,KAAK,SAAS,IAEtBA,EAAI,UAAS,GACbqjC,EAAYrjC,GAAK+iC,GAAY9D,GAAOviB,CAAa,CAAC,GAClD1c,EAAI,YAAYsyB,GAChBtyB,EAAI,KAAI,GACRA,EAAI,QAAO;AAAA,EACf;AAAA,EACA,QAAQ6hC,GAAQC,GAAQ1e,GAAkB;AACtC,WAAOO,GAAQ,MAAMke,GAAQC,GAAQ1e,CAAgB;AAAA,EACzD;AAAA,EACA,SAASye,GAAQze,GAAkB;AAC/B,WAAOO,GAAQ,MAAMke,GAAQ,MAAMze,CAAgB;AAAA,EACvD;AAAA,EACA,SAAS0e,GAAQ1e,GAAkB;AAC/B,WAAOO,GAAQ,MAAM,MAAMme,GAAQ1e,CAAgB;AAAA,EACvD;AAAA,EACA,eAAeA,GAAkB;AAC7B,UAAM,EAAE,GAAAr2B,GAAI,GAAAN,GAAI,MAAAgO,GAAO,YAAAqiB,EAAU,IAAO,KAAK,SAAS;AAAA,MAClD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACZ,GAAWsG,CAAgB;AACnB,WAAO;AAAA,MACH,GAAGtG,KAAc/vB,IAAI0N,KAAQ,IAAI1N;AAAA,MACjC,GAAG+vB,IAAarwB,KAAKA,IAAIgO,KAAQ;AAAA,IAC7C;AAAA,EACI;AAAA,EACA,SAASiC,GAAM;AACX,WAAOA,MAAS,MAAM,KAAK,QAAQ,IAAI,KAAK,SAAS;AAAA,EACzD;AACJ;AAEA,IAAI8c,KAAwB,uBAAO,OAAO;AAAA,EAC1C,WAAW;AAAA,EACX,YAAY0lB;AAAA,EACZ,YAAYgE;AAAA,EACZ,aAAa1B;AAAA,EACb,cAAcI;AACd,CAAC;AAED,MAAM0B,KAAgB;AAAA,EAClB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AACJ,GAEMC,KAAoC,gBAAAD,GAAc,IAAI,CAAClxC,MAAQA,EAAM,QAAQ,QAAQ,OAAO,EAAE,QAAQ,KAAK,QAAQ,CAAC;AAC1H,SAASoxC,GAAe,GAAG;AACvB,SAAOF,GAAc,IAAIA,GAAc,MAAM;AACjD;AACA,SAASG,GAAmB,GAAG;AAC3B,SAAOF,GAAkB,IAAIA,GAAkB,MAAM;AACzD;AACA,SAASG,GAAuB3rB,GAASjsB,GAAG;AACxC,SAAAisB,EAAQ,cAAcyrB,GAAe13C,CAAC,GACtCisB,EAAQ,kBAAkB0rB,GAAmB33C,CAAC,GACvC,EAAEA;AACb;AACA,SAAS63C,GAAwB5rB,GAASjsB,GAAG;AACzC,SAAAisB,EAAQ,kBAAkBA,EAAQ,KAAK,IAAI,MAAIyrB,GAAe13C,GAAG,CAAC,GAC3DA;AACX;AACA,SAAS83C,GAAyB7rB,GAASjsB,GAAG;AAC1C,SAAAisB,EAAQ,kBAAkBA,EAAQ,KAAK,IAAI,MAAI0rB,GAAmB33C,GAAG,CAAC,GAC/DA;AACX;AACA,SAAS+3C,GAAapiC,GAAO;AACzB,MAAI3V,IAAI;AACR,SAAO,CAACisB,GAASlG,MAAe;AAC5B,UAAMiF,IAAarV,EAAM,eAAeoQ,CAAY,EAAE;AACtD,IAAIiF,aAAsB2I,KACtB3zB,IAAI63C,GAAwB5rB,GAASjsB,CAAC,IAC/BgrB,aAAsB0K,KAC7B11B,IAAI83C,GAAyB7rB,GAASjsB,CAAC,IAChCgrB,MACPhrB,IAAI43C,GAAuB3rB,GAASjsB,CAAC;AAAA,EAE7C;AACJ;AACA,SAASg4C,GAA0BvkC,GAAa;AAC5C,MAAI7R;AACJ,OAAIA,KAAK6R;AACL,QAAIA,EAAY7R,CAAC,EAAE,eAAe6R,EAAY7R,CAAC,EAAE;AAC7C,aAAO;AAGf,SAAO;AACX;AACA,SAASq2C,GAAyB1P,GAAY;AAC1C,SAAOA,MAAeA,EAAW,eAAeA,EAAW;AAC/D;AACA,SAAS2P,KAAmC;AACxC,SAAOjmC,EAAS,gBAAgB,qBAAqBA,EAAS,oBAAoB;AACtF;AACA,IAAIkmC,KAAgB;AAAA,EAChB,IAAI;AAAA,EACJ,UAAU;AAAA,IACN,SAAS;AAAA,IACT,eAAe;AAAA,EACvB;AAAA,EACI,aAAcxiC,GAAOyiC,GAAOtvC,GAAS;AACjC,QAAI,CAACA,EAAQ;AACT;AAEJ,UAAM,EAAE,MAAM,EAAE,UAAA+kC,EAAQ,GAAM,SAASwK,EAAY,IAAM1iC,EAAM,QACzD,EAAE,UAAA+X,EAAQ,IAAM2qB,GAChBC,IAA0BN,GAA0BnK,CAAQ,KAAKoK,GAAyBI,CAAY,KAAK3qB,KAAYsqB,GAA0BtqB,CAAQ,KAAKwqB,GAAgC;AACpM,QAAI,CAACpvC,EAAQ,iBAAiBwvC;AAC1B;AAEJ,UAAMC,IAAYR,GAAapiC,CAAK;AACpC,IAAAk4B,EAAS,QAAQ0K,CAAS;AAAA,EAC9B;AACJ;AAEA,SAASC,GAAe1jC,GAAM9H,GAAOuD,GAAOyqB,GAAgBlyB,GAAS;AACpE,QAAM2vC,IAAU3vC,EAAQ,WAAWkyB;AAChC,MAAIyd,KAAWloC;AACX,WAAOuE,EAAK,MAAM9H,GAAOA,IAAQuD,CAAK;AAE1C,QAAMmoC,IAAY,CAAA,GACZC,KAAepoC,IAAQ,MAAMkoC,IAAU;AAC7C,MAAIG,IAAe;AACnB,QAAMC,IAAW7rC,IAAQuD,IAAQ;AACjC,MAAInQ,IAAI4M,GACJhN,GAAG84C,GAAcC,GAAShiC,GAAMiiC;AAEpC,OADAN,EAAUE,GAAc,IAAI9jC,EAAK1U,CAAC,GAC9BJ,IAAI,GAAGA,IAAIy4C,IAAU,GAAGz4C,KAAI;AAC5B,QAAI40C,IAAO,GACPqE,IAAO,GACPj3C;AACJ,UAAMk3C,IAAgB,KAAK,OAAOl5C,IAAI,KAAK24C,CAAW,IAAI,IAAI3rC,GACxDmsC,IAAc,KAAK,IAAI,KAAK,OAAOn5C,IAAI,KAAK24C,CAAW,IAAI,GAAGpoC,CAAK,IAAIvD,GACvEosC,IAAiBD,IAAcD;AACrC,SAAIl3C,IAAIk3C,GAAel3C,IAAIm3C,GAAan3C;AACpC,MAAA4yC,KAAQ9/B,EAAK9S,CAAC,EAAE,GAChBi3C,KAAQnkC,EAAK9S,CAAC,EAAE;AAEpB,IAAA4yC,KAAQwE,GACRH,KAAQG;AACR,UAAMC,IAAY,KAAK,MAAMr5C,IAAI24C,CAAW,IAAI,IAAI3rC,GAC9CssC,IAAU,KAAK,IAAI,KAAK,OAAOt5C,IAAI,KAAK24C,CAAW,IAAI,GAAGpoC,CAAK,IAAIvD,GACnE,EAAE,GAAGusC,GAAU,GAAGC,EAAO,IAAM1kC,EAAK1U,CAAC;AAE3C,SADA24C,IAAUhiC,IAAO,IACb/U,IAAIq3C,GAAWr3C,IAAIs3C,GAASt3C;AAC5B,MAAA+U,IAAO,MAAM,KAAK,KAAKwiC,IAAU3E,MAAS9/B,EAAK9S,CAAC,EAAE,IAAIw3C,MAAYD,IAAUzkC,EAAK9S,CAAC,EAAE,MAAMi3C,IAAOO,EAAQ,GACrGziC,IAAOgiC,MACPA,IAAUhiC,GACV+hC,IAAehkC,EAAK9S,CAAC,GACrBg3C,IAAQh3C;AAGhB,IAAA02C,EAAUE,GAAc,IAAIE,GAC5B14C,IAAI44C;AAAA,EACR;AACA,SAAAN,EAAUE,GAAc,IAAI9jC,EAAK+jC,CAAQ,GAClCH;AACX;AACA,SAASe,GAAiB3kC,GAAM9H,GAAOuD,GAAOyqB,GAAgB;AAC1D,MAAI4Z,IAAO,GACPC,IAAS,GACT70C,GAAGgR,GAAO/P,GAAGN,GAAGm0C,GAAO4E,GAAUC,GAAUC,GAAYlmB,GAAMF;AACjE,QAAMklB,IAAY,CAAA,GACZG,IAAW7rC,IAAQuD,IAAQ,GAC3BspC,IAAO/kC,EAAK9H,CAAK,EAAE,GAEnB8sC,IADOhlC,EAAK+jC,CAAQ,EAAE,IACVgB;AAClB,OAAI75C,IAAIgN,GAAOhN,IAAIgN,IAAQuD,GAAO,EAAEvQ,GAAE;AAClC,IAAAgR,IAAQ8D,EAAK9U,CAAC,GACdiB,KAAK+P,EAAM,IAAI6oC,KAAQC,IAAK9e,GAC5Br6B,IAAIqQ,EAAM;AACV,UAAMkkC,IAASj0C,IAAI;AACnB,QAAIi0C,MAAWJ;AACX,MAAIn0C,IAAI+yB,KACJA,IAAO/yB,GACP+4C,IAAW15C,KACJW,IAAI6yB,MACXA,IAAO7yB,GACPg5C,IAAW35C,IAEf40C,KAAQC,IAASD,IAAO5jC,EAAM,KAAK,EAAE6jC;AAAA,SAClC;AACH,YAAMkF,IAAY/5C,IAAI;AACtB,UAAI,CAACgH,EAAc0yC,CAAQ,KAAK,CAAC1yC,EAAc2yC,CAAQ,GAAG;AACtD,cAAMK,IAAqB,KAAK,IAAIN,GAAUC,CAAQ,GAChDM,IAAqB,KAAK,IAAIP,GAAUC,CAAQ;AACtD,QAAIK,MAAuBJ,KAAcI,MAAuBD,KAC5DrB,EAAU,KAAK;AAAA,UACX,GAAG5jC,EAAKklC,CAAkB;AAAA,UAC1B,GAAGpF;AAAA,QAC3B,CAAqB,GAEDqF,MAAuBL,KAAcK,MAAuBF,KAC5DrB,EAAU,KAAK;AAAA,UACX,GAAG5jC,EAAKmlC,CAAkB;AAAA,UAC1B,GAAGrF;AAAA,QAC3B,CAAqB;AAAA,MAET;AACA,MAAI50C,IAAI,KAAK+5C,MAAcH,KACvBlB,EAAU,KAAK5jC,EAAKilC,CAAS,CAAC,GAElCrB,EAAU,KAAK1nC,CAAK,GACpB8jC,IAAQI,GACRL,IAAS,GACTnhB,IAAOF,IAAO7yB,GACd+4C,IAAWC,IAAWC,IAAa55C;AAAA,IACvC;AAAA,EACJ;AACA,SAAO04C;AACX;AACA,SAASwB,GAAsBjuB,GAAS;AACpC,MAAIA,EAAQ,YAAY;AACpB,UAAMnX,IAAOmX,EAAQ;AACrB,WAAOA,EAAQ,YACf,OAAOA,EAAQ,OACf,OAAO,eAAeA,GAAS,QAAQ;AAAA,MACnC,cAAc;AAAA,MACd,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,OAAOnX;AAAA,IACnB,CAAS;AAAA,EACL;AACJ;AACA,SAASqlC,GAAmBxkC,GAAO;AAC/B,EAAAA,EAAM,KAAK,SAAS,QAAQ,CAACsW,MAAU;AACnC,IAAAiuB,GAAsBjuB,CAAO;AAAA,EACjC,CAAC;AACL;AACA,SAASmuB,GAA0CjqC,GAAMC,GAAQ;AAC7D,QAAME,IAAaF,EAAO;AAC1B,MAAIpD,IAAQ,GACRuD;AACJ,QAAM,EAAE,QAAAC,EAAM,IAAML,GACd,EAAE,KAAAtM,GAAM,KAAAF,GAAM,YAAAkN,GAAa,YAAAC,EAAU,IAAMN,EAAO,cAAa;AACrE,SAAIK,MACA7D,IAAQO,EAAYU,GAAamC,GAAQI,EAAO,MAAM3M,CAAG,EAAE,IAAI,GAAGyM,IAAa,CAAC,IAEhFQ,IACAP,IAAQhD,EAAYU,GAAamC,GAAQI,EAAO,MAAM7M,CAAG,EAAE,KAAK,GAAGqJ,GAAOsD,CAAU,IAAItD,IAExFuD,IAAQD,IAAatD,GAElB;AAAA,IACH,OAAAA;AAAA,IACA,OAAAuD;AAAA,EACR;AACA;AACA,IAAI8pC,KAAoB;AAAA,EACpB,IAAI;AAAA,EACJ,UAAU;AAAA,IACN,WAAW;AAAA,IACX,SAAS;AAAA,EACjB;AAAA,EACI,sBAAsB,CAAC1kC,GAAO9N,GAAMiB,MAAU;AAC1C,QAAI,CAACA,EAAQ,SAAS;AAClB,MAAAqxC,GAAmBxkC,CAAK;AACxB;AAAA,IACJ;AACA,UAAMqlB,IAAiBrlB,EAAM;AAC7B,IAAAA,EAAM,KAAK,SAAS,QAAQ,CAACsW,GAASlG,MAAe;AACjD,YAAM,EAAE,OAAA0G,GAAQ,WAAApP,EAAS,IAAM4O,GACzB9b,IAAOwF,EAAM,eAAeoQ,CAAY,GACxCjR,IAAO2X,KAASR,EAAQ;AAO9B,UANIzS,GAAQ;AAAA,QACR6D;AAAA,QACA1H,EAAM,QAAQ;AAAA,MAC9B,CAAa,MAAM,OAGH,CAACxF,EAAK,WAAW;AACjB;AAEJ,YAAMmqC,IAAQ3kC,EAAM,OAAOxF,EAAK,OAAO;AAIvC,UAHImqC,EAAM,SAAS,YAAYA,EAAM,SAAS,UAG1C3kC,EAAM,QAAQ;AACd;AAEJ,UAAI,EAAE,OAAA3I,GAAQ,OAAAuD,EAAK,IAAM6pC,GAA0CjqC,GAAM2E,CAAI;AAC7E,YAAMylC,IAAYzxC,EAAQ,aAAa,IAAIkyB;AAC3C,UAAIzqB,KAASgqC,GAAW;AACpB,QAAAL,GAAsBjuB,CAAO;AAC7B;AAAA,MACJ;AACA,MAAIjlB,EAAcylB,CAAK,MACnBR,EAAQ,QAAQnX,GAChB,OAAOmX,EAAQ,MACf,OAAO,eAAeA,GAAS,QAAQ;AAAA,QACnC,cAAc;AAAA,QACd,YAAY;AAAA,QACZ,KAAK,WAAW;AACZ,iBAAO,KAAK;AAAA,QAChB;AAAA,QACA,KAAK,SAAS1rB,GAAG;AACb,eAAK,QAAQA;AAAA,QACjB;AAAA,MACpB,CAAiB;AAEL,UAAIm4C;AACJ,cAAO5vC,EAAQ,WAAS;AAAA,QACpB,KAAK;AACD,UAAA4vC,IAAYF,GAAe1jC,GAAM9H,GAAOuD,GAAOyqB,GAAgBlyB,CAAO;AACtE;AAAA,QACJ,KAAK;AACD,UAAA4vC,IAAYe,GAAiB3kC,GAAM9H,GAAOuD,GAAOyqB,CAAc;AAC/D;AAAA,QACJ;AACI,gBAAM,IAAI,MAAM,qCAAqClyB,EAAQ,SAAS,GAAG;AAAA,MAC7F;AACY,MAAAmjB,EAAQ,aAAaysB;AAAA,IACzB,CAAC;AAAA,EACL;AAAA,EACA,QAAS/iC,GAAO;AACZ,IAAAwkC,GAAmBxkC,CAAK;AAAA,EAC5B;AACJ;AAEA,SAAS6kC,GAAU5iC,GAAMnP,GAAQoD,GAAU;AACvC,QAAMqZ,IAAWtN,EAAK,UAChBxH,IAASwH,EAAK,QACd6iC,IAAUhyC,EAAO,QACjBgB,IAAQ,CAAA;AACd,aAAWya,KAAWgB,GAAS;AAC3B,QAAI,EAAE,OAAAlY,GAAQ,KAAAC,EAAG,IAAMiX;AACvB,IAAAjX,IAAMytC,GAAgB1tC,GAAOC,GAAKmD,CAAM;AACxC,UAAM+T,IAASw2B,GAAW9uC,GAAUuE,EAAOpD,CAAK,GAAGoD,EAAOnD,CAAG,GAAGiX,EAAQ,IAAI;AAC5E,QAAI,CAACzb,EAAO,UAAU;AAClB,MAAAgB,EAAM,KAAK;AAAA,QACP,QAAQya;AAAA,QACR,QAAQC;AAAA,QACR,OAAO/T,EAAOpD,CAAK;AAAA,QACnB,KAAKoD,EAAOnD,CAAG;AAAA,MAC/B,CAAa;AACD;AAAA,IACJ;AACA,UAAM2tC,IAAiB31B,GAAexc,GAAQ0b,CAAM;AACpD,eAAW02B,KAAOD,GAAe;AAC7B,YAAME,IAAYH,GAAW9uC,GAAU4uC,EAAQI,EAAI,KAAK,GAAGJ,EAAQI,EAAI,GAAG,GAAGA,EAAI,IAAI,GAC/EE,IAAcv2B,GAAcN,GAAS9T,GAAQ0qC,CAAS;AAC5D,iBAAWE,KAAcD;AACrB,QAAAtxC,EAAM,KAAK;AAAA,UACP,QAAQuxC;AAAA,UACR,QAAQH;AAAA,UACR,OAAO;AAAA,YACH,CAAChvC,CAAQ,GAAGovC,GAAS92B,GAAQ22B,GAAW,SAAS,KAAK,GAAG;AAAA,UACjF;AAAA,UACoB,KAAK;AAAA,YACD,CAACjvC,CAAQ,GAAGovC,GAAS92B,GAAQ22B,GAAW,OAAO,KAAK,GAAG;AAAA,UAC/E;AAAA,QACA,CAAiB;AAAA,IAET;AAAA,EACJ;AACA,SAAOrxC;AACX;AACA,SAASkxC,GAAW9uC,GAAUqyB,GAAOhwB,GAAMuR,GAAM;AAC7C,MAAIA;AACA;AAEJ,MAAIzS,IAAQkxB,EAAMryB,CAAQ,GACtBoB,IAAMiB,EAAKrC,CAAQ;AACvB,SAAIA,MAAa,YACbmB,IAAQF,EAAgBE,CAAK,GAC7BC,IAAMH,EAAgBG,CAAG,IAEtB;AAAA,IACH,UAAApB;AAAA,IACA,OAAAmB;AAAA,IACA,KAAAC;AAAA,EACR;AACA;AACA,SAASiuC,GAAoBC,GAAUvjC,GAAM;AACzC,QAAM,EAAE,GAAA3W,IAAG,MAAO,GAAAN,IAAG,KAAI,IAAMw6C,KAAY,CAAA,GACrCC,IAAaxjC,EAAK,QAClBxH,IAAS,CAAA;AACf,SAAAwH,EAAK,SAAS,QAAQ,CAAC,EAAE,OAAA5K,GAAQ,KAAAC,EAAG,MAAM;AACtC,IAAAA,IAAMytC,GAAgB1tC,GAAOC,GAAKmuC,CAAU;AAC5C,UAAMld,IAAQkd,EAAWpuC,CAAK,GACxBkB,IAAOktC,EAAWnuC,CAAG;AAC3B,IAAItM,MAAM,QACNyP,EAAO,KAAK;AAAA,MACR,GAAG8tB,EAAM;AAAA,MACT,GAAAv9B;AAAA,IAChB,CAAa,GACDyP,EAAO,KAAK;AAAA,MACR,GAAGlC,EAAK;AAAA,MACR,GAAAvN;AAAA,IAChB,CAAa,KACMM,MAAM,SACbmP,EAAO,KAAK;AAAA,MACR,GAAAnP;AAAA,MACA,GAAGi9B,EAAM;AAAA,IACzB,CAAa,GACD9tB,EAAO,KAAK;AAAA,MACR,GAAAnP;AAAA,MACA,GAAGiN,EAAK;AAAA,IACxB,CAAa;AAAA,EAET,CAAC,GACMkC;AACX;AACA,SAASsqC,GAAgB1tC,GAAOC,GAAKmD,GAAQ;AACzC,SAAMnD,IAAMD,GAAOC,KAAM;AACrB,UAAM+D,IAAQZ,EAAOnD,CAAG;AACxB,QAAI,CAAC,MAAM+D,EAAM,CAAC,KAAK,CAAC,MAAMA,EAAM,CAAC;AACjC;AAAA,EAER;AACA,SAAO/D;AACX;AACA,SAASguC,GAAS76C,GAAGM,GAAGwY,GAAMtR,GAAI;AAC9B,SAAIxH,KAAKM,IACEkH,EAAGxH,EAAE8Y,CAAI,GAAGxY,EAAEwY,CAAI,CAAC,IAEvB9Y,IAAIA,EAAE8Y,CAAI,IAAIxY,IAAIA,EAAEwY,CAAI,IAAI;AACvC;AAEA,SAASmiC,GAAoBF,GAAUvjC,GAAM;AACzC,MAAIxH,IAAS,CAAA,GACTkrC,IAAQ;AACZ,SAAIp0C,EAAQi0C,CAAQ,KAChBG,IAAQ,IACRlrC,IAAS+qC,KAET/qC,IAAS8qC,GAAoBC,GAAUvjC,CAAI,GAExCxH,EAAO,SAAS,IAAIslC,GAAY;AAAA,IACnC,QAAAtlC;AAAA,IACA,SAAS;AAAA,MACL,SAAS;AAAA,IACrB;AAAA,IACQ,OAAAkrC;AAAA,IACA,WAAWA;AAAA,EACnB,CAAK,IAAI;AACT;AACA,SAASC,GAAiB/yC,GAAQ;AAC9B,SAAOA,KAAUA,EAAO,SAAS;AACrC;AAEA,SAASgzC,GAAetyC,GAAS2E,GAAO4tC,GAAW;AAE/C,MAAIC,IADWxyC,EAAQ2E,CAAK,EACV;AAClB,QAAM8tC,IAAU;AAAA,IACZ9tC;AAAA,EACR;AACI,MAAIpF;AACJ,MAAI,CAACgzC;AACD,WAAOC;AAEX,SAAMA,MAAS,MAASC,EAAQ,QAAQD,CAAI,MAAM,MAAG;AACjD,QAAI,CAACt0C,EAAes0C,CAAI;AACpB,aAAOA;AAGX,QADAjzC,IAASS,EAAQwyC,CAAI,GACjB,CAACjzC;AACD,aAAO;AAEX,QAAIA,EAAO;AACP,aAAOizC;AAEX,IAAAC,EAAQ,KAAKD,CAAI,GACjBA,IAAOjzC,EAAO;AAAA,EAClB;AACA,SAAO;AACX;AACC,SAASmzC,GAAYhkC,GAAM/J,GAAO0C,GAAO;AACrC,QAAMmrC,IAAOG,GAAgBjkC,CAAI;AAClC,MAAIzQ,EAASu0C,CAAI;AACb,WAAO,MAAMA,EAAK,KAAK,IAAI,KAAQA;AAEvC,MAAIjzC,IAAS,WAAWizC,CAAI;AAC5B,SAAIt0C,EAAeqB,CAAM,KAAK,KAAK,MAAMA,CAAM,MAAMA,IAC1CqzC,GAAkBJ,EAAK,CAAC,GAAG7tC,GAAOpF,GAAQ8H,CAAK,IAEnD;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACR,EAAM,QAAQmrC,CAAI,KAAK,KAAKA;AAC5B;AACA,SAASI,GAAkBC,GAASluC,GAAOpF,GAAQ8H,GAAO;AAItD,UAHIwrC,MAAY,OAAOA,MAAY,SAC/BtzC,IAASoF,IAAQpF,IAEjBA,MAAWoF,KAASpF,IAAS,KAAKA,KAAU8H,IACrC,KAEJ9H;AACX;AACC,SAASuzC,GAAgBN,GAAMn1B,GAAO;AACnC,MAAI3Q,IAAQ;AACZ,SAAI8lC,MAAS,UACT9lC,IAAQ2Q,EAAM,SACPm1B,MAAS,QAChB9lC,IAAQ2Q,EAAM,MACPpf,EAASu0C,CAAI,IACpB9lC,IAAQ2Q,EAAM,iBAAiBm1B,EAAK,KAAK,IAClCn1B,EAAM,iBACb3Q,IAAQ2Q,EAAM,aAAY,IAEvB3Q;AACX;AACC,SAASqmC,GAAgBP,GAAMn1B,GAAOkJ,GAAY;AAC/C,MAAIxoB;AACJ,SAAIy0C,MAAS,UACTz0C,IAAQwoB,IACDisB,MAAS,QAChBz0C,IAAQsf,EAAM,QAAQ,UAAUA,EAAM,MAAMA,EAAM,MAC3Cpf,EAASu0C,CAAI,IACpBz0C,IAAQy0C,EAAK,QAEbz0C,IAAQsf,EAAM,aAAY,GAEvBtf;AACX;AACC,SAAS40C,GAAgBjkC,GAAM;AAC5B,QAAM9O,IAAU8O,EAAK,SACfskC,IAAapzC,EAAQ;AAC3B,MAAI4yC,IAAOn0C,EAAe20C,KAAcA,EAAW,QAAQA,CAAU;AAIrE,SAHIR,MAAS,WACTA,IAAO,CAAC,CAAC5yC,EAAQ,kBAEjB4yC,MAAS,MAASA,MAAS,OACpB,KAEPA,MAAS,KACF,WAEJA;AACX;AAEA,SAASS,GAAgB3zC,GAAQ;AAC7B,QAAM,EAAE,OAAA+d,GAAQ,OAAA1Y,GAAQ,MAAA+J,EAAI,IAAMpP,GAC5B4H,IAAS,CAAA,GACT8U,IAAWtN,EAAK,UAChBwkC,IAAexkC,EAAK,QACpBykC,IAAaC,GAAc/1B,GAAO1Y,CAAK;AAC7C,EAAAwuC,EAAW,KAAKhB,GAAoB;AAAA,IAChC,GAAG;AAAA,IACH,GAAG90B,EAAM;AAAA,EACjB,GAAO3O,CAAI,CAAC;AACR,WAAQ5X,IAAI,GAAGA,IAAIklB,EAAS,QAAQllB,KAAI;AACpC,UAAMkkB,IAAUgB,EAASllB,CAAC;AAC1B,aAAQgC,IAAIkiB,EAAQ,OAAOliB,KAAKkiB,EAAQ,KAAKliB;AACzC,MAAAu6C,GAAensC,GAAQgsC,EAAap6C,CAAC,GAAGq6C,CAAU;AAAA,EAE1D;AACA,SAAO,IAAI3G,GAAY;AAAA,IACnB,QAAAtlC;AAAA,IACA,SAAS,CAAA;AAAA,EACjB,CAAK;AACL;AACC,SAASksC,GAAc/1B,GAAO1Y,GAAO;AAClC,QAAM2uC,IAAQ,CAAA,GACRxb,IAAQza,EAAM,wBAAwB,MAAM;AAClD,WAAQvmB,IAAI,GAAGA,IAAIghC,EAAM,QAAQhhC,KAAI;AACjC,UAAMmQ,IAAO6wB,EAAMhhC,CAAC;AACpB,QAAImQ,EAAK,UAAUtC;AACf;AAEJ,IAAKsC,EAAK,UACNqsC,EAAM,QAAQrsC,EAAK,OAAO;AAAA,EAElC;AACA,SAAOqsC;AACX;AACC,SAASD,GAAensC,GAAQqsC,GAAaJ,GAAY;AACtD,QAAMK,IAAY,CAAA;AAClB,WAAQ16C,IAAI,GAAGA,IAAIq6C,EAAW,QAAQr6C,KAAI;AACtC,UAAM4V,IAAOykC,EAAWr6C,CAAC,GACnB,EAAE,OAAAk8B,GAAQ,MAAAhwB,GAAO,OAAA8C,EAAK,IAAM2rC,GAAU/kC,GAAM6kC,GAAa,GAAG;AAClE,QAAI,GAACzrC,KAASktB,KAAShwB;AAGvB,UAAIgwB;AACA,QAAAwe,EAAU,QAAQ1rC,CAAK;AAAA,eAEvBZ,EAAO,KAAKY,CAAK,GACb,CAAC9C;AACD;AAAA;AAAA,EAGZ;AACA,EAAAkC,EAAO,KAAK,GAAGssC,CAAS;AAC5B;AACC,SAASC,GAAU/kC,GAAM6kC,GAAa5wC,GAAU;AAC7C,QAAMmF,IAAQ4G,EAAK,YAAY6kC,GAAa5wC,CAAQ;AACpD,MAAI,CAACmF;AACD,WAAO,CAAA;AAEX,QAAM4rC,IAAa5rC,EAAMnF,CAAQ,GAC3BqZ,IAAWtN,EAAK,UAChBwjC,IAAaxjC,EAAK;AACxB,MAAIsmB,IAAQ,IACRhwB,IAAO;AACX,WAAQlO,IAAI,GAAGA,IAAIklB,EAAS,QAAQllB,KAAI;AACpC,UAAMkkB,IAAUgB,EAASllB,CAAC,GACpB68C,IAAazB,EAAWl3B,EAAQ,KAAK,EAAErY,CAAQ,GAC/CixC,IAAY1B,EAAWl3B,EAAQ,GAAG,EAAErY,CAAQ;AAClD,QAAI4B,GAAWmvC,GAAYC,GAAYC,CAAS,GAAG;AAC/C,MAAA5e,IAAQ0e,MAAeC,GACvB3uC,IAAO0uC,MAAeE;AACtB;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AAAA,IACH,OAAA5e;AAAA,IACA,MAAAhwB;AAAA,IACA,OAAA8C;AAAA,EACR;AACA;AAEA,MAAM+rC,GAAU;AAAA,EACZ,YAAYrlC,GAAK;AACb,SAAK,IAAIA,EAAK,GACd,KAAK,IAAIA,EAAK,GACd,KAAK,SAASA,EAAK;AAAA,EACvB;AAAA,EACA,YAAYxD,GAAKiQ,GAAQzM,GAAM;AAC3B,UAAM,EAAE,GAAAzW,GAAI,GAAAN,GAAI,QAAAiW,EAAM,IAAM;AAC5B,WAAAuN,IAASA,KAAU;AAAA,MACf,OAAO;AAAA,MACP,KAAK/Z;AAAA,IACjB,GACQ8J,EAAI,IAAIjT,GAAGN,GAAGiW,GAAQuN,EAAO,KAAKA,EAAO,OAAO,EAAI,GAC7C,CAACzM,EAAK;AAAA,EACjB;AAAA,EACA,YAAY1G,GAAO;AACf,UAAM,EAAE,GAAA/P,GAAI,GAAAN,GAAI,QAAAiW,EAAM,IAAM,MACtBnK,IAAQuE,EAAM;AACpB,WAAO;AAAA,MACH,GAAG/P,IAAI,KAAK,IAAIwL,CAAK,IAAImK;AAAA,MACzB,GAAGjW,IAAI,KAAK,IAAI8L,CAAK,IAAImK;AAAA,MACzB,OAAAnK;AAAA,IACZ;AAAA,EACI;AACJ;AAEA,SAASuwC,GAAWx0C,GAAQ;AACxB,QAAM,EAAE,OAAAmN,GAAQ,MAAA+lC,GAAO,MAAA9jC,EAAI,IAAMpP;AACjC,MAAIpB,EAAes0C,CAAI;AACnB,WAAOuB,GAAetnC,GAAO+lC,CAAI;AAErC,MAAIA,MAAS;AACT,WAAOS,GAAgB3zC,CAAM;AAEjC,MAAIkzC,MAAS;AACT,WAAO;AAEX,QAAMP,IAAW+B,GAAgB10C,CAAM;AACvC,SAAI2yC,aAAoB4B,KACb5B,IAEJE,GAAoBF,GAAUvjC,CAAI;AAC7C;AACC,SAASqlC,GAAetnC,GAAO9H,GAAO;AACnC,QAAMsC,IAAOwF,EAAM,eAAe9H,CAAK;AAEvC,SADgBsC,KAAQwF,EAAM,iBAAiB9H,CAAK,IACnCsC,EAAK,UAAU;AACpC;AACA,SAAS+sC,GAAgB10C,GAAQ;AAE7B,UADcA,EAAO,SAAS,CAAA,GACpB,2BACC20C,GAAwB30C,CAAM,IAElC40C,GAAsB50C,CAAM;AACvC;AACA,SAAS40C,GAAsB50C,GAAQ;AACnC,QAAM,EAAE,OAAA+d,IAAO,IAAK,MAAAm1B,EAAI,IAAMlzC,GACxBoN,IAAQomC,GAAgBN,GAAMn1B,CAAK;AACzC,MAAInf,EAAewO,CAAK,GAAG;AACvB,UAAMob,IAAazK,EAAM,aAAY;AACrC,WAAO;AAAA,MACH,GAAGyK,IAAapb,IAAQ;AAAA,MACxB,GAAGob,IAAa,OAAOpb;AAAA,IACnC;AAAA,EACI;AACA,SAAO;AACX;AACA,SAASunC,GAAwB30C,GAAQ;AACrC,QAAM,EAAE,OAAA+d,GAAQ,MAAAm1B,EAAI,IAAMlzC,GACpBM,IAAUyd,EAAM,SAChBsL,IAAStL,EAAM,UAAS,EAAG,QAC3BvZ,IAAQlE,EAAQ,UAAUyd,EAAM,MAAMA,EAAM,KAC5Ctf,IAAQg1C,GAAgBP,GAAMn1B,GAAOvZ,CAAK,GAC1CvE,IAAS,CAAA;AACf,MAAIK,EAAQ,KAAK,UAAU;AACvB,UAAMqpB,IAAS5L,EAAM,yBAAyB,GAAGvZ,CAAK;AACtD,WAAO,IAAI+vC,GAAU;AAAA,MACjB,GAAG5qB,EAAO;AAAA,MACV,GAAGA,EAAO;AAAA,MACV,QAAQ5L,EAAM,8BAA8Btf,CAAK;AAAA,IAC7D,CAAS;AAAA,EACL;AACA,WAAQjH,IAAI,GAAGA,IAAI6xB,GAAQ,EAAE7xB;AACzB,IAAAyI,EAAO,KAAK8d,EAAM,yBAAyBvmB,GAAGiH,CAAK,CAAC;AAExD,SAAOwB;AACX;AAEA,SAAS40C,GAAUnpC,GAAK1L,GAAQuO,GAAM;AAClC,QAAMtO,IAASu0C,GAAWx0C,CAAM,GAC1B,EAAE,OAAAmN,GAAQ,OAAA9H,GAAQ,MAAA+J,GAAO,OAAA2O,GAAQ,MAAA3V,EAAI,IAAMpI,GAC3C80C,IAAW1lC,EAAK,SAChBskC,IAAaoB,EAAS,MACtBh3C,IAAQg3C,EAAS,iBACjB,EAAE,OAAAC,IAAOj3C,GAAQ,OAAAk2C,IAAOl2C,EAAK,IAAM41C,KAAc,CAAA,GACjD/rC,IAAOwF,EAAM,eAAe9H,CAAK,GACjC+Y,IAAOD,GAAmBhR,GAAOxF,CAAI;AAC3C,EAAI1H,KAAUmP,EAAK,OAAO,WACtBX,GAAS/C,GAAK6C,CAAI,GAClBymC,GAAOtpC,GAAK;AAAA,IACR,MAAA0D;AAAA,IACA,QAAAnP;AAAA,IACA,OAAA80C;AAAA,IACA,OAAAf;AAAA,IACA,MAAAzlC;AAAA,IACA,OAAAwP;AAAA,IACA,MAAA3V;AAAA,IACA,MAAAgW;AAAA,EACZ,CAAS,GACD1P,GAAWhD,CAAG;AAEtB;AACA,SAASspC,GAAOtpC,GAAK2T,GAAK;AACtB,QAAM,EAAE,MAAAjQ,GAAO,QAAAnP,GAAS,OAAA80C,GAAQ,OAAAf,GAAQ,MAAAzlC,GAAO,OAAAwP,GAAQ,MAAAK,EAAI,IAAMiB,GAC3Dhc,IAAW+L,EAAK,QAAQ,UAAUiQ,EAAI;AAC5C,EAAA3T,EAAI,KAAI;AACR,MAAIupC,IAAYjB;AAChB,EAAIA,MAAUe,MACN1xC,MAAa,OACb6xC,GAAaxpC,GAAKzL,GAAQsO,EAAK,GAAG,GAClC2kC,GAAKxnC,GAAK;AAAA,IACN,MAAA0D;AAAA,IACA,QAAAnP;AAAA,IACA,OAAO80C;AAAA,IACP,OAAAh3B;AAAA,IACA,UAAA1a;AAAA,IACA,MAAA+a;AAAA,EAChB,CAAa,GACD1S,EAAI,QAAO,GACXA,EAAI,KAAI,GACRwpC,GAAaxpC,GAAKzL,GAAQsO,EAAK,MAAM,KAC9BlL,MAAa,QACpB8xC,GAAezpC,GAAKzL,GAAQsO,EAAK,IAAI,GACrC2kC,GAAKxnC,GAAK;AAAA,IACN,MAAA0D;AAAA,IACA,QAAAnP;AAAA,IACA,OAAO+zC;AAAA,IACP,OAAAj2B;AAAA,IACA,UAAA1a;AAAA,IACA,MAAA+a;AAAA,EAChB,CAAa,GACD1S,EAAI,QAAO,GACXA,EAAI,KAAI,GACRypC,GAAezpC,GAAKzL,GAAQsO,EAAK,KAAK,GACtC0mC,IAAYF,KAGpB7B,GAAKxnC,GAAK;AAAA,IACN,MAAA0D;AAAA,IACA,QAAAnP;AAAA,IACA,OAAOg1C;AAAA,IACP,OAAAl3B;AAAA,IACA,UAAA1a;AAAA,IACA,MAAA+a;AAAA,EACR,CAAK,GACD1S,EAAI,QAAO;AACf;AACA,SAASwpC,GAAaxpC,GAAKzL,GAAQm1C,GAAO;AACtC,QAAM,EAAE,UAAA14B,GAAW,QAAA9U,EAAM,IAAM3H;AAC/B,MAAIy1B,IAAQ,IACR2f,IAAW;AACf,EAAA3pC,EAAI,UAAS;AACb,aAAWgQ,KAAWgB,GAAS;AAC3B,UAAM,EAAE,OAAAlY,GAAQ,KAAAC,EAAG,IAAMiX,GACnB3G,IAAanN,EAAOpD,CAAK,GACzByoB,IAAYrlB,EAAOsqC,GAAgB1tC,GAAOC,GAAKmD,CAAM,CAAC;AAC5D,IAAI8tB,KACAhqB,EAAI,OAAOqJ,EAAW,GAAGA,EAAW,CAAC,GACrC2gB,IAAQ,OAERhqB,EAAI,OAAOqJ,EAAW,GAAGqgC,CAAK,GAC9B1pC,EAAI,OAAOqJ,EAAW,GAAGA,EAAW,CAAC,IAEzCsgC,IAAW,CAAC,CAACp1C,EAAO,YAAYyL,GAAKgQ,GAAS;AAAA,MAC1C,MAAM25B;AAAA,IAClB,CAAS,GACGA,IACA3pC,EAAI,UAAS,IAEbA,EAAI,OAAOuhB,EAAU,GAAGmoB,CAAK;AAAA,EAErC;AACA,EAAA1pC,EAAI,OAAOzL,EAAO,MAAK,EAAG,GAAGm1C,CAAK,GAClC1pC,EAAI,UAAS,GACbA,EAAI,KAAI;AACZ;AACA,SAASypC,GAAezpC,GAAKzL,GAAQq1C,GAAO;AACxC,QAAM,EAAE,UAAA54B,GAAW,QAAA9U,EAAM,IAAM3H;AAC/B,MAAIy1B,IAAQ,IACR2f,IAAW;AACf,EAAA3pC,EAAI,UAAS;AACb,aAAWgQ,KAAWgB,GAAS;AAC3B,UAAM,EAAE,OAAAlY,GAAQ,KAAAC,EAAG,IAAMiX,GACnB3G,IAAanN,EAAOpD,CAAK,GACzByoB,IAAYrlB,EAAOsqC,GAAgB1tC,GAAOC,GAAKmD,CAAM,CAAC;AAC5D,IAAI8tB,KACAhqB,EAAI,OAAOqJ,EAAW,GAAGA,EAAW,CAAC,GACrC2gB,IAAQ,OAERhqB,EAAI,OAAO4pC,GAAOvgC,EAAW,CAAC,GAC9BrJ,EAAI,OAAOqJ,EAAW,GAAGA,EAAW,CAAC,IAEzCsgC,IAAW,CAAC,CAACp1C,EAAO,YAAYyL,GAAKgQ,GAAS;AAAA,MAC1C,MAAM25B;AAAA,IAClB,CAAS,GACGA,IACA3pC,EAAI,UAAS,IAEbA,EAAI,OAAO4pC,GAAOroB,EAAU,CAAC;AAAA,EAErC;AACA,EAAAvhB,EAAI,OAAO4pC,GAAOr1C,EAAO,MAAK,EAAG,CAAC,GAClCyL,EAAI,UAAS,GACbA,EAAI,KAAI;AACZ;AACA,SAASwnC,GAAKxnC,GAAK2T,GAAK;AACpB,QAAM,EAAE,MAAAjQ,GAAO,QAAAnP,GAAS,UAAAoD,GAAW,OAAAvF,GAAQ,OAAAigB,GAAQ,MAAAK,EAAI,IAAMiB,GACvD3C,IAAWs1B,GAAU5iC,GAAMnP,GAAQoD,CAAQ;AACjD,aAAW,EAAE,QAAQkyC,GAAM,QAAQlD,GAAM,OAAA7tC,GAAQ,KAAAC,EAAG,KAAOiY,GAAS;AAChE,UAAM,EAAE,OAAO,EAAE,iBAAAshB,IAAiBlgC,EAAK,IAAM,CAAA,EAAE,IAAMy3C,GAC/CC,IAAWv1C,MAAW;AAC5B,IAAAyL,EAAI,KAAI,GACRA,EAAI,YAAYsyB,GAChByX,GAAW/pC,GAAKqS,GAAOK,GAAMo3B,KAAYrD,GAAW9uC,GAAUmB,GAAOC,CAAG,CAAC,GACzEiH,EAAI,UAAS;AACb,UAAM2pC,IAAW,CAAC,CAACjmC,EAAK,YAAY1D,GAAK6pC,CAAG;AAC5C,QAAIt+B;AACJ,QAAIu+B,GAAU;AACV,MAAIH,IACA3pC,EAAI,UAAS,IAEbgqC,GAAmBhqC,GAAKzL,GAAQwE,GAAKpB,CAAQ;AAEjD,YAAMsyC,IAAa,CAAC,CAAC11C,EAAO,YAAYyL,GAAK2mC,GAAK;AAAA,QAC9C,MAAMgD;AAAA,QACN,SAAS;AAAA,MACzB,CAAa;AACD,MAAAp+B,IAAOo+B,KAAYM,GACd1+B,KACDy+B,GAAmBhqC,GAAKzL,GAAQuE,GAAOnB,CAAQ;AAAA,IAEvD;AACA,IAAAqI,EAAI,UAAS,GACbA,EAAI,KAAKuL,IAAO,YAAY,SAAS,GACrCvL,EAAI,QAAO;AAAA,EACf;AACJ;AACA,SAAS+pC,GAAW/pC,GAAKqS,GAAOK,GAAMzC,GAAQ;AAC1C,QAAMqC,IAAYD,EAAM,MAAM,WACxB,EAAE,UAAA1a,GAAW,OAAAmB,GAAQ,KAAAC,EAAG,IAAMkX,KAAU,CAAA;AAC9C,MAAItY,MAAa,OAAOA,MAAa,KAAK;AACtC,QAAIkE,GAAM+H,GAAK9H,GAAO+H;AACtB,IAAIlM,MAAa,OACbkE,IAAO/C,GACP8K,IAAM0O,EAAU,KAChBxW,IAAQ/C,GACR8K,IAASyO,EAAU,WAEnBzW,IAAOyW,EAAU,MACjB1O,IAAM9K,GACNgD,IAAQwW,EAAU,OAClBzO,IAAS9K,IAEbiH,EAAI,UAAS,GACT0S,MACA7W,IAAO,KAAK,IAAIA,GAAM6W,EAAK,IAAI,GAC/B5W,IAAQ,KAAK,IAAIA,GAAO4W,EAAK,KAAK,GAClC9O,IAAM,KAAK,IAAIA,GAAK8O,EAAK,GAAG,GAC5B7O,IAAS,KAAK,IAAIA,GAAQ6O,EAAK,MAAM,IAEzC1S,EAAI,KAAKnE,GAAM+H,GAAK9H,IAAQD,GAAMgI,IAASD,CAAG,GAC9C5D,EAAI,KAAI;AAAA,EACZ;AACJ;AACA,SAASgqC,GAAmBhqC,GAAKzL,GAAQuI,GAAOnF,GAAU;AACtD,QAAMuyC,IAAoB31C,EAAO,YAAYuI,GAAOnF,CAAQ;AAC5D,EAAIuyC,KACAlqC,EAAI,OAAOkqC,EAAkB,GAAGA,EAAkB,CAAC;AAE3D;AAEA,IAAIvwC,KAAQ;AAAA,EACR,IAAI;AAAA,EACJ,oBAAqB8H,GAAOyiC,GAAOtvC,GAAS;AACxC,UAAMyH,KAASoF,EAAM,KAAK,YAAY,CAAA,GAAI,QACpCzM,IAAU,CAAA;AAChB,QAAIiH,GAAMnQ,GAAG4X,GAAMpP;AACnB,SAAIxI,IAAI,GAAGA,IAAIuQ,GAAO,EAAEvQ;AACpB,MAAAmQ,IAAOwF,EAAM,eAAe3V,CAAC,GAC7B4X,IAAOzH,EAAK,SACZ3H,IAAS,MACLoP,KAAQA,EAAK,WAAWA,aAAgB89B,OACxCltC,IAAS;AAAA,QACL,SAASmN,EAAM,iBAAiB3V,CAAC;AAAA,QACjC,OAAOA;AAAA,QACP,MAAM47C,GAAYhkC,GAAM5X,GAAGuQ,CAAK;AAAA,QAChC,OAAAoF;AAAA,QACA,MAAMxF,EAAK,WAAW,QAAQ;AAAA,QAC9B,OAAOA,EAAK;AAAA,QACZ,MAAAyH;AAAA,MACpB,IAEYzH,EAAK,UAAU3H,GACfU,EAAQ,KAAKV,CAAM;AAEvB,SAAIxI,IAAI,GAAGA,IAAIuQ,GAAO,EAAEvQ;AAEpB,MADAwI,IAASU,EAAQlJ,CAAC,GACd,GAACwI,KAAUA,EAAO,SAAS,QAG/BA,EAAO,OAAOgzC,GAAetyC,GAASlJ,GAAG8I,EAAQ,SAAS;AAAA,EAElE;AAAA,EACA,WAAY6M,GAAOyiC,GAAOtvC,GAAS;AAC/B,UAAMqe,IAAOre,EAAQ,aAAa,cAC5BygB,IAAW5T,EAAM,6BAA4B,GAC7CoB,IAAOpB,EAAM;AACnB,aAAQ3V,IAAIupB,EAAS,SAAS,GAAGvpB,KAAK,GAAG,EAAEA,GAAE;AACzC,YAAMwI,IAAS+gB,EAASvpB,CAAC,EAAE;AAC3B,MAAKwI,MAGLA,EAAO,KAAK,oBAAoBuO,GAAMvO,EAAO,IAAI,GAC7C2e,KAAQ3e,EAAO,QACf60C,GAAU1nC,EAAM,KAAKnN,GAAQuO,CAAI;AAAA,IAEzC;AAAA,EACJ;AAAA,EACA,mBAAoBpB,GAAOyiC,GAAOtvC,GAAS;AACvC,QAAIA,EAAQ,aAAa;AACrB;AAEJ,UAAMygB,IAAW5T,EAAM,6BAA4B;AACnD,aAAQ3V,IAAIupB,EAAS,SAAS,GAAGvpB,KAAK,GAAG,EAAEA,GAAE;AACzC,YAAMwI,IAAS+gB,EAASvpB,CAAC,EAAE;AAC3B,MAAIu7C,GAAiB/yC,CAAM,KACvB60C,GAAU1nC,EAAM,KAAKnN,GAAQmN,EAAM,SAAS;AAAA,IAEpD;AAAA,EACJ;AAAA,EACA,kBAAmBA,GAAO9N,GAAMiB,GAAS;AACrC,UAAMN,IAASX,EAAK,KAAK;AACzB,IAAI,CAAC0zC,GAAiB/yC,CAAM,KAAKM,EAAQ,aAAa,uBAGtDu0C,GAAU1nC,EAAM,KAAKnN,GAAQmN,EAAM,SAAS;AAAA,EAChD;AAAA,EACA,UAAU;AAAA,IACN,WAAW;AAAA,IACX,UAAU;AAAA,EAClB;AACA;AAEA,MAAM0oC,KAAa,CAACC,GAAWtX,MAAW;AACtC,MAAI,EAAE,WAAAuX,IAAWvX,GAAW,UAAAwX,IAAUxX,EAAQ,IAAMsX;AACpD,SAAIA,EAAU,kBACVC,IAAY,KAAK,IAAIA,GAAWvX,CAAQ,GACxCwX,IAAWF,EAAU,mBAAmB,KAAK,IAAIE,GAAUxX,CAAQ,IAEhE;AAAA,IACH,UAAAwX;AAAA,IACA,WAAAD;AAAA,IACA,YAAY,KAAK,IAAIvX,GAAUuX,CAAS;AAAA,EAChD;AACA,GACME,KAAa,CAACr+C,GAAGM,MAAIN,MAAM,QAAQM,MAAM,QAAQN,EAAE,iBAAiBM,EAAE,gBAAgBN,EAAE,UAAUM,EAAE;AAC1G,MAAMg+C,WAAelhB,GAAQ;AAAA,EAC5B,YAAYnV,GAAO;AACZ,UAAK,GACL,KAAK,SAAS,IACd,KAAK,iBAAiB,CAAA,GAC7B,KAAK,eAAe,MACb,KAAK,eAAe,IACpB,KAAK,QAAQA,EAAO,OACpB,KAAK,UAAUA,EAAO,SACtB,KAAK,MAAMA,EAAO,KAClB,KAAK,cAAc,QACnB,KAAK,cAAc,QACnB,KAAK,aAAa,QAClB,KAAK,YAAY,QACjB,KAAK,WAAW,QAChB,KAAK,MAAM,QACX,KAAK,SAAS,QACd,KAAK,OAAO,QACZ,KAAK,QAAQ,QACb,KAAK,SAAS,QACd,KAAK,QAAQ,QACb,KAAK,WAAW,QAChB,KAAK,WAAW,QAChB,KAAK,SAAS,QACd,KAAK,WAAW;AAAA,EACpB;AAAA,EACA,OAAO3G,GAAUC,GAAWU,GAAS;AACjC,SAAK,WAAWX,GAChB,KAAK,YAAYC,GACjB,KAAK,WAAWU,GAChB,KAAK,cAAa,GAClB,KAAK,YAAW,GAChB,KAAK,IAAG;AAAA,EACZ;AAAA,EACA,gBAAgB;AACZ,IAAI,KAAK,kBACL,KAAK,QAAQ,KAAK,UAClB,KAAK,OAAO,KAAK,SAAS,MAC1B,KAAK,QAAQ,KAAK,UAElB,KAAK,SAAS,KAAK,WACnB,KAAK,MAAM,KAAK,SAAS,KACzB,KAAK,SAAS,KAAK;AAAA,EAE3B;AAAA,EACA,cAAc;AACV,UAAMi8B,IAAY,KAAK,QAAQ,UAAU,CAAA;AACzC,QAAIK,IAAch3C,EAAS22C,EAAU,gBAAgB;AAAA,MACjD,KAAK;AAAA,IACjB,GAAW,IAAI,KAAK,CAAA;AACZ,IAAIA,EAAU,WACVK,IAAcA,EAAY,OAAO,CAAC10C,MAAOq0C,EAAU,OAAOr0C,GAAM,KAAK,MAAM,IAAI,CAAC,IAEhFq0C,EAAU,SACVK,IAAcA,EAAY,KAAK,CAACv+C,GAAGM,MAAI49C,EAAU,KAAKl+C,GAAGM,GAAG,KAAK,MAAM,IAAI,CAAC,IAE5E,KAAK,QAAQ,WACbi+C,EAAY,QAAO,GAEvB,KAAK,cAAcA;AAAA,EACvB;AAAA,EACA,MAAM;AACF,UAAM,EAAE,SAAA71C,GAAU,KAAAoL,EAAG,IAAM;AAC3B,QAAI,CAACpL,EAAQ,SAAS;AAClB,WAAK,QAAQ,KAAK,SAAS;AAC3B;AAAA,IACJ;AACA,UAAMw1C,IAAYx1C,EAAQ,QACpB81C,IAAYtlC,EAAOglC,EAAU,IAAI,GACjCtX,IAAW4X,EAAU,MACrB3c,IAAc,KAAK,oBAAmB,GACtC,EAAE,UAAAuc,GAAW,YAAAK,EAAU,IAAMR,GAAWC,GAAWtX,CAAQ;AACjE,QAAInxB,GAAO2L;AACX,IAAAtN,EAAI,OAAO0qC,EAAU,QACjB,KAAK,kBACL/oC,IAAQ,KAAK,UACb2L,IAAS,KAAK,SAASygB,GAAa+E,GAAUwX,GAAUK,CAAU,IAAI,OAEtEr9B,IAAS,KAAK,WACd3L,IAAQ,KAAK,SAASosB,GAAa2c,GAAWJ,GAAUK,CAAU,IAAI,KAE1E,KAAK,QAAQ,KAAK,IAAIhpC,GAAO/M,EAAQ,YAAY,KAAK,QAAQ,GAC9D,KAAK,SAAS,KAAK,IAAI0Y,GAAQ1Y,EAAQ,aAAa,KAAK,SAAS;AAAA,EACtE;AAAA,EACH,SAASm5B,GAAa+E,GAAUwX,GAAUK,GAAY;AAC/C,UAAM,EAAE,KAAA3qC,GAAM,UAAAwN,GAAW,SAAS,EAAE,QAAQ,EAAE,SAAAqZ,IAAU,EAAG,IAAM,MAC3D+jB,IAAW,KAAK,iBAAiB,CAAA,GACjCC,IAAa,KAAK,aAAa;AAAA,MACjC;AAAA,IACZ,GACcvb,IAAaqb,IAAa9jB;AAChC,QAAIikB,IAAc/c;AAClB,IAAA/tB,EAAI,YAAY,QAChBA,EAAI,eAAe;AACnB,QAAI+qC,IAAM,IACNnnC,IAAM,CAAC0rB;AACX,gBAAK,YAAY,QAAQ,CAAC1P,GAAY9zB,MAAI;AACtC,YAAMujB,IAAYi7B,IAAWxX,IAAW,IAAI9yB,EAAI,YAAY4f,EAAW,IAAI,EAAE;AAC7E,OAAI9zB,MAAM,KAAK++C,EAAWA,EAAW,SAAS,CAAC,IAAIx7B,IAAY,IAAIwX,IAAUrZ,OACzEs9B,KAAexb,GACfub,EAAWA,EAAW,UAAU/+C,IAAI,IAAI,IAAI,EAAE,IAAI,GAClD8X,KAAO0rB,GACPyb,MAEJH,EAAS9+C,CAAC,IAAI;AAAA,QACV,MAAM;AAAA,QACN,KAAA8X;AAAA,QACA,KAAAmnC;AAAA,QACA,OAAO17B;AAAA,QACP,QAAQs7B;AAAA,MACxB,GACYE,EAAWA,EAAW,SAAS,CAAC,KAAKx7B,IAAYwX;AAAA,IACrD,CAAC,GACMikB;AAAA,EACX;AAAA,EACA,SAAS/c,GAAa2c,GAAWJ,GAAUU,GAAa;AACpD,UAAM,EAAE,KAAAhrC,GAAM,WAAAyN,GAAY,SAAS,EAAE,QAAQ,EAAE,SAAAoZ,IAAU,EAAG,IAAM,MAC5D+jB,IAAW,KAAK,iBAAiB,CAAA,GACjCK,IAAc,KAAK,cAAc,CAAA,GACjCC,IAAcz9B,IAAYsgB;AAChC,QAAIod,IAAatkB,GACbukB,IAAkB,GAClBC,IAAmB,GACnBxvC,IAAO,GACPyvC,IAAM;AACV,gBAAK,YAAY,QAAQ,CAAC1rB,GAAY9zB,MAAI;AACtC,YAAM,EAAE,WAAAujB,GAAY,YAAAs7B,EAAU,IAAMY,GAAkBjB,GAAUI,GAAW1qC,GAAK4f,GAAYorB,CAAW;AACvG,MAAIl/C,IAAI,KAAKu/C,IAAmBV,IAAa,IAAI9jB,IAAUqkB,MACvDC,KAAcC,IAAkBvkB,GAChCokB,EAAY,KAAK;AAAA,QACb,OAAOG;AAAA,QACP,QAAQC;AAAA,MAC5B,CAAiB,GACDxvC,KAAQuvC,IAAkBvkB,GAC1BykB,KACAF,IAAkBC,IAAmB,IAEzCT,EAAS9+C,CAAC,IAAI;AAAA,QACV,MAAA+P;AAAA,QACA,KAAKwvC;AAAA,QACL,KAAAC;AAAA,QACA,OAAOj8B;AAAA,QACP,QAAQs7B;AAAA,MACxB,GACYS,IAAkB,KAAK,IAAIA,GAAiB/7B,CAAS,GACrDg8B,KAAoBV,IAAa9jB;AAAA,IACrC,CAAC,GACDskB,KAAcC,GACdH,EAAY,KAAK;AAAA,MACb,OAAOG;AAAA,MACP,QAAQC;AAAA,IACpB,CAAS,GACMF;AAAA,EACX;AAAA,EACA,iBAAiB;AACb,QAAI,CAAC,KAAK,QAAQ;AACd;AAEJ,UAAMpd,IAAc,KAAK,oBAAmB,GACtC,EAAE,gBAAgB6c,GAAW,SAAS,EAAE,OAAAlvC,GAAQ,QAAQ,EAAE,SAAAmrB,EAAO,GAAM,KAAA9qB,EAAG,EAAG,IAAM,MACnFyvC,IAAYh8B,GAAczT,GAAK,KAAK,MAAM,KAAK,KAAK;AAC1D,QAAI,KAAK,gBAAgB;AACrB,UAAIgvC,IAAM,GACNlvC,IAAOF,EAAeD,GAAO,KAAK,OAAOmrB,GAAS,KAAK,QAAQ,KAAK,WAAWkkB,CAAG,CAAC;AACvF,iBAAWU,KAAUb;AACjB,QAAIG,MAAQU,EAAO,QACfV,IAAMU,EAAO,KACb5vC,IAAOF,EAAeD,GAAO,KAAK,OAAOmrB,GAAS,KAAK,QAAQ,KAAK,WAAWkkB,CAAG,CAAC,IAEvFU,EAAO,OAAO,KAAK,MAAM1d,IAAclH,GACvC4kB,EAAO,OAAOD,EAAU,WAAWA,EAAU,EAAE3vC,CAAI,GAAG4vC,EAAO,KAAK,GAClE5vC,KAAQ4vC,EAAO,QAAQ5kB;AAAA,IAE/B,OAAO;AACH,UAAIykB,IAAM,GACN1nC,IAAMjI,EAAeD,GAAO,KAAK,MAAMqyB,IAAclH,GAAS,KAAK,SAAS,KAAK,YAAYykB,CAAG,EAAE,MAAM;AAC5G,iBAAWG,KAAUb;AACjB,QAAIa,EAAO,QAAQH,MACfA,IAAMG,EAAO,KACb7nC,IAAMjI,EAAeD,GAAO,KAAK,MAAMqyB,IAAclH,GAAS,KAAK,SAAS,KAAK,YAAYykB,CAAG,EAAE,MAAM,IAE5GG,EAAO,MAAM7nC,GACb6nC,EAAO,QAAQ,KAAK,OAAO5kB,GAC3B4kB,EAAO,OAAOD,EAAU,WAAWA,EAAU,EAAEC,EAAO,IAAI,GAAGA,EAAO,KAAK,GACzE7nC,KAAO6nC,EAAO,SAAS5kB;AAAA,IAE/B;AAAA,EACJ;AAAA,EACA,eAAe;AACX,WAAO,KAAK,QAAQ,aAAa,SAAS,KAAK,QAAQ,aAAa;AAAA,EACxE;AAAA,EACA,OAAO;AACH,QAAI,KAAK,QAAQ,SAAS;AACtB,YAAM7mB,IAAM,KAAK;AACjB,MAAA+C,GAAS/C,GAAK,IAAI,GAClB,KAAK,MAAK,GACVgD,GAAWhD,CAAG;AAAA,IAClB;AAAA,EACJ;AAAA,EACH,QAAQ;AACD,UAAM,EAAE,SAASwD,GAAO,aAAAynC,GAAc,YAAAJ,GAAa,KAAA7qC,EAAG,IAAM,MACtD,EAAE,OAAAtE,GAAQ,QAAQ0uC,EAAS,IAAM5mC,GACjCkoC,IAAe3tC,EAAS,OACxBytC,IAAYh8B,GAAchM,EAAK,KAAK,KAAK,MAAM,KAAK,KAAK,GACzDknC,IAAYtlC,EAAOglC,EAAU,IAAI,GACjC,EAAE,SAAAvjB,EAAO,IAAMujB,GACftX,IAAW4X,EAAU,MACrBiB,IAAe7Y,IAAW;AAChC,QAAI8Y;AACJ,SAAK,UAAS,GACd5rC,EAAI,YAAYwrC,EAAU,UAAU,MAAM,GAC1CxrC,EAAI,eAAe,UACnBA,EAAI,YAAY,KAChBA,EAAI,OAAO0qC,EAAU;AACrB,UAAM,EAAE,UAAAJ,GAAW,WAAAD,GAAY,YAAAM,EAAU,IAAMR,GAAWC,GAAWtX,CAAQ,GACvE+Y,IAAgB,SAAS9+C,GAAGN,GAAGmzB,GAAY;AAC7C,UAAI,MAAM0qB,CAAQ,KAAKA,KAAY,KAAK,MAAMD,CAAS,KAAKA,IAAY;AACpE;AAEJ,MAAArqC,EAAI,KAAI;AACR,YAAMixB,IAAY59B,EAAeusB,EAAW,WAAW,CAAC;AAQxD,UAPA5f,EAAI,YAAY3M,EAAeusB,EAAW,WAAW8rB,CAAY,GACjE1rC,EAAI,UAAU3M,EAAeusB,EAAW,SAAS,MAAM,GACvD5f,EAAI,iBAAiB3M,EAAeusB,EAAW,gBAAgB,CAAC,GAChE5f,EAAI,WAAW3M,EAAeusB,EAAW,UAAU,OAAO,GAC1D5f,EAAI,YAAYixB,GAChBjxB,EAAI,cAAc3M,EAAeusB,EAAW,aAAa8rB,CAAY,GACrE1rC,EAAI,YAAY3M,EAAeusB,EAAW,UAAU,CAAA,CAAE,CAAC,GACnDwqB,EAAU,eAAe;AACzB,cAAM0B,IAAc;AAAA,UAChB,QAAQzB,IAAY,KAAK,QAAQ;AAAA,UACjC,YAAYzqB,EAAW;AAAA,UACvB,UAAUA,EAAW;AAAA,UACrB,aAAaqR;AAAA,QACjC,GACsBzQ,IAAUgrB,EAAU,MAAMz+C,GAAGu9C,IAAW,CAAC,GACzC7pB,IAAUh0B,IAAIk/C;AACpB,QAAA1pC,GAAgBjC,GAAK8rC,GAAatrB,GAASC,GAAS2pB,EAAU,mBAAmBE,CAAQ;AAAA,MAC7F,OAAO;AACH,cAAMyB,IAAUt/C,IAAI,KAAK,KAAKqmC,IAAWuX,KAAa,GAAG,CAAC,GACpD2B,IAAWR,EAAU,WAAWz+C,GAAGu9C,CAAQ,GAC3CtL,IAAe95B,GAAc0a,EAAW,YAAY;AAC1D,QAAA5f,EAAI,UAAS,GACT,OAAO,OAAOg/B,CAAY,EAAE,KAAK,CAACtyC,MAAIA,MAAM,CAAC,IAC7C2X,GAAmBrE,GAAK;AAAA,UACpB,GAAGgsC;AAAA,UACH,GAAGD;AAAA,UACH,GAAGzB;AAAA,UACH,GAAGD;AAAA,UACH,QAAQrL;AAAA,QAChC,CAAqB,IAEDh/B,EAAI,KAAKgsC,GAAUD,GAASzB,GAAUD,CAAS,GAEnDrqC,EAAI,KAAI,GACJixB,MAAc,KACdjxB,EAAI,OAAM;AAAA,MAElB;AACA,MAAAA,EAAI,QAAO;AAAA,IACf,GACMisC,IAAW,SAASl/C,GAAGN,GAAGmzB,GAAY;AACxC,MAAA3b,GAAWjE,GAAK4f,EAAW,MAAM7yB,GAAGN,IAAIk+C,IAAa,GAAGD,GAAW;AAAA,QAC/D,eAAe9qB,EAAW;AAAA,QAC1B,WAAW4rB,EAAU,UAAU5rB,EAAW,SAAS;AAAA,MACnE,CAAa;AAAA,IACL,GACMkO,IAAe,KAAK,aAAY,GAChCC,IAAc,KAAK,oBAAmB;AAC5C,IAAID,IACA8d,IAAS;AAAA,MACL,GAAGjwC,EAAeD,GAAO,KAAK,OAAOmrB,GAAS,KAAK,QAAQgkB,EAAW,CAAC,CAAC;AAAA,MACxE,GAAG,KAAK,MAAMhkB,IAAUkH;AAAA,MACxB,MAAM;AAAA,IACtB,IAEY6d,IAAS;AAAA,MACL,GAAG,KAAK,OAAO/kB;AAAA,MACf,GAAGlrB,EAAeD,GAAO,KAAK,MAAMqyB,IAAclH,GAAS,KAAK,SAASokB,EAAY,CAAC,EAAE,MAAM;AAAA,MAC9F,MAAM;AAAA,IACtB,GAEQx7B,GAAsB,KAAK,KAAKjM,EAAK,aAAa;AAClD,UAAM8rB,IAAaqb,IAAa9jB;AAChC,SAAK,YAAY,QAAQ,CAACjH,GAAY9zB,MAAI;AACtC,MAAAkU,EAAI,cAAc4f,EAAW,WAC7B5f,EAAI,YAAY4f,EAAW;AAC3B,YAAM5e,IAAYhB,EAAI,YAAY4f,EAAW,IAAI,EAAE,OAC7CgS,IAAY4Z,EAAU,UAAU5rB,EAAW,cAAcA,EAAW,YAAYwqB,EAAU,UAAU,GACpGzoC,IAAQ2oC,IAAWqB,IAAe3qC;AACxC,UAAIjU,IAAI6+C,EAAO,GACXn/C,IAAIm/C,EAAO;AACf,MAAAJ,EAAU,SAAS,KAAK,KAAK,GACzB1d,IACIhiC,IAAI,KAAKiB,IAAI4U,IAAQklB,IAAU,KAAK,UACpCp6B,IAAIm/C,EAAO,KAAKtc,GAChBsc,EAAO,QACP7+C,IAAI6+C,EAAO,IAAIjwC,EAAeD,GAAO,KAAK,OAAOmrB,GAAS,KAAK,QAAQgkB,EAAWe,EAAO,IAAI,CAAC,KAE3F9/C,IAAI,KAAKW,IAAI6iC,IAAa,KAAK,WACtCviC,IAAI6+C,EAAO,IAAI7+C,IAAIk+C,EAAYW,EAAO,IAAI,EAAE,QAAQ/kB,GACpD+kB,EAAO,QACPn/C,IAAIm/C,EAAO,IAAIjwC,EAAeD,GAAO,KAAK,MAAMqyB,IAAclH,GAAS,KAAK,SAASokB,EAAYW,EAAO,IAAI,EAAE,MAAM;AAExH,YAAMM,IAAQV,EAAU,EAAEz+C,CAAC;AAI3B,UAHA8+C,EAAcK,GAAOz/C,GAAGmzB,CAAU,GAClC7yB,IAAI6O,GAAOg2B,GAAW7kC,IAAIu9C,IAAWqB,GAAc7d,IAAe/gC,IAAI4U,IAAQ,KAAK,OAAO6B,EAAK,GAAG,GAClGyoC,EAAST,EAAU,EAAEz+C,CAAC,GAAGN,GAAGmzB,CAAU,GAClCkO;AACA,QAAA8d,EAAO,KAAKjqC,IAAQklB;AAAA,eACb,OAAOjH,EAAW,QAAS,UAAU;AAC5C,cAAMusB,KAAiBzB,EAAU;AACjC,QAAAkB,EAAO,KAAKQ,GAA0BxsB,GAAYusB,EAAc,IAAItlB;AAAA,MACxE;AACI,QAAA+kB,EAAO,KAAKtc;AAAA,IAEpB,CAAC,GACD1f,GAAqB,KAAK,KAAKpM,EAAK,aAAa;AAAA,EACrD;AAAA,EACH,YAAY;AACL,UAAMA,IAAO,KAAK,SACZmqB,IAAYnqB,EAAK,OACjB6oC,IAAYjnC,EAAOuoB,EAAU,IAAI,GACjC2e,IAAennC,EAAUwoB,EAAU,OAAO;AAChD,QAAI,CAACA,EAAU;AACX;AAEJ,UAAM6d,IAAYh8B,GAAchM,EAAK,KAAK,KAAK,MAAM,KAAK,KAAK,GACzDxD,IAAM,KAAK,KACX4iB,IAAW+K,EAAU,UACrBge,IAAeU,EAAU,OAAO,GAChCE,IAA6BD,EAAa,MAAMX;AACtD,QAAIl/C,GACAoP,IAAO,KAAK,MACZ2R,IAAW,KAAK;AACpB,QAAI,KAAK;AACL,MAAAA,IAAW,KAAK,IAAI,GAAG,KAAK,UAAU,GACtC/gB,IAAI,KAAK,MAAM8/C,GACf1wC,IAAOF,EAAe6H,EAAK,OAAO3H,GAAM,KAAK,QAAQ2R,CAAQ;AAAA,SAC1D;AACH,YAAMC,IAAY,KAAK,YAAY,OAAO,CAAC2F,GAAKhR,MAAO,KAAK,IAAIgR,GAAKhR,EAAK,MAAM,GAAG,CAAC;AACpF,MAAA3V,IAAI8/C,IAA6B5wC,EAAe6H,EAAK,OAAO,KAAK,KAAK,KAAK,SAASiK,IAAYjK,EAAK,OAAO,UAAU,KAAK,qBAAqB;AAAA,IACpJ;AACA,UAAMzW,IAAI4O,EAAeinB,GAAU/mB,GAAMA,IAAO2R,CAAQ;AACxD,IAAAxN,EAAI,YAAYwrC,EAAU,UAAU/vC,GAAmBmnB,CAAQ,CAAC,GAChE5iB,EAAI,eAAe,UACnBA,EAAI,cAAc2tB,EAAU,OAC5B3tB,EAAI,YAAY2tB,EAAU,OAC1B3tB,EAAI,OAAOqsC,EAAU,QACrBpoC,GAAWjE,GAAK2tB,EAAU,MAAM5gC,GAAGN,GAAG4/C,CAAS;AAAA,EACnD;AAAA,EACH,sBAAsB;AACf,UAAM1e,IAAY,KAAK,QAAQ,OACzB0e,IAAYjnC,EAAOuoB,EAAU,IAAI,GACjC2e,IAAennC,EAAUwoB,EAAU,OAAO;AAChD,WAAOA,EAAU,UAAU0e,EAAU,aAAaC,EAAa,SAAS;AAAA,EAC5E;AAAA,EACH,iBAAiBv/C,GAAGN,GAAG;AAChB,QAAIX,GAAG0gD,GAAQC;AACf,QAAIlzC,GAAWxM,GAAG,KAAK,MAAM,KAAK,KAAK,KAAKwM,GAAW9M,GAAG,KAAK,KAAK,KAAK,MAAM;AAE3E,WADAggD,IAAK,KAAK,gBACN3gD,IAAI,GAAGA,IAAI2gD,EAAG,QAAQ,EAAE3gD;AAExB,YADA0gD,IAASC,EAAG3gD,CAAC,GACTyN,GAAWxM,GAAGy/C,EAAO,MAAMA,EAAO,OAAOA,EAAO,KAAK,KAAKjzC,GAAW9M,GAAG+/C,EAAO,KAAKA,EAAO,MAAMA,EAAO,MAAM;AAC9G,iBAAO,KAAK,YAAY1gD,CAAC;AAAA;AAIrC,WAAO;AAAA,EACX;AAAA,EACH,YAAYN,GAAG;AACR,UAAMgY,IAAO,KAAK;AAClB,QAAI,CAACkpC,GAAWlhD,EAAE,MAAMgY,CAAI;AACxB;AAEJ,UAAMmpC,IAAc,KAAK,iBAAiBnhD,EAAE,GAAGA,EAAE,CAAC;AAClD,QAAIA,EAAE,SAAS,eAAeA,EAAE,SAAS,YAAY;AACjD,YAAM0X,IAAW,KAAK,cAChB0pC,IAAWrC,GAAWrnC,GAAUypC,CAAW;AACjD,MAAIzpC,KAAY,CAAC0pC,KACbn5C,EAAS+P,EAAK,SAAS;AAAA,QACnBhY;AAAA,QACA0X;AAAA,QACA;AAAA,MACpB,GAAmB,IAAI,GAEX,KAAK,eAAeypC,GAChBA,KAAe,CAACC,KAChBn5C,EAAS+P,EAAK,SAAS;AAAA,QACnBhY;AAAA,QACAmhD;AAAA,QACA;AAAA,MACpB,GAAmB,IAAI;AAAA,IAEf,MAAO,CAAIA,KACPl5C,EAAS+P,EAAK,SAAS;AAAA,MACnBhY;AAAA,MACAmhD;AAAA,MACA;AAAA,IAChB,GAAe,IAAI;AAAA,EAEf;AACJ;AACA,SAASpB,GAAkBjB,GAAUI,GAAW1qC,GAAK4f,GAAYorB,GAAa;AAC1E,QAAM37B,IAAYw9B,GAAmBjtB,GAAY0qB,GAAUI,GAAW1qC,CAAG,GACnE2qC,IAAamC,GAAoB9B,GAAaprB,GAAY8qB,EAAU,UAAU;AACpF,SAAO;AAAA,IACH,WAAAr7B;AAAA,IACA,YAAAs7B;AAAA,EACR;AACA;AACA,SAASkC,GAAmBjtB,GAAY0qB,GAAUI,GAAW1qC,GAAK;AAC9D,MAAI+sC,IAAiBntB,EAAW;AAChC,SAAImtB,KAAkB,OAAOA,KAAmB,aAC5CA,IAAiBA,EAAe,OAAO,CAAC7gD,GAAGM,MAAIN,EAAE,SAASM,EAAE,SAASN,IAAIM,CAAC,IAEvE89C,IAAWI,EAAU,OAAO,IAAI1qC,EAAI,YAAY+sC,CAAc,EAAE;AAC3E;AACA,SAASD,GAAoB9B,GAAaprB,GAAYusB,GAAgB;AAClE,MAAIxB,IAAaK;AACjB,SAAI,OAAOprB,EAAW,QAAS,aAC3B+qB,IAAayB,GAA0BxsB,GAAYusB,CAAc,IAE9DxB;AACX;AACA,SAASyB,GAA0BxsB,GAAYusB,GAAgB;AAC3D,QAAM7d,IAAc1O,EAAW,OAAOA,EAAW,KAAK,SAAS;AAC/D,SAAOusB,IAAiB7d;AAC5B;AACA,SAASoe,GAAWx6C,GAAMsR,GAAM;AAI5B,SAHK,IAAAtR,MAAS,eAAeA,MAAS,gBAAgBsR,EAAK,WAAWA,EAAK,YAGvEA,EAAK,YAAYtR,MAAS,WAAWA,MAAS;AAItD;AACA,IAAI86C,KAAgB;AAAA,EAChB,IAAI;AAAA,EACP,UAAUxC;AAAA,EACP,MAAO/oC,GAAOyiC,GAAOtvC,GAAS;AAC1B,UAAMirB,IAASpe,EAAM,SAAS,IAAI+oC,GAAO;AAAA,MACrC,KAAK/oC,EAAM;AAAA,MACX,SAAA7M;AAAA,MACA,OAAA6M;AAAA,IACZ,CAAS;AACD,IAAAkjB,EAAQ,UAAUljB,GAAOoe,GAAQjrB,CAAO,GACxC+vB,EAAQ,OAAOljB,GAAOoe,CAAM;AAAA,EAChC;AAAA,EACA,KAAMpe,GAAO;AACT,IAAAkjB,EAAQ,UAAUljB,GAAOA,EAAM,MAAM,GACrC,OAAOA,EAAM;AAAA,EACjB;AAAA,EACA,aAAcA,GAAOyiC,GAAOtvC,GAAS;AACjC,UAAMirB,IAASpe,EAAM;AACrB,IAAAkjB,EAAQ,UAAUljB,GAAOoe,GAAQjrB,CAAO,GACxCirB,EAAO,UAAUjrB;AAAA,EACrB;AAAA,EACA,YAAa6M,GAAO;AAChB,UAAMoe,IAASpe,EAAM;AACrB,IAAAoe,EAAO,YAAW,GAClBA,EAAO,eAAc;AAAA,EACzB;AAAA,EACA,WAAYpe,GAAO9N,GAAM;AACrB,IAAKA,EAAK,UACN8N,EAAM,OAAO,YAAY9N,EAAK,KAAK;AAAA,EAE3C;AAAA,EACA,UAAU;AAAA,IACN,SAAS;AAAA,IACT,UAAU;AAAA,IACV,OAAO;AAAA,IACP,UAAU;AAAA,IACV,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAASnI,GAAGo0B,GAAYC,GAAQ;AAC5B,YAAMlmB,IAAQimB,EAAW,cACnBqtB,IAAKptB,EAAO;AAClB,MAAIotB,EAAG,iBAAiBtzC,CAAK,KACzBszC,EAAG,KAAKtzC,CAAK,GACbimB,EAAW,SAAS,OAEpBqtB,EAAG,KAAKtzC,CAAK,GACbimB,EAAW,SAAS;AAAA,IAE5B;AAAA,IACA,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,MACJ,OAAO,CAAC5f,MAAMA,EAAI,MAAM,QAAQ;AAAA,MAChC,UAAU;AAAA,MACV,SAAS;AAAA,MACT,eAAgByB,GAAO;AACnB,cAAMk4B,IAAWl4B,EAAM,KAAK,UACtB,EAAE,QAAQ,EAAE,eAAAyrC,GAAgB,YAAAxtB,GAAa,WAAAkS,GAAY,OAAAx/B,GAAQ,iBAAA+6C,GAAkB,cAAAnO,EAAY,EAAG,IAAMv9B,EAAM,OAAO;AACvH,eAAOA,EAAM,uBAAsB,EAAG,IAAI,CAACxF,MAAO;AAC9C,gBAAMuG,IAAQvG,EAAK,WAAW,SAASixC,IAAgB,IAAI,MAAS,GAC9DrR,IAAc12B,EAAU3C,EAAM,WAAW;AAC/C,iBAAO;AAAA,YACH,MAAMm3B,EAAS19B,EAAK,KAAK,EAAE;AAAA,YAC3B,WAAWuG,EAAM;AAAA,YACjB,WAAWpQ;AAAA,YACX,QAAQ,CAAC6J,EAAK;AAAA,YACd,SAASuG,EAAM;AAAA,YACf,UAAUA,EAAM;AAAA,YAChB,gBAAgBA,EAAM;AAAA,YACtB,UAAUA,EAAM;AAAA,YAChB,YAAYq5B,EAAY,QAAQA,EAAY,UAAU;AAAA,YACtD,aAAar5B,EAAM;AAAA,YACnB,YAAYkd,KAAcld,EAAM;AAAA,YAChC,UAAUA,EAAM;AAAA,YAChB,WAAWovB,KAAapvB,EAAM;AAAA,YAC9B,cAAc2qC,MAAoBnO,KAAgBx8B,EAAM;AAAA,YACxD,cAAcvG,EAAK;AAAA,UAC3C;AAAA,QACgB,GAAG,IAAI;AAAA,MACX;AAAA,IACZ;AAAA,IACQ,OAAO;AAAA,MACH,OAAO,CAAC+D,MAAMA,EAAI,MAAM,QAAQ;AAAA,MAChC,SAAS;AAAA,MACT,UAAU;AAAA,MACV,MAAM;AAAA,IAClB;AAAA,EACA;AAAA,EACI,aAAa;AAAA,IACT,aAAa,CAAChC,MAAO,CAACA,EAAK,WAAW,IAAI;AAAA,IAC1C,QAAQ;AAAA,MACJ,aAAa,CAACA,MAAO,CAAC;AAAA,QACd;AAAA,QACA;AAAA,QACA;AAAA,MACpB,EAAkB,SAASA,CAAI;AAAA,IAC/B;AAAA,EACA;AACA;AAEA,MAAMovC,WAAc9jB,GAAQ;AAAA,EAC3B,YAAYnV,GAAO;AACZ,UAAK,GACL,KAAK,QAAQA,EAAO,OACpB,KAAK,UAAUA,EAAO,SACtB,KAAK,MAAMA,EAAO,KAClB,KAAK,WAAW,QAChB,KAAK,MAAM,QACX,KAAK,SAAS,QACd,KAAK,OAAO,QACZ,KAAK,QAAQ,QACb,KAAK,QAAQ,QACb,KAAK,SAAS,QACd,KAAK,WAAW,QAChB,KAAK,SAAS,QACd,KAAK,WAAW;AAAA,EACpB;AAAA,EACA,OAAO3G,GAAUC,GAAW;AACxB,UAAMjK,IAAO,KAAK;AAGlB,QAFA,KAAK,OAAO,GACZ,KAAK,MAAM,GACP,CAACA,EAAK,SAAS;AACf,WAAK,QAAQ,KAAK,SAAS,KAAK,QAAQ,KAAK,SAAS;AACtD;AAAA,IACJ;AACA,SAAK,QAAQ,KAAK,QAAQgK,GAC1B,KAAK,SAAS,KAAK,SAASC;AAC5B,UAAMokB,IAAY7+B,EAAQwQ,EAAK,IAAI,IAAIA,EAAK,KAAK,SAAS;AAC1D,SAAK,WAAW2B,EAAU3B,EAAK,OAAO;AACtC,UAAM6pC,IAAWxb,IAAYzsB,EAAO5B,EAAK,IAAI,EAAE,aAAa,KAAK,SAAS;AAC1E,IAAI,KAAK,iBACL,KAAK,SAAS6pC,IAEd,KAAK,QAAQA;AAAA,EAErB;AAAA,EACA,eAAe;AACX,UAAM5gC,IAAM,KAAK,QAAQ;AACzB,WAAOA,MAAQ,SAASA,MAAQ;AAAA,EACpC;AAAA,EACA,UAAU6d,GAAQ;AACd,UAAM,EAAE,KAAA1mB,GAAM,MAAA/H,GAAO,QAAAgI,GAAS,OAAA/H,GAAQ,SAAAlH,EAAO,IAAM,MAC7C8G,IAAQ9G,EAAQ;AACtB,QAAI6N,IAAW,GACX+K,GAAU6e,GAAQC;AACtB,WAAI,KAAK,kBACLD,IAAS1wB,EAAeD,GAAOG,GAAMC,CAAK,GAC1CwwB,IAAS1oB,IAAM0mB,GACf9c,IAAW1R,IAAQD,MAEfjH,EAAQ,aAAa,UACrBy3B,IAASxwB,IAAOyuB,GAChBgC,IAAS3wB,EAAeD,GAAOmI,GAAQD,CAAG,GAC1CnB,IAAWxM,IAAK,SAEhBo2B,IAASvwB,IAAQwuB,GACjBgC,IAAS3wB,EAAeD,GAAOkI,GAAKC,CAAM,GAC1CpB,IAAWxM,IAAK,MAEpBuX,IAAW3J,IAASD,IAEjB;AAAA,MACH,QAAAyoB;AAAA,MACA,QAAAC;AAAA,MACA,UAAA9e;AAAA,MACA,UAAA/K;AAAA,IACZ;AAAA,EACI;AAAA,EACA,OAAO;AACH,UAAMzC,IAAM,KAAK,KACXwD,IAAO,KAAK;AAClB,QAAI,CAACA,EAAK;AACN;AAEJ,UAAM8pC,IAAWloC,EAAO5B,EAAK,IAAI,GAE3B8mB,IADagjB,EAAS,aACA,IAAI,KAAK,SAAS,KACxC,EAAE,QAAAjhB,GAAS,QAAAC,GAAS,UAAA9e,GAAW,UAAA/K,EAAQ,IAAM,KAAK,UAAU6nB,CAAM;AACxE,IAAArmB,GAAWjE,GAAKwD,EAAK,MAAM,GAAG,GAAG8pC,GAAU;AAAA,MACvC,OAAO9pC,EAAK;AAAA,MACZ,UAAAgK;AAAA,MACA,UAAA/K;AAAA,MACA,WAAWhH,GAAmB+H,EAAK,KAAK;AAAA,MACxC,cAAc;AAAA,MACd,aAAa;AAAA,QACT6oB;AAAA,QACAC;AAAA,MAChB;AAAA,IACA,CAAS;AAAA,EACL;AACJ;AACA,SAASihB,GAAY9rC,GAAOksB,GAAW;AACnC,QAAM+E,IAAQ,IAAI0a,GAAM;AAAA,IACpB,KAAK3rC,EAAM;AAAA,IACX,SAASksB;AAAA,IACT,OAAAlsB;AAAA,EACR,CAAK;AACD,EAAAkjB,EAAQ,UAAUljB,GAAOixB,GAAO/E,CAAS,GACzChJ,EAAQ,OAAOljB,GAAOixB,CAAK,GAC3BjxB,EAAM,aAAaixB;AACvB;AACA,IAAI8a,KAAe;AAAA,EACf,IAAI;AAAA,EACP,UAAUJ;AAAA,EACP,MAAO3rC,GAAOyiC,GAAOtvC,GAAS;AAC1B,IAAA24C,GAAY9rC,GAAO7M,CAAO;AAAA,EAC9B;AAAA,EACA,KAAM6M,GAAO;AACT,UAAMgsC,IAAahsC,EAAM;AACzB,IAAAkjB,EAAQ,UAAUljB,GAAOgsC,CAAU,GACnC,OAAOhsC,EAAM;AAAA,EACjB;AAAA,EACA,aAAcA,GAAOyiC,GAAOtvC,GAAS;AACjC,UAAM89B,IAAQjxB,EAAM;AACpB,IAAAkjB,EAAQ,UAAUljB,GAAOixB,GAAO99B,CAAO,GACvC89B,EAAM,UAAU99B;AAAA,EACpB;AAAA,EACA,UAAU;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,IACT,MAAM;AAAA,MACF,QAAQ;AAAA,IACpB;AAAA,IACQ,UAAU;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,IACV,MAAM;AAAA,IACN,QAAQ;AAAA,EAChB;AAAA,EACI,eAAe;AAAA,IACX,OAAO;AAAA,EACf;AAAA,EACI,aAAa;AAAA,IACT,aAAa;AAAA,IACb,YAAY;AAAA,EACpB;AACA;AAEA,MAAMrE,KAAM,oBAAI,QAAO;AACvB,IAAIm9C,KAAkB;AAAA,EAClB,IAAI;AAAA,EACJ,MAAOjsC,GAAOyiC,GAAOtvC,GAAS;AAC1B,UAAM89B,IAAQ,IAAI0a,GAAM;AAAA,MACpB,KAAK3rC,EAAM;AAAA,MACX,SAAA7M;AAAA,MACA,OAAA6M;AAAA,IACZ,CAAS;AACD,IAAAkjB,EAAQ,UAAUljB,GAAOixB,GAAO99B,CAAO,GACvC+vB,EAAQ,OAAOljB,GAAOixB,CAAK,GAC3BniC,GAAI,IAAIkR,GAAOixB,CAAK;AAAA,EACxB;AAAA,EACA,KAAMjxB,GAAO;AACT,IAAAkjB,EAAQ,UAAUljB,GAAOlR,GAAI,IAAIkR,CAAK,CAAC,GACvClR,GAAI,OAAOkR,CAAK;AAAA,EACpB;AAAA,EACA,aAAcA,GAAOyiC,GAAOtvC,GAAS;AACjC,UAAM89B,IAAQniC,GAAI,IAAIkR,CAAK;AAC3B,IAAAkjB,EAAQ,UAAUljB,GAAOixB,GAAO99B,CAAO,GACvC89B,EAAM,UAAU99B;AAAA,EACpB;AAAA,EACA,UAAU;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,IACT,MAAM;AAAA,MACF,QAAQ;AAAA,IACpB;AAAA,IACQ,UAAU;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,IACV,MAAM;AAAA,IACN,QAAQ;AAAA,EAChB;AAAA,EACI,eAAe;AAAA,IACX,OAAO;AAAA,EACf;AAAA,EACI,aAAa;AAAA,IACT,aAAa;AAAA,IACb,YAAY;AAAA,EACpB;AACA;AAEA,MAAM+4C,KAAc;AAAA,EACnB,QAAS3yC,GAAO;AACT,QAAI,CAACA,EAAM;AACP,aAAO;AAEX,QAAIlP,GAAGgD,GACH8+C,IAAO,oBAAI,IAAG,GACdnhD,IAAI,GACJ4P,IAAQ;AACZ,SAAIvQ,IAAI,GAAGgD,IAAMkM,EAAM,QAAQlP,IAAIgD,GAAK,EAAEhD,GAAE;AACxC,YAAMsgB,IAAKpR,EAAMlP,CAAC,EAAE;AACpB,UAAIsgB,KAAMA,EAAG,YAAY;AACrB,cAAMK,IAAML,EAAG,gBAAe;AAC9B,QAAAwhC,EAAK,IAAInhC,EAAI,CAAC,GACdhgB,KAAKggB,EAAI,GACT,EAAEpQ;AAAA,MACN;AAAA,IACJ;AACA,WAAIA,MAAU,KAAKuxC,EAAK,SAAS,IACtB,KAKJ;AAAA,MACH,GAJa;AAAA,QACb,GAAGA;AAAA,MACf,EAAU,OAAO,CAAC,GAAGphD,MAAI,IAAIA,CAAC,IAAIohD,EAAK;AAAA,MAG3B,GAAGnhD,IAAI4P;AAAA,IACnB;AAAA,EACI;AAAA,EACH,QAASrB,GAAO6yC,GAAe;AACxB,QAAI,CAAC7yC,EAAM;AACP,aAAO;AAEX,QAAIjO,IAAI8gD,EAAc,GAClBphD,IAAIohD,EAAc,GAClBnqB,IAAc,OAAO,mBACrB53B,GAAGgD,GAAKg/C;AACZ,SAAIhiD,IAAI,GAAGgD,IAAMkM,EAAM,QAAQlP,IAAIgD,GAAK,EAAEhD,GAAE;AACxC,YAAMsgB,IAAKpR,EAAMlP,CAAC,EAAE;AACpB,UAAIsgB,KAAMA,EAAG,YAAY;AACrB,cAAM6R,IAAS7R,EAAG,eAAc,GAC1B/f,IAAImM,GAAsBq1C,GAAe5vB,CAAM;AACrD,QAAI5xB,IAAIq3B,MACJA,IAAcr3B,GACdyhD,IAAiB1hC;AAAA,MAEzB;AAAA,IACJ;AACA,QAAI0hC,GAAgB;AAChB,YAAMC,IAAKD,EAAe,gBAAe;AACzC,MAAA/gD,IAAIghD,EAAG,GACPthD,IAAIshD,EAAG;AAAA,IACX;AACA,WAAO;AAAA,MACH,GAAAhhD;AAAA,MACA,GAAAN;AAAA,IACZ;AAAA,EACI;AACJ;AACA,SAASuhD,GAAavzC,GAAMwzC,GAAQ;AAChC,SAAIA,MACIj7C,EAAQi7C,CAAM,IACd,MAAM,UAAU,KAAK,MAAMxzC,GAAMwzC,CAAM,IAEvCxzC,EAAK,KAAKwzC,CAAM,IAGjBxzC;AACX;AACC,SAASyzC,GAAcr/C,GAAK;AACzB,UAAK,OAAOA,KAAQ,YAAYA,aAAe,WAAWA,EAAI,QAAQ;AAAA,CAAI,IAAI,KACnEA,EAAI,MAAM;AAAA,CAAI,IAElBA;AACX;AACC,SAASs/C,GAAkB1sC,GAAO1L,GAAM;AACrC,QAAM,EAAE,SAAAmW,GAAU,cAAA2F,GAAe,OAAAlY,EAAK,IAAM5D,GACtC+gB,IAAarV,EAAM,eAAeoQ,CAAY,EAAE,YAChD,EAAE,OAAA8N,GAAQ,OAAA5sB,EAAK,IAAM+jB,EAAW,iBAAiBnd,CAAK;AAC5D,SAAO;AAAA,IACH,OAAA8H;AAAA,IACA,OAAAke;AAAA,IACA,QAAQ7I,EAAW,UAAUnd,CAAK;AAAA,IAClC,KAAK8H,EAAM,KAAK,SAASoQ,CAAY,EAAE,KAAKlY,CAAK;AAAA,IACjD,gBAAgB5G;AAAA,IAChB,SAAS+jB,EAAW,WAAU;AAAA,IAC9B,WAAWnd;AAAA,IACX,cAAAkY;AAAA,IACA,SAAA3F;AAAA,EACR;AACA;AACC,SAASkiC,GAAeC,GAASz5C,GAAS;AACvC,QAAMoL,IAAMquC,EAAQ,MAAM,KACpB,EAAE,MAAAC,GAAO,QAAAC,GAAS,OAAA7b,EAAK,IAAM2b,GAC7B,EAAE,UAAA/D,GAAW,WAAAD,EAAS,IAAMz1C,GAC5B45C,IAAWppC,EAAOxQ,EAAQ,QAAQ,GAClCy3C,IAAYjnC,EAAOxQ,EAAQ,SAAS,GACpC65C,IAAarpC,EAAOxQ,EAAQ,UAAU,GACtC85C,IAAiBhc,EAAM,QACvBic,IAAkBJ,EAAO,QACzBK,IAAoBN,EAAK,QACzBznB,IAAU1hB,EAAUvQ,EAAQ,OAAO;AACzC,MAAI0Y,IAASuZ,EAAQ,QACjBllB,IAAQ,GACRktC,IAAqBP,EAAK,OAAO,CAACjyC,GAAOyyC,MAAWzyC,IAAQyyC,EAAS,OAAO,SAASA,EAAS,MAAM,SAASA,EAAS,MAAM,QAAQ,CAAC;AAKzI,MAJAD,KAAsBR,EAAQ,WAAW,SAASA,EAAQ,UAAU,QAChEK,MACAphC,KAAUohC,IAAiBrC,EAAU,cAAcqC,IAAiB,KAAK95C,EAAQ,eAAeA,EAAQ,oBAExGi6C,GAAoB;AACpB,UAAME,IAAiBn6C,EAAQ,gBAAgB,KAAK,IAAIy1C,GAAWmE,EAAS,UAAU,IAAIA,EAAS;AACnG,IAAAlhC,KAAUshC,IAAoBG,KAAkBF,IAAqBD,KAAqBJ,EAAS,cAAcK,IAAqB,KAAKj6C,EAAQ;AAAA,EACvJ;AACA,EAAI+5C,MACArhC,KAAU1Y,EAAQ,kBAAkB+5C,IAAkBF,EAAW,cAAcE,IAAkB,KAAK/5C,EAAQ;AAElH,MAAIo6C,IAAe;AACnB,QAAMC,IAAe,SAASvrC,GAAM;AAChC,IAAA/B,IAAQ,KAAK,IAAIA,GAAO3B,EAAI,YAAY0D,CAAI,EAAE,QAAQsrC,CAAY;AAAA,EACtE;AACA,SAAAhvC,EAAI,KAAI,GACRA,EAAI,OAAOqsC,EAAU,QACrBx4C,EAAKw6C,EAAQ,OAAOY,CAAY,GAChCjvC,EAAI,OAAOwuC,EAAS,QACpB36C,EAAKw6C,EAAQ,WAAW,OAAOA,EAAQ,SAAS,GAAGY,CAAY,GAC/DD,IAAep6C,EAAQ,gBAAgB01C,IAAW,IAAI11C,EAAQ,aAAa,GAC3Ef,EAAKy6C,GAAM,CAACQ,MAAW;AACnB,IAAAj7C,EAAKi7C,EAAS,QAAQG,CAAY,GAClCp7C,EAAKi7C,EAAS,OAAOG,CAAY,GACjCp7C,EAAKi7C,EAAS,OAAOG,CAAY;AAAA,EACrC,CAAC,GACDD,IAAe,GACfhvC,EAAI,OAAOyuC,EAAW,QACtB56C,EAAKw6C,EAAQ,QAAQY,CAAY,GACjCjvC,EAAI,QAAO,GACX2B,KAASklB,EAAQ,OACV;AAAA,IACH,OAAAllB;AAAA,IACA,QAAA2L;AAAA,EACR;AACA;AACA,SAAS4hC,GAAgBztC,GAAOW,GAAM;AAClC,QAAM,EAAE,GAAA3V,GAAI,QAAA6gB,EAAM,IAAMlL;AACxB,SAAI3V,IAAI6gB,IAAS,IACN,QACA7gB,IAAIgV,EAAM,SAAS6L,IAAS,IAC5B,WAEJ;AACX;AACA,SAAS6hC,GAAoBC,GAAQ3tC,GAAO7M,GAASwN,GAAM;AACvD,QAAM,EAAE,GAAArV,GAAI,OAAA4U,EAAK,IAAMS,GACjBitC,IAAQz6C,EAAQ,YAAYA,EAAQ;AAI1C,MAHIw6C,MAAW,UAAUriD,IAAI4U,IAAQ0tC,IAAQ5tC,EAAM,SAG/C2tC,MAAW,WAAWriD,IAAI4U,IAAQ0tC,IAAQ;AAC1C,WAAO;AAEf;AACA,SAASC,GAAgB7tC,GAAO7M,GAASwN,GAAMmtC,GAAQ;AACnD,QAAM,EAAE,GAAAxiD,GAAI,OAAA4U,EAAK,IAAMS,GACjB,EAAE,OAAOotC,GAAa,WAAW,EAAE,MAAA3zC,GAAO,OAAAC,EAAK,EAAG,IAAM2F;AAC9D,MAAI2tC,IAAS;AACb,SAAIG,MAAW,WACXH,IAASriD,MAAM8O,IAAOC,KAAS,IAAI,SAAS,UACrC/O,KAAK4U,IAAQ,IACpBytC,IAAS,SACFriD,KAAKyiD,IAAa7tC,IAAQ,MACjCytC,IAAS,UAETD,GAAoBC,GAAQ3tC,GAAO7M,GAASwN,CAAI,MAChDgtC,IAAS,WAENA;AACX;AACC,SAASK,GAAmBhuC,GAAO7M,GAASwN,GAAM;AAC/C,QAAMmtC,IAASntC,EAAK,UAAUxN,EAAQ,UAAUs6C,GAAgBztC,GAAOW,CAAI;AAC3E,SAAO;AAAA,IACH,QAAQA,EAAK,UAAUxN,EAAQ,UAAU06C,GAAgB7tC,GAAO7M,GAASwN,GAAMmtC,CAAM;AAAA,IACrF,QAAAA;AAAA,EACR;AACA;AACA,SAASG,GAAOttC,GAAMgtC,GAAQ;AAC1B,MAAI,EAAE,GAAAriD,GAAI,OAAA4U,EAAK,IAAMS;AACrB,SAAIgtC,MAAW,UACXriD,KAAK4U,IACEytC,MAAW,aAClBriD,KAAK4U,IAAQ,IAEV5U;AACX;AACA,SAAS4iD,GAAOvtC,GAAMmtC,GAAQK,GAAgB;AAC1C,MAAI,EAAE,GAAAnjD,GAAI,QAAA6gB,EAAM,IAAMlL;AACtB,SAAImtC,MAAW,QACX9iD,KAAKmjD,IACEL,MAAW,WAClB9iD,KAAK6gB,IAASsiC,IAEdnjD,KAAK6gB,IAAS,GAEX7gB;AACX;AACC,SAASojD,GAAmBj7C,GAASwN,GAAM0tC,GAAWruC,GAAO;AAC1D,QAAM,EAAE,WAAAsuC,GAAY,cAAAC,GAAe,cAAA3tC,EAAY,IAAMzN,GAC/C,EAAE,QAAAw6C,GAAS,QAAAG,EAAM,IAAMO,GACvBF,IAAiBG,IAAYC,GAC7B,EAAE,SAAAC,GAAU,UAAAC,GAAW,YAAAC,GAAa,aAAAC,EAAW,IAAMlrC,GAAc7C,CAAY;AACrF,MAAItV,IAAI2iD,GAAOttC,GAAMgtC,CAAM;AAC3B,QAAM3iD,IAAIkjD,GAAOvtC,GAAMmtC,GAAQK,CAAc;AAC7C,SAAIL,MAAW,WACPH,MAAW,SACXriD,KAAK6iD,IACER,MAAW,YAClBriD,KAAK6iD,KAEFR,MAAW,SAClBriD,KAAK,KAAK,IAAIkjD,GAASE,CAAU,IAAIJ,IAC9BX,MAAW,YAClBriD,KAAK,KAAK,IAAImjD,GAAUE,CAAW,IAAIL,IAEpC;AAAA,IACH,GAAG12C,EAAYtM,GAAG,GAAG0U,EAAM,QAAQW,EAAK,KAAK;AAAA,IAC7C,GAAG/I,EAAY5M,GAAG,GAAGgV,EAAM,SAASW,EAAK,MAAM;AAAA,EACvD;AACA;AACA,SAASiuC,GAAYhC,GAAS3yC,GAAO9G,GAAS;AAC1C,QAAMiyB,IAAU1hB,EAAUvQ,EAAQ,OAAO;AACzC,SAAO8G,MAAU,WAAW2yC,EAAQ,IAAIA,EAAQ,QAAQ,IAAI3yC,MAAU,UAAU2yC,EAAQ,IAAIA,EAAQ,QAAQxnB,EAAQ,QAAQwnB,EAAQ,IAAIxnB,EAAQ;AACpJ;AACC,SAASypB,GAAwB78C,GAAU;AACxC,SAAOu6C,GAAa,CAAA,GAAIE,GAAcz6C,CAAQ,CAAC;AACnD;AACA,SAAS88C,GAAqBjoC,GAAQ+lC,GAASmC,GAAc;AACzD,SAAOxqC,GAAcsC,GAAQ;AAAA,IACzB,SAAA+lC;AAAA,IACA,cAAAmC;AAAA,IACA,MAAM;AAAA,EACd,CAAK;AACL;AACA,SAASC,GAAkB39B,GAAW/S,GAAS;AAC3C,QAAMizB,IAAWjzB,KAAWA,EAAQ,WAAWA,EAAQ,QAAQ,WAAWA,EAAQ,QAAQ,QAAQ;AAClG,SAAOizB,IAAWlgB,EAAU,SAASkgB,CAAQ,IAAIlgB;AACrD;AACA,MAAM49B,KAAmB;AAAA,EACrB,aAAa/9C;AAAA,EACb,MAAO69C,GAAc;AACjB,QAAIA,EAAa,SAAS,GAAG;AACzB,YAAMz6C,IAAOy6C,EAAa,CAAC,GACrBz3B,IAAShjB,EAAK,MAAM,KAAK,QACzB46C,IAAa53B,IAASA,EAAO,SAAS;AAC5C,UAAI,QAAQ,KAAK,WAAW,KAAK,QAAQ,SAAS;AAC9C,eAAOhjB,EAAK,QAAQ,SAAS;AAC1B,UAAIA,EAAK;AACZ,eAAOA,EAAK;AACT,UAAI46C,IAAa,KAAK56C,EAAK,YAAY46C;AAC1C,eAAO53B,EAAOhjB,EAAK,SAAS;AAAA,IAEpC;AACA,WAAO;AAAA,EACX;AAAA,EACA,YAAYpD;AAAA,EACZ,YAAYA;AAAA,EACZ,aAAaA;AAAA,EACb,MAAOi+C,GAAa;AAChB,QAAI,QAAQ,KAAK,WAAW,KAAK,QAAQ,SAAS;AAC9C,aAAOA,EAAY,QAAQ,OAAOA,EAAY,kBAAkBA,EAAY;AAEhF,QAAIjxB,IAAQixB,EAAY,QAAQ,SAAS;AACzC,IAAIjxB,MACAA,KAAS;AAEb,UAAM5sB,IAAQ69C,EAAY;AAC1B,WAAK99C,EAAcC,CAAK,MACpB4sB,KAAS5sB,IAEN4sB;AAAA,EACX;AAAA,EACA,WAAYixB,GAAa;AAErB,UAAMh8C,IADOg8C,EAAY,MAAM,eAAeA,EAAY,YAAY,EACjD,WAAW,SAASA,EAAY,SAAS;AAC9D,WAAO;AAAA,MACH,aAAah8C,EAAQ;AAAA,MACrB,iBAAiBA,EAAQ;AAAA,MACzB,aAAaA,EAAQ;AAAA,MACrB,YAAYA,EAAQ;AAAA,MACpB,kBAAkBA,EAAQ;AAAA,MAC1B,cAAc;AAAA,IAC1B;AAAA,EACI;AAAA,EACA,iBAAkB;AACd,WAAO,KAAK,QAAQ;AAAA,EACxB;AAAA,EACA,gBAAiBg8C,GAAa;AAE1B,UAAMh8C,IADOg8C,EAAY,MAAM,eAAeA,EAAY,YAAY,EACjD,WAAW,SAASA,EAAY,SAAS;AAC9D,WAAO;AAAA,MACH,YAAYh8C,EAAQ;AAAA,MACpB,UAAUA,EAAQ;AAAA,IAC9B;AAAA,EACI;AAAA,EACA,YAAYjC;AAAA,EACZ,WAAWA;AAAA,EACX,cAAcA;AAAA,EACd,QAAQA;AAAA,EACR,aAAaA;AACjB;AACC,SAASk+C,EAA2B/9B,GAAW9U,GAAMgC,GAAK4zB,GAAK;AAC5D,QAAMz8B,IAAS2b,EAAU9U,CAAI,EAAE,KAAKgC,GAAK4zB,CAAG;AAC5C,SAAI,OAAOz8B,IAAW,MACXu5C,GAAiB1yC,CAAI,EAAE,KAAKgC,GAAK4zB,CAAG,IAExCz8B;AACX;AACA,MAAM25C,WAAgBxnB,GAAQ;AAAA,EAC7B,OAAO,cAAcqkB;AAAA,EAClB,YAAYx5B,GAAO;AACf,UAAK,GACL,KAAK,UAAU,GACf,KAAK,UAAU,CAAA,GACf,KAAK,iBAAiB,QACtB,KAAK,QAAQ,QACb,KAAK,oBAAoB,QACzB,KAAK,gBAAgB,CAAA,GACrB,KAAK,cAAc,QACnB,KAAK,WAAW,QAChB,KAAK,QAAQA,EAAO,OACpB,KAAK,UAAUA,EAAO,SACtB,KAAK,aAAa,QAClB,KAAK,QAAQ,QACb,KAAK,aAAa,QAClB,KAAK,OAAO,QACZ,KAAK,YAAY,QACjB,KAAK,SAAS,QACd,KAAK,SAAS,QACd,KAAK,SAAS,QACd,KAAK,IAAI,QACT,KAAK,IAAI,QACT,KAAK,SAAS,QACd,KAAK,QAAQ,QACb,KAAK,SAAS,QACd,KAAK,SAAS,QACd,KAAK,cAAc,QACnB,KAAK,mBAAmB,QACxB,KAAK,kBAAkB;AAAA,EAC3B;AAAA,EACA,WAAWvf,GAAS;AAChB,SAAK,UAAUA,GACf,KAAK,oBAAoB,QACzB,KAAK,WAAW;AAAA,EACpB;AAAA,EACH,qBAAqB;AACd,UAAM8iB,IAAS,KAAK;AACpB,QAAIA;AACA,aAAOA;AAEX,UAAMjW,IAAQ,KAAK,OACb7M,IAAU,KAAK,QAAQ,WAAW,KAAK,YAAY,GACnD4O,IAAO5O,EAAQ,WAAW6M,EAAM,QAAQ,aAAa7M,EAAQ,YAC7D6f,IAAa,IAAIP,GAAW,KAAK,OAAO1Q,CAAI;AAClD,WAAIA,EAAK,eACL,KAAK,oBAAoB,OAAO,OAAOiR,CAAU,IAE9CA;AAAA,EACX;AAAA,EACH,aAAa;AACN,WAAO,KAAK,aAAa,KAAK,WAAW87B,GAAqB,KAAK,MAAM,WAAU,GAAI,MAAM,KAAK,aAAa;AAAA,EACnH;AAAA,EACA,SAASxwC,GAASnL,GAAS;AACvB,UAAM,EAAE,WAAAke,EAAS,IAAMle,GACjBm8C,IAAcF,EAA2B/9B,GAAW,eAAe,MAAM/S,CAAO,GAChF2yB,IAAQme,EAA2B/9B,GAAW,SAAS,MAAM/S,CAAO,GACpEixC,IAAaH,EAA2B/9B,GAAW,cAAc,MAAM/S,CAAO;AACpF,QAAIoE,IAAQ,CAAA;AACZ,WAAAA,IAAQ6pC,GAAa7pC,GAAO+pC,GAAc6C,CAAW,CAAC,GACtD5sC,IAAQ6pC,GAAa7pC,GAAO+pC,GAAcxb,CAAK,CAAC,GAChDvuB,IAAQ6pC,GAAa7pC,GAAO+pC,GAAc8C,CAAU,CAAC,GAC9C7sC;AAAA,EACX;AAAA,EACA,cAAcqsC,GAAc57C,GAAS;AACjC,WAAO07C,GAAwBO,EAA2Bj8C,EAAQ,WAAW,cAAc,MAAM47C,CAAY,CAAC;AAAA,EAClH;AAAA,EACA,QAAQA,GAAc57C,GAAS;AAC3B,UAAM,EAAE,WAAAke,EAAS,IAAMle,GACjBq8C,IAAY,CAAA;AAClB,WAAAp9C,EAAK28C,GAAc,CAACzwC,MAAU;AAC1B,YAAM+uC,IAAW;AAAA,QACb,QAAQ,CAAA;AAAA,QACR,OAAO,CAAA;AAAA,QACP,OAAO,CAAA;AAAA,MACvB,GACkBoC,IAAST,GAAkB39B,GAAW/S,CAAO;AACnD,MAAAiuC,GAAac,EAAS,QAAQZ,GAAc2C,EAA2BK,GAAQ,eAAe,MAAMnxC,CAAO,CAAC,CAAC,GAC7GiuC,GAAac,EAAS,OAAO+B,EAA2BK,GAAQ,SAAS,MAAMnxC,CAAO,CAAC,GACvFiuC,GAAac,EAAS,OAAOZ,GAAc2C,EAA2BK,GAAQ,cAAc,MAAMnxC,CAAO,CAAC,CAAC,GAC3GkxC,EAAU,KAAKnC,CAAQ;AAAA,IAC3B,CAAC,GACMmC;AAAA,EACX;AAAA,EACA,aAAaT,GAAc57C,GAAS;AAChC,WAAO07C,GAAwBO,EAA2Bj8C,EAAQ,WAAW,aAAa,MAAM47C,CAAY,CAAC;AAAA,EACjH;AAAA,EACA,UAAUA,GAAc57C,GAAS;AAC7B,UAAM,EAAE,WAAAke,EAAS,IAAMle,GACjBu8C,IAAeN,EAA2B/9B,GAAW,gBAAgB,MAAM09B,CAAY,GACvFjC,IAASsC,EAA2B/9B,GAAW,UAAU,MAAM09B,CAAY,GAC3EY,IAAcP,EAA2B/9B,GAAW,eAAe,MAAM09B,CAAY;AAC3F,QAAIrsC,IAAQ,CAAA;AACZ,WAAAA,IAAQ6pC,GAAa7pC,GAAO+pC,GAAciD,CAAY,CAAC,GACvDhtC,IAAQ6pC,GAAa7pC,GAAO+pC,GAAcK,CAAM,CAAC,GACjDpqC,IAAQ6pC,GAAa7pC,GAAO+pC,GAAckD,CAAW,CAAC,GAC/CjtC;AAAA,EACX;AAAA,EACH,aAAavP,GAAS;AACf,UAAM6kB,IAAS,KAAK,SACd7Y,IAAO,KAAK,MAAM,MAClBywC,IAAc,CAAA,GACdC,IAAmB,CAAA,GACnBC,IAAkB,CAAA;AACxB,QAAIf,IAAe,CAAA,GACf1kD,GAAGgD;AACP,SAAIhD,IAAI,GAAGgD,IAAM2qB,EAAO,QAAQ3tB,IAAIgD,GAAK,EAAEhD;AACvC,MAAA0kD,EAAa,KAAKrC,GAAkB,KAAK,OAAO10B,EAAO3tB,CAAC,CAAC,CAAC;AAE9D,WAAI8I,EAAQ,WACR47C,IAAeA,EAAa,OAAO,CAACtkC,GAASvS,GAAOjC,MAAQ9C,EAAQ,OAAOsX,GAASvS,GAAOjC,GAAOkJ,CAAI,CAAC,IAEvGhM,EAAQ,aACR47C,IAAeA,EAAa,KAAK,CAACtkD,GAAGM,MAAIoI,EAAQ,SAAS1I,GAAGM,GAAGoU,CAAI,CAAC,IAEzE/M,EAAK28C,GAAc,CAACzwC,MAAU;AAC1B,YAAMmxC,IAAST,GAAkB77C,EAAQ,WAAWmL,CAAO;AAC3D,MAAAsxC,EAAY,KAAKR,EAA2BK,GAAQ,cAAc,MAAMnxC,CAAO,CAAC,GAChFuxC,EAAiB,KAAKT,EAA2BK,GAAQ,mBAAmB,MAAMnxC,CAAO,CAAC,GAC1FwxC,EAAgB,KAAKV,EAA2BK,GAAQ,kBAAkB,MAAMnxC,CAAO,CAAC;AAAA,IAC5F,CAAC,GACD,KAAK,cAAcsxC,GACnB,KAAK,mBAAmBC,GACxB,KAAK,kBAAkBC,GACvB,KAAK,aAAaf,GACXA;AAAA,EACX;AAAA,EACA,OAAOnzC,GAASk+B,GAAQ;AACpB,UAAM3mC,IAAU,KAAK,QAAQ,WAAW,KAAK,YAAY,GACnD6kB,IAAS,KAAK;AACpB,QAAI5E,GACA27B,IAAe,CAAA;AACnB,QAAI,CAAC/2B,EAAO;AACR,MAAI,KAAK,YAAY,MACjB5E,IAAa;AAAA,QACT,SAAS;AAAA,MAC7B;AAAA,SAEe;AACH,YAAM+N,IAAW+qB,GAAY/4C,EAAQ,QAAQ,EAAE,KAAK,MAAM6kB,GAAQ,KAAK,cAAc;AACrF,MAAA+2B,IAAe,KAAK,aAAa57C,CAAO,GACxC,KAAK,QAAQ,KAAK,SAAS47C,GAAc57C,CAAO,GAChD,KAAK,aAAa,KAAK,cAAc47C,GAAc57C,CAAO,GAC1D,KAAK,OAAO,KAAK,QAAQ47C,GAAc57C,CAAO,GAC9C,KAAK,YAAY,KAAK,aAAa47C,GAAc57C,CAAO,GACxD,KAAK,SAAS,KAAK,UAAU47C,GAAc57C,CAAO;AAClD,YAAMwN,IAAO,KAAK,QAAQgsC,GAAe,MAAMx5C,CAAO,GAChD48C,IAAkB,OAAO,OAAO,CAAA,GAAI5uB,GAAUxgB,CAAI,GAClD0tC,IAAYL,GAAmB,KAAK,OAAO76C,GAAS48C,CAAe,GACnEC,IAAkB5B,GAAmBj7C,GAAS48C,GAAiB1B,GAAW,KAAK,KAAK;AAC1F,WAAK,SAASA,EAAU,QACxB,KAAK,SAASA,EAAU,QACxBj7B,IAAa;AAAA,QACT,SAAS;AAAA,QACT,GAAG48B,EAAgB;AAAA,QACnB,GAAGA,EAAgB;AAAA,QACnB,OAAOrvC,EAAK;AAAA,QACZ,QAAQA,EAAK;AAAA,QACb,QAAQwgB,EAAS;AAAA,QACjB,QAAQA,EAAS;AAAA,MACjC;AAAA,IACQ;AACA,SAAK,gBAAgB4tB,GACrB,KAAK,WAAW,QACZ37B,KACA,KAAK,mBAAkB,EAAG,OAAO,MAAMA,CAAU,GAEjDxX,KAAWzI,EAAQ,YACnBA,EAAQ,SAAS,KAAK,MAAM;AAAA,MACxB,OAAO,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,QAAA2mC;AAAA,IAChB,CAAa;AAAA,EAET;AAAA,EACA,UAAUmW,GAAc1xC,GAAKoC,GAAMxN,GAAS;AACxC,UAAM+8C,IAAgB,KAAK,iBAAiBD,GAActvC,GAAMxN,CAAO;AACvE,IAAAoL,EAAI,OAAO2xC,EAAc,IAAIA,EAAc,EAAE,GAC7C3xC,EAAI,OAAO2xC,EAAc,IAAIA,EAAc,EAAE,GAC7C3xC,EAAI,OAAO2xC,EAAc,IAAIA,EAAc,EAAE;AAAA,EACjD;AAAA,EACA,iBAAiBD,GAActvC,GAAMxN,GAAS;AAC1C,UAAM,EAAE,QAAAw6C,GAAS,QAAAG,EAAM,IAAM,MACvB,EAAE,WAAAQ,GAAY,cAAA1tC,EAAY,IAAMzN,GAChC,EAAE,SAAAq7C,GAAU,UAAAC,GAAW,YAAAC,GAAa,aAAAC,EAAW,IAAMlrC,GAAc7C,CAAY,GAC/E,EAAE,GAAGuvC,GAAM,GAAGC,EAAG,IAAMH,GACvB,EAAE,OAAA/vC,GAAQ,QAAA2L,EAAM,IAAMlL;AAC5B,QAAIquB,GAAIE,GAAImhB,GAAIphB,GAAIE,GAAImhB;AACxB,WAAIxC,MAAW,YACX3e,IAAKihB,IAAMvkC,IAAS,GAChB8hC,MAAW,UACX3e,IAAKmhB,GACLjhB,IAAKF,IAAKsf,GACVrf,IAAKE,IAAKmf,GACVgC,IAAKnhB,IAAKmf,MAEVtf,IAAKmhB,IAAMjwC,GACXgvB,IAAKF,IAAKsf,GACVrf,IAAKE,IAAKmf,GACVgC,IAAKnhB,IAAKmf,IAEd+B,IAAKrhB,MAED2e,MAAW,SACXze,IAAKihB,IAAM,KAAK,IAAI3B,GAASE,CAAU,IAAIJ,IACpCX,MAAW,UAClBze,IAAKihB,IAAMjwC,IAAQ,KAAK,IAAIuuC,GAAUE,CAAW,IAAIL,IAErDpf,IAAK,KAAK,QAEV4e,MAAW,SACX7e,IAAKmhB,GACLjhB,IAAKF,IAAKqf,GACVtf,IAAKE,IAAKof,GACV+B,IAAKnhB,IAAKof,MAEVrf,IAAKmhB,IAAMvkC,GACXsjB,IAAKF,IAAKqf,GACVtf,IAAKE,IAAKof,GACV+B,IAAKnhB,IAAKof,IAEdgC,IAAKrhB,IAEF;AAAA,MACH,IAAAD;AAAA,MACA,IAAAE;AAAA,MACA,IAAAmhB;AAAA,MACA,IAAAphB;AAAA,MACA,IAAAE;AAAA,MACA,IAAAmhB;AAAA,IACZ;AAAA,EACI;AAAA,EACA,UAAU9mC,GAAIjL,GAAKpL,GAAS;AACxB,UAAM89B,IAAQ,KAAK,OACb/U,IAAS+U,EAAM;AACrB,QAAI2Z,GAAW2F,GAAclmD;AAC7B,QAAI6xB,GAAQ;AACR,YAAM6tB,IAAYh8B,GAAc5a,EAAQ,KAAK,KAAK,GAAG,KAAK,KAAK;AAQ/D,WAPAqW,EAAG,IAAIolC,GAAY,MAAMz7C,EAAQ,YAAYA,CAAO,GACpDoL,EAAI,YAAYwrC,EAAU,UAAU52C,EAAQ,UAAU,GACtDoL,EAAI,eAAe,UACnBqsC,IAAYjnC,EAAOxQ,EAAQ,SAAS,GACpCo9C,IAAep9C,EAAQ,cACvBoL,EAAI,YAAYpL,EAAQ,YACxBoL,EAAI,OAAOqsC,EAAU,QACjBvgD,IAAI,GAAGA,IAAI6xB,GAAQ,EAAE7xB;AACrB,QAAAkU,EAAI,SAAS0yB,EAAM5mC,CAAC,GAAG0/C,EAAU,EAAEvgC,EAAG,CAAC,GAAGA,EAAG,IAAIohC,EAAU,aAAa,CAAC,GACzEphC,EAAG,KAAKohC,EAAU,aAAa2F,GAC3BlmD,IAAI,MAAM6xB,MACV1S,EAAG,KAAKrW,EAAQ,oBAAoBo9C;AAAA,IAGhD;AAAA,EACJ;AAAA,EACH,cAAchyC,GAAKiL,GAAInf,GAAG0/C,GAAW52C,GAAS;AACvC,UAAMq9C,IAAa,KAAK,YAAYnmD,CAAC,GAC/BomD,IAAkB,KAAK,iBAAiBpmD,CAAC,GACzC,EAAE,WAAAu+C,GAAY,UAAAC,EAAQ,IAAM11C,GAC5B45C,IAAWppC,EAAOxQ,EAAQ,QAAQ,GAClCu9C,IAAS9B,GAAY,MAAM,QAAQz7C,CAAO,GAC1Cw9C,IAAY5G,EAAU,EAAE2G,CAAM,GAC9BE,IAAUhI,IAAYmE,EAAS,cAAcA,EAAS,aAAanE,KAAa,IAAI,GACpFiI,IAASrnC,EAAG,IAAIonC;AACtB,QAAIz9C,EAAQ,eAAe;AACvB,YAAMk3C,IAAc;AAAA,QAChB,QAAQ,KAAK,IAAIxB,GAAUD,CAAS,IAAI;AAAA,QACxC,YAAY6H,EAAgB;AAAA,QAC5B,UAAUA,EAAgB;AAAA,QAC1B,aAAa;AAAA,MAC7B,GACkB1xB,IAAUgrB,EAAU,WAAW4G,GAAW9H,CAAQ,IAAIA,IAAW,GACjE7pB,IAAU6xB,IAASjI,IAAY;AACrC,MAAArqC,EAAI,cAAcpL,EAAQ,oBAC1BoL,EAAI,YAAYpL,EAAQ,oBACxBoN,GAAUhC,GAAK8rC,GAAatrB,GAASC,CAAO,GAC5CzgB,EAAI,cAAciyC,EAAW,aAC7BjyC,EAAI,YAAYiyC,EAAW,iBAC3BjwC,GAAUhC,GAAK8rC,GAAatrB,GAASC,CAAO;AAAA,IAChD,OAAO;AACH,MAAAzgB,EAAI,YAAY/M,EAASg/C,EAAW,WAAW,IAAI,KAAK,IAAI,GAAG,OAAO,OAAOA,EAAW,WAAW,CAAC,IAAIA,EAAW,eAAe,GAClIjyC,EAAI,cAAciyC,EAAW,aAC7BjyC,EAAI,YAAYiyC,EAAW,cAAc,CAAA,CAAE,GAC3CjyC,EAAI,iBAAiBiyC,EAAW,oBAAoB;AACpD,YAAMM,IAAS/G,EAAU,WAAW4G,GAAW9H,CAAQ,GACjDkI,IAAShH,EAAU,WAAWA,EAAU,MAAM4G,GAAW,CAAC,GAAG9H,IAAW,CAAC,GACzEtL,IAAe95B,GAAc+sC,EAAW,YAAY;AAC1D,MAAI,OAAO,OAAOjT,CAAY,EAAE,KAAK,CAACtyC,MAAIA,MAAM,CAAC,KAC7CsT,EAAI,UAAS,GACbA,EAAI,YAAYpL,EAAQ,oBACxByP,GAAmBrE,GAAK;AAAA,QACpB,GAAGuyC;AAAA,QACH,GAAGD;AAAA,QACH,GAAGhI;AAAA,QACH,GAAGD;AAAA,QACH,QAAQrL;AAAA,MAC5B,CAAiB,GACDh/B,EAAI,KAAI,GACRA,EAAI,OAAM,GACVA,EAAI,YAAYiyC,EAAW,iBAC3BjyC,EAAI,UAAS,GACbqE,GAAmBrE,GAAK;AAAA,QACpB,GAAGwyC;AAAA,QACH,GAAGF,IAAS;AAAA,QACZ,GAAGhI,IAAW;AAAA,QACd,GAAGD,IAAY;AAAA,QACf,QAAQrL;AAAA,MAC5B,CAAiB,GACDh/B,EAAI,KAAI,MAERA,EAAI,YAAYpL,EAAQ,oBACxBoL,EAAI,SAASuyC,GAAQD,GAAQhI,GAAUD,CAAS,GAChDrqC,EAAI,WAAWuyC,GAAQD,GAAQhI,GAAUD,CAAS,GAClDrqC,EAAI,YAAYiyC,EAAW,iBAC3BjyC,EAAI,SAASwyC,GAAQF,IAAS,GAAGhI,IAAW,GAAGD,IAAY,CAAC;AAAA,IAEpE;AACA,IAAArqC,EAAI,YAAY,KAAK,gBAAgBlU,CAAC;AAAA,EAC1C;AAAA,EACA,SAASmf,GAAIjL,GAAKpL,GAAS;AACvB,UAAM,EAAE,MAAA05C,EAAI,IAAM,MACZ,EAAE,aAAAmE,GAAc,WAAAC,GAAY,eAAAC,GAAgB,WAAAtI,GAAY,UAAAC,GAAW,YAAA7kB,EAAU,IAAM7wB,GACnF45C,IAAWppC,EAAOxQ,EAAQ,QAAQ;AACxC,QAAIm6C,IAAiBP,EAAS,YAC1BoE,IAAe;AACnB,UAAMpH,IAAYh8B,GAAc5a,EAAQ,KAAK,KAAK,GAAG,KAAK,KAAK,GACzDi+C,IAAiB,SAASnvC,GAAM;AAClC,MAAA1D,EAAI,SAAS0D,GAAM8nC,EAAU,EAAEvgC,EAAG,IAAI2nC,CAAY,GAAG3nC,EAAG,IAAI8jC,IAAiB,CAAC,GAC9E9jC,EAAG,KAAK8jC,IAAiB0D;AAAA,IAC7B,GACMK,IAA0BtH,EAAU,UAAUkH,CAAS;AAC7D,QAAI5D,GAAUiE,GAAW5uC,GAAOrY,GAAGgC,GAAGqG,GAAMiN;AAQ5C,SAPApB,EAAI,YAAY0yC,GAChB1yC,EAAI,eAAe,UACnBA,EAAI,OAAOwuC,EAAS,QACpBvjC,EAAG,IAAIolC,GAAY,MAAMyC,GAAyBl+C,CAAO,GACzDoL,EAAI,YAAYpL,EAAQ,WACxBf,EAAK,KAAK,YAAYg/C,CAAc,GACpCD,IAAeD,KAAiBG,MAA4B,UAAUJ,MAAc,WAAWpI,IAAW,IAAI7kB,IAAa6kB,IAAW,IAAI7kB,IAAa,GACnJ35B,IAAI,GAAGqI,IAAOm6C,EAAK,QAAQxiD,IAAIqI,GAAM,EAAErI,GAAE;AAUzC,WATAgjD,IAAWR,EAAKxiD,CAAC,GACjBinD,IAAY,KAAK,gBAAgBjnD,CAAC,GAClCkU,EAAI,YAAY+yC,GAChBl/C,EAAKi7C,EAAS,QAAQ+D,CAAc,GACpC1uC,IAAQ2qC,EAAS,OACb6D,KAAiBxuC,EAAM,WACvB,KAAK,cAAcnE,GAAKiL,GAAInf,GAAG0/C,GAAW52C,CAAO,GACjDm6C,IAAiB,KAAK,IAAIP,EAAS,YAAYnE,CAAS,IAExDv8C,IAAI,GAAGsT,IAAO+C,EAAM,QAAQrW,IAAIsT,GAAM,EAAEtT;AACxC,QAAA+kD,EAAe1uC,EAAMrW,CAAC,CAAC,GACvBihD,IAAiBP,EAAS;AAE9B,MAAA36C,EAAKi7C,EAAS,OAAO+D,CAAc;AAAA,IACvC;AACA,IAAAD,IAAe,GACf7D,IAAiBP,EAAS,YAC1B36C,EAAK,KAAK,WAAWg/C,CAAc,GACnC5nC,EAAG,KAAKwnC;AAAA,EACZ;AAAA,EACA,WAAWxnC,GAAIjL,GAAKpL,GAAS;AACzB,UAAM25C,IAAS,KAAK,QACd5wB,IAAS4wB,EAAO;AACtB,QAAIE,GAAY3iD;AAChB,QAAI6xB,GAAQ;AACR,YAAM6tB,IAAYh8B,GAAc5a,EAAQ,KAAK,KAAK,GAAG,KAAK,KAAK;AAQ/D,WAPAqW,EAAG,IAAIolC,GAAY,MAAMz7C,EAAQ,aAAaA,CAAO,GACrDqW,EAAG,KAAKrW,EAAQ,iBAChBoL,EAAI,YAAYwrC,EAAU,UAAU52C,EAAQ,WAAW,GACvDoL,EAAI,eAAe,UACnByuC,IAAarpC,EAAOxQ,EAAQ,UAAU,GACtCoL,EAAI,YAAYpL,EAAQ,aACxBoL,EAAI,OAAOyuC,EAAW,QAClB3iD,IAAI,GAAGA,IAAI6xB,GAAQ,EAAE7xB;AACrB,QAAAkU,EAAI,SAASuuC,EAAOziD,CAAC,GAAG0/C,EAAU,EAAEvgC,EAAG,CAAC,GAAGA,EAAG,IAAIwjC,EAAW,aAAa,CAAC,GAC3ExjC,EAAG,KAAKwjC,EAAW,aAAa75C,EAAQ;AAAA,IAEhD;AAAA,EACJ;AAAA,EACA,eAAeqW,GAAIjL,GAAKgzC,GAAap+C,GAAS;AAC1C,UAAM,EAAE,QAAAw6C,GAAS,QAAAG,EAAM,IAAM,MACvB,EAAE,GAAAxiD,GAAI,GAAAN,EAAC,IAAMwe,GACb,EAAE,OAAAtJ,GAAQ,QAAA2L,EAAM,IAAM0lC,GACtB,EAAE,SAAA/C,GAAU,UAAAC,GAAW,YAAAC,GAAa,aAAAC,EAAW,IAAMlrC,GAActQ,EAAQ,YAAY;AAC7F,IAAAoL,EAAI,YAAYpL,EAAQ,iBACxBoL,EAAI,cAAcpL,EAAQ,aAC1BoL,EAAI,YAAYpL,EAAQ,aACxBoL,EAAI,UAAS,GACbA,EAAI,OAAOjT,IAAIkjD,GAASxjD,CAAC,GACrB8iD,MAAW,SACX,KAAK,UAAUtkC,GAAIjL,GAAKgzC,GAAap+C,CAAO,GAEhDoL,EAAI,OAAOjT,IAAI4U,IAAQuuC,GAAUzjD,CAAC,GAClCuT,EAAI,iBAAiBjT,IAAI4U,GAAOlV,GAAGM,IAAI4U,GAAOlV,IAAIyjD,CAAQ,GACtDX,MAAW,YAAYH,MAAW,WAClC,KAAK,UAAUnkC,GAAIjL,GAAKgzC,GAAap+C,CAAO,GAEhDoL,EAAI,OAAOjT,IAAI4U,GAAOlV,IAAI6gB,IAAS8iC,CAAW,GAC9CpwC,EAAI,iBAAiBjT,IAAI4U,GAAOlV,IAAI6gB,GAAQvgB,IAAI4U,IAAQyuC,GAAa3jD,IAAI6gB,CAAM,GAC3EiiC,MAAW,YACX,KAAK,UAAUtkC,GAAIjL,GAAKgzC,GAAap+C,CAAO,GAEhDoL,EAAI,OAAOjT,IAAIojD,GAAY1jD,IAAI6gB,CAAM,GACrCtN,EAAI,iBAAiBjT,GAAGN,IAAI6gB,GAAQvgB,GAAGN,IAAI6gB,IAAS6iC,CAAU,GAC1DZ,MAAW,YAAYH,MAAW,UAClC,KAAK,UAAUnkC,GAAIjL,GAAKgzC,GAAap+C,CAAO,GAEhDoL,EAAI,OAAOjT,GAAGN,IAAIwjD,CAAO,GACzBjwC,EAAI,iBAAiBjT,GAAGN,GAAGM,IAAIkjD,GAASxjD,CAAC,GACzCuT,EAAI,UAAS,GACbA,EAAI,KAAI,GACJpL,EAAQ,cAAc,KACtBoL,EAAI,OAAM;AAAA,EAElB;AAAA,EACH,uBAAuBpL,GAAS;AACzB,UAAM6M,IAAQ,KAAK,OACbmR,IAAQ,KAAK,aACbqgC,IAAQrgC,KAASA,EAAM,GACvBsgC,IAAQtgC,KAASA,EAAM;AAC7B,QAAIqgC,KAASC,GAAO;AAChB,YAAMtwB,IAAW+qB,GAAY/4C,EAAQ,QAAQ,EAAE,KAAK,MAAM,KAAK,SAAS,KAAK,cAAc;AAC3F,UAAI,CAACguB;AACD;AAEJ,YAAMxgB,IAAO,KAAK,QAAQgsC,GAAe,MAAMx5C,CAAO,GAChD48C,IAAkB,OAAO,OAAO,CAAA,GAAI5uB,GAAU,KAAK,KAAK,GACxDktB,IAAYL,GAAmBhuC,GAAO7M,GAAS48C,CAAe,GAC9D10C,IAAQ+yC,GAAmBj7C,GAAS48C,GAAiB1B,GAAWruC,CAAK;AAC3E,OAAIwxC,EAAM,QAAQn2C,EAAM,KAAKo2C,EAAM,QAAQp2C,EAAM,OAC7C,KAAK,SAASgzC,EAAU,QACxB,KAAK,SAASA,EAAU,QACxB,KAAK,QAAQ1tC,EAAK,OAClB,KAAK,SAASA,EAAK,QACnB,KAAK,SAASwgB,EAAS,GACvB,KAAK,SAASA,EAAS,GACvB,KAAK,mBAAkB,EAAG,OAAO,MAAM9lB,CAAK;AAAA,IAEpD;AAAA,EACJ;AAAA,EACH,cAAc;AACP,WAAO,CAAC,CAAC,KAAK;AAAA,EAClB;AAAA,EACA,KAAKkD,GAAK;AACN,UAAMpL,IAAU,KAAK,QAAQ,WAAW,KAAK,YAAY;AACzD,QAAIu+C,IAAU,KAAK;AACnB,QAAI,CAACA;AACD;AAEJ,SAAK,uBAAuBv+C,CAAO;AACnC,UAAMo+C,IAAc;AAAA,MAChB,OAAO,KAAK;AAAA,MACZ,QAAQ,KAAK;AAAA,IACzB,GACc/nC,IAAK;AAAA,MACP,GAAG,KAAK;AAAA,MACR,GAAG,KAAK;AAAA,IACpB;AACQ,IAAAkoC,IAAU,KAAK,IAAIA,CAAO,IAAI,OAAO,IAAIA;AACzC,UAAMtsB,IAAU1hB,EAAUvQ,EAAQ,OAAO,GACnCw+C,IAAoB,KAAK,MAAM,UAAU,KAAK,WAAW,UAAU,KAAK,KAAK,UAAU,KAAK,UAAU,UAAU,KAAK,OAAO;AAClI,IAAIx+C,EAAQ,WAAWw+C,MACnBpzC,EAAI,KAAI,GACRA,EAAI,cAAcmzC,GAClB,KAAK,eAAeloC,GAAIjL,GAAKgzC,GAAap+C,CAAO,GACjD6a,GAAsBzP,GAAKpL,EAAQ,aAAa,GAChDqW,EAAG,KAAK4b,EAAQ,KAChB,KAAK,UAAU5b,GAAIjL,GAAKpL,CAAO,GAC/B,KAAK,SAASqW,GAAIjL,GAAKpL,CAAO,GAC9B,KAAK,WAAWqW,GAAIjL,GAAKpL,CAAO,GAChCgb,GAAqB5P,GAAKpL,EAAQ,aAAa,GAC/CoL,EAAI,QAAO;AAAA,EAEnB;AAAA,EACH,oBAAoB;AACb,WAAO,KAAK,WAAW,CAAA;AAAA,EAC3B;AAAA,EACH,kBAAkBo7B,GAAgByS,GAAe;AAC1C,UAAMxS,IAAa,KAAK,SAClB5hB,IAAS2hB,EAAe,IAAI,CAAC,EAAE,cAAAvpB,GAAe,OAAAlY,QAAW;AAC3D,YAAMsC,IAAO,KAAK,MAAM,eAAe4V,CAAY;AACnD,UAAI,CAAC5V;AACD,cAAM,IAAI,MAAM,oCAAoC4V,CAAY;AAEpE,aAAO;AAAA,QACH,cAAAA;AAAA,QACA,SAAS5V,EAAK,KAAKtC,CAAK;AAAA,QACxB,OAAAA;AAAA,MAChB;AAAA,IACQ,CAAC,GACK0D,IAAU,CAACrJ,GAAeqnC,GAAY5hB,CAAM,GAC5C45B,IAAkB,KAAK,iBAAiB55B,GAAQo0B,CAAa;AACnE,KAAIxwC,KAAWg2C,OACX,KAAK,UAAU55B,GACf,KAAK,iBAAiBo0B,GACtB,KAAK,sBAAsB,IAC3B,KAAK,OAAO,EAAI;AAAA,EAExB;AAAA,EACH,YAAYriD,GAAG+vC,GAAQ/C,IAAc,IAAM;AACpC,QAAI+C,KAAU,KAAK;AACf,aAAO;AAEX,SAAK,sBAAsB;AAC3B,UAAM3mC,IAAU,KAAK,SACfymC,IAAa,KAAK,WAAW,CAAA,GAC7B5hB,IAAS,KAAK,mBAAmBjuB,GAAG6vC,GAAYE,GAAQ/C,CAAW,GACnE6a,IAAkB,KAAK,iBAAiB55B,GAAQjuB,CAAC,GACjD6R,IAAUk+B,KAAU,CAACvnC,GAAeylB,GAAQ4hB,CAAU,KAAKgY;AACjE,WAAIh2C,MACA,KAAK,UAAUoc,IACX7kB,EAAQ,WAAWA,EAAQ,cAC3B,KAAK,iBAAiB;AAAA,MAClB,GAAGpJ,EAAE;AAAA,MACL,GAAGA,EAAE;AAAA,IACzB,GACgB,KAAK,OAAO,IAAM+vC,CAAM,KAGzBl+B;AAAA,EACX;AAAA,EACH,mBAAmB7R,GAAG6vC,GAAYE,GAAQ/C,GAAa;AAChD,UAAM5jC,IAAU,KAAK;AACrB,QAAIpJ,EAAE,SAAS;AACX,aAAO,CAAA;AAEX,QAAI,CAACgtC;AACD,aAAO6C,EAAW,OAAO,CAACvvC,MAAI,KAAK,MAAM,KAAK,SAASA,EAAE,YAAY,KAAK,KAAK,MAAM,eAAeA,EAAE,YAAY,EAAE,WAAW,UAAUA,EAAE,KAAK,MAAM,MAAS;AAEnK,UAAM2tB,IAAS,KAAK,MAAM,0BAA0BjuB,GAAGoJ,EAAQ,MAAMA,GAAS2mC,CAAM;AACpF,WAAI3mC,EAAQ,WACR6kB,EAAO,QAAO,GAEXA;AAAA,EACX;AAAA,EACH,iBAAiBA,GAAQ,GAAG;AACrB,UAAM,EAAE,QAAA65B,GAAS,QAAAC,GAAS,SAAA3+C,EAAO,IAAM,MACjCguB,IAAW+qB,GAAY/4C,EAAQ,QAAQ,EAAE,KAAK,MAAM6kB,GAAQ,CAAC;AACnE,WAAOmJ,MAAa,OAAU0wB,MAAW1wB,EAAS,KAAK2wB,MAAW3wB,EAAS;AAAA,EAC/E;AACJ;AACA,IAAI4wB,KAAiB;AAAA,EACjB,IAAI;AAAA,EACJ,UAAU1C;AAAA,EACV,aAAAnD;AAAA,EACA,UAAWlsC,GAAOyiC,GAAOtvC,GAAS;AAC9B,IAAIA,MACA6M,EAAM,UAAU,IAAIqvC,GAAQ;AAAA,MACxB,OAAArvC;AAAA,MACA,SAAA7M;AAAA,IAChB,CAAa;AAAA,EAET;AAAA,EACA,aAAc6M,GAAOyiC,GAAOtvC,GAAS;AACjC,IAAI6M,EAAM,WACNA,EAAM,QAAQ,WAAW7M,CAAO;AAAA,EAExC;AAAA,EACA,MAAO6M,GAAOyiC,GAAOtvC,GAAS;AAC1B,IAAI6M,EAAM,WACNA,EAAM,QAAQ,WAAW7M,CAAO;AAAA,EAExC;AAAA,EACA,UAAW6M,GAAO;AACd,UAAM4sC,IAAU5sC,EAAM;AACtB,QAAI4sC,KAAWA,EAAQ,eAAe;AAClC,YAAM16C,IAAO;AAAA,QACT,SAAA06C;AAAA,MAChB;AACY,UAAI5sC,EAAM,cAAc,qBAAqB;AAAA,QACzC,GAAG9N;AAAA,QACH,YAAY;AAAA,MAC5B,CAAa,MAAM;AACH;AAEJ,MAAA06C,EAAQ,KAAK5sC,EAAM,GAAG,GACtBA,EAAM,cAAc,oBAAoB9N,CAAI;AAAA,IAChD;AAAA,EACJ;AAAA,EACA,WAAY8N,GAAO9N,GAAM;AACrB,QAAI8N,EAAM,SAAS;AACf,YAAM2hB,IAAmBzvB,EAAK;AAC9B,MAAI8N,EAAM,QAAQ,YAAY9N,EAAK,OAAOyvB,GAAkBzvB,EAAK,WAAW,MACxEA,EAAK,UAAU;AAAA,IAEvB;AAAA,EACJ;AAAA,EACA,UAAU;AAAA,IACN,SAAS;AAAA,IACT,UAAU;AAAA,IACV,UAAU;AAAA,IACV,iBAAiB;AAAA,IACjB,YAAY;AAAA,IACZ,WAAW;AAAA,MACP,QAAQ;AAAA,IACpB;AAAA,IACQ,cAAc;AAAA,IACd,mBAAmB;AAAA,IACnB,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,aAAa;AAAA,IACb,UAAU,CAAA;AAAA,IACV,WAAW;AAAA,IACX,aAAa;AAAA,IACb,eAAe;AAAA,IACf,iBAAiB;AAAA,IACjB,YAAY;AAAA,MACR,QAAQ;AAAA,IACpB;AAAA,IACQ,aAAa;AAAA,IACb,SAAS;AAAA,IACT,cAAc;AAAA,IACd,WAAW;AAAA,IACX,cAAc;AAAA,IACd,WAAW,CAACqM,GAAKwD,MAAOA,EAAK,SAAS;AAAA,IACtC,UAAU,CAACxD,GAAKwD,MAAOA,EAAK,SAAS;AAAA,IACrC,oBAAoB;AAAA,IACpB,eAAe;AAAA,IACf,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,aAAa;AAAA,IACb,WAAW;AAAA,MACP,UAAU;AAAA,MACV,QAAQ;AAAA,IACpB;AAAA,IACQ,YAAY;AAAA,MACR,SAAS;AAAA,QACL,MAAM;AAAA,QACN,YAAY;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACpB;AAAA,MACA;AAAA,MACY,SAAS;AAAA,QACL,QAAQ;AAAA,QACR,UAAU;AAAA,MAC1B;AAAA,IACA;AAAA,IACQ,WAAWktC;AAAA,EACnB;AAAA,EACI,eAAe;AAAA,IACX,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,WAAW;AAAA,EACnB;AAAA,EACI,aAAa;AAAA,IACT,aAAa,CAAC1yC,MAAOA,MAAS,YAAYA,MAAS,cAAcA,MAAS;AAAA,IAC1E,YAAY;AAAA,IACZ,WAAW;AAAA,MACP,aAAa;AAAA,MACb,YAAY;AAAA,IACxB;AAAA,IACQ,WAAW;AAAA,MACP,WAAW;AAAA,IACvB;AAAA,IACQ,YAAY;AAAA,MACR,WAAW;AAAA,IACvB;AAAA,EACA;AAAA,EACI,wBAAwB;AAAA,IACpB;AAAA,EACR;AACA,GAEIw2B,KAAuB,uBAAO,OAAO;AAAA,EACzC,WAAW;AAAA,EACX,QAAQyP;AAAA,EACR,YAAYkC;AAAA,EACZ,QAAQxsC;AAAA,EACR,QAAQqzC;AAAA,EACR,UAAUU;AAAA,EACV,OAAOF;AAAA,EACP,SAASgG;AACT,CAAC;AAED,MAAMC,KAAc,CAAC16B,GAAQ0T,GAAK9yB,GAAO+5C,OACjC,OAAOjnB,KAAQ,YACf9yB,IAAQof,EAAO,KAAK0T,CAAG,IAAI,GAC3BinB,EAAY,QAAQ;AAAA,EAChB,OAAA/5C;AAAA,EACA,OAAO8yB;AACnB,CAAS,KACM,MAAMA,CAAG,MAChB9yB,IAAQ,OAELA;AAEX,SAASg6C,GAAe56B,GAAQ0T,GAAK9yB,GAAO+5C,GAAa;AACrD,QAAM1pB,IAAQjR,EAAO,QAAQ0T,CAAG;AAChC,MAAIzC,MAAU;AACV,WAAOypB,GAAY16B,GAAQ0T,GAAK9yB,GAAO+5C,CAAW;AAEtD,QAAM15C,IAAO+e,EAAO,YAAY0T,CAAG;AACnC,SAAOzC,MAAUhwB,IAAOL,IAAQqwB;AACpC;AACA,MAAM0B,KAAa,CAAC/xB,GAAOlK,MAAMkK,MAAU,OAAO,OAAON,EAAY,KAAK,MAAMM,CAAK,GAAG,GAAGlK,CAAG;AAC9F,SAASmkD,GAAkB7gD,GAAO;AAC9B,QAAMgmB,IAAS,KAAK,UAAS;AAC7B,SAAIhmB,KAAS,KAAKA,IAAQgmB,EAAO,SACtBA,EAAOhmB,CAAK,IAEhBA;AACX;AACA,MAAM8gD,WAAsBrnB,GAAM;AAAA,EAC9B,OAAO,KAAK;AAAA,EACf,OAAO,WAAW;AAAA,IACX,OAAO;AAAA,MACH,UAAUonB;AAAA,IACtB;AAAA,EACA;AAAA,EACI,YAAYjgC,GAAI;AACZ,UAAMA,CAAG,GACR,KAAK,cAAc,QACpB,KAAK,cAAc,GACnB,KAAK,eAAe,CAAA;AAAA,EACxB;AAAA,EACA,KAAK2hB,GAAc;AACf,UAAMwe,IAAQ,KAAK;AACnB,QAAIA,EAAM,QAAQ;AACd,YAAM/6B,IAAS,KAAK,UAAS;AAC7B,iBAAW,EAAE,OAAApf,GAAQ,OAAAgmB,EAAK,KAAOm0B;AAC7B,QAAI/6B,EAAOpf,CAAK,MAAMgmB,KAClB5G,EAAO,OAAOpf,GAAO,CAAC;AAG9B,WAAK,eAAe,CAAA;AAAA,IACxB;AACA,UAAM,KAAK27B,CAAY;AAAA,EAC3B;AAAA,EACA,MAAM7I,GAAK9yB,GAAO;AACd,QAAI7G,EAAc25B,CAAG;AACjB,aAAO;AAEX,UAAM1T,IAAS,KAAK,UAAS;AAC7B,WAAApf,IAAQ,SAASA,CAAK,KAAKof,EAAOpf,CAAK,MAAM8yB,IAAM9yB,IAAQg6C,GAAe56B,GAAQ0T,GAAKp5B,EAAesG,GAAO8yB,CAAG,GAAG,KAAK,YAAY,GAC7Hf,GAAW/xB,GAAOof,EAAO,SAAS,CAAC;AAAA,EAC9C;AAAA,EACA,sBAAsB;AAClB,UAAM,EAAE,YAAApc,GAAa,YAAAC,MAAgB,KAAK,cAAa;AACvD,QAAI,EAAE,KAAAjN,GAAM,KAAAF,EAAG,IAAM,KAAK,UAAU,EAAI;AACxC,IAAI,KAAK,QAAQ,WAAW,YACnBkN,MACDhN,IAAM,IAELiN,MACDnN,IAAM,KAAK,UAAS,EAAG,SAAS,KAGxC,KAAK,MAAME,GACX,KAAK,MAAMF;AAAA,EACf;AAAA,EACA,aAAa;AACT,UAAME,IAAM,KAAK,KACXF,IAAM,KAAK,KACX66B,IAAS,KAAK,QAAQ,QACtB3rB,IAAQ,CAAA;AACd,QAAIoa,IAAS,KAAK,UAAS;AAC3B,IAAAA,IAASppB,MAAQ,KAAKF,MAAQspB,EAAO,SAAS,IAAIA,IAASA,EAAO,MAAMppB,GAAKF,IAAM,CAAC,GACpF,KAAK,cAAc,KAAK,IAAIspB,EAAO,UAAUuR,IAAS,IAAI,IAAI,CAAC,GAC/D,KAAK,cAAc,KAAK,OAAOA,IAAS,MAAM;AAC9C,aAAQv3B,IAAQpD,GAAKoD,KAAStD,GAAKsD;AAC/B,MAAA4L,EAAM,KAAK;AAAA,QACP,OAAA5L;AAAA,MAChB,CAAa;AAEL,WAAO4L;AAAA,EACX;AAAA,EACA,iBAAiB5L,GAAO;AACpB,WAAO6gD,GAAkB,KAAK,MAAM7gD,CAAK;AAAA,EAC7C;AAAA,EACH,YAAY;AACL,UAAM,UAAS,GACV,KAAK,mBACN,KAAK,iBAAiB,CAAC,KAAK;AAAA,EAEpC;AAAA,EACA,iBAAiBA,GAAO;AACpB,WAAI,OAAOA,KAAU,aACjBA,IAAQ,KAAK,MAAMA,CAAK,IAErBA,MAAU,OAAO,MAAM,KAAK,oBAAoBA,IAAQ,KAAK,eAAe,KAAK,WAAW;AAAA,EACvG;AAAA,EACA,gBAAgB4G,GAAO;AACnB,UAAMgF,IAAQ,KAAK;AACnB,WAAIhF,IAAQ,KAAKA,IAAQgF,EAAM,SAAS,IAC7B,OAEJ,KAAK,iBAAiBA,EAAMhF,CAAK,EAAE,KAAK;AAAA,EACnD;AAAA,EACA,iBAAiB+H,GAAO;AACpB,WAAO,KAAK,MAAM,KAAK,cAAc,KAAK,mBAAmBA,CAAK,IAAI,KAAK,WAAW;AAAA,EAC1F;AAAA,EACA,eAAe;AACX,WAAO,KAAK;AAAA,EAChB;AACJ;AAEA,SAASqyC,GAAgBC,GAAmBC,GAAW;AACnD,QAAMt1C,IAAQ,CAAA,GAER,EAAE,QAAAsR,GAAS,MAAA6gB,GAAO,KAAAnhC,GAAM,KAAAF,GAAM,WAAAykD,GAAY,OAAA73C,GAAQ,UAAA83C,GAAW,WAAAC,GAAY,eAAAC,EAAa,IAAML,GAC5FM,IAAOxjB,KAAQ,GACfyjB,IAAYJ,IAAW,GACvB,EAAE,KAAKK,GAAO,KAAKC,EAAI,IAAMR,GAC7Bt3C,IAAa,CAAC7J,EAAcnD,CAAG,GAC/BiN,IAAa,CAAC9J,EAAcrD,CAAG,GAC/BilD,IAAe,CAAC5hD,EAAcuJ,CAAK,GACnCs4C,KAAcF,IAAOD,MAASJ,IAAY;AAChD,MAAIp0B,IAAUnpB,IAAS49C,IAAOD,KAAQD,IAAYD,CAAI,IAAIA,GACtD9gC,GAAQohC,GAASC,GAASC;AAC9B,MAAI90B,IAAU,SAAe,CAACrjB,KAAc,CAACC;AACzC,WAAO;AAAA,MACH;AAAA,QACI,OAAO43C;AAAA,MACvB;AAAA,MACY;AAAA,QACI,OAAOC;AAAA,MACvB;AAAA,IACA;AAEI,EAAAK,IAAY,KAAK,KAAKL,IAAOz0B,CAAO,IAAI,KAAK,MAAMw0B,IAAOx0B,CAAO,GAC7D80B,IAAYP,MACZv0B,IAAUnpB,GAAQi+C,IAAY90B,IAAUu0B,IAAYD,CAAI,IAAIA,IAE3DxhD,EAAcohD,CAAS,MACxB1gC,IAAS,KAAK,IAAI,IAAI0gC,CAAS,GAC/Bl0B,IAAU,KAAK,KAAKA,IAAUxM,CAAM,IAAIA,IAExCvD,MAAW,WACX2kC,IAAU,KAAK,MAAMJ,IAAOx0B,CAAO,IAAIA,GACvC60B,IAAU,KAAK,KAAKJ,IAAOz0B,CAAO,IAAIA,MAEtC40B,IAAUJ,GACVK,IAAUJ,IAEV93C,KAAcC,KAAck0B,KAAQv5B,IAAa9H,IAAME,KAAOmhC,GAAM9Q,IAAU,GAAI,KAClF80B,IAAY,KAAK,MAAM,KAAK,KAAKrlD,IAAME,KAAOqwB,GAASm0B,CAAQ,CAAC,GAChEn0B,KAAWvwB,IAAME,KAAOmlD,GACxBF,IAAUjlD,GACVklD,IAAUplD,KACHilD,KACPE,IAAUj4C,IAAahN,IAAMilD,GAC7BC,IAAUj4C,IAAanN,IAAMolD,GAC7BC,IAAYz4C,IAAQ,GACpB2jB,KAAW60B,IAAUD,KAAWE,MAEhCA,KAAaD,IAAUD,KAAW50B,GAC9BrpB,GAAam+C,GAAW,KAAK,MAAMA,CAAS,GAAG90B,IAAU,GAAI,IAC7D80B,IAAY,KAAK,MAAMA,CAAS,IAEhCA,IAAY,KAAK,KAAKA,CAAS;AAGvC,QAAMC,IAAgB,KAAK,IAAI/8C,GAAegoB,CAAO,GAAGhoB,GAAe48C,CAAO,CAAC;AAC/E,EAAAphC,IAAS,KAAK,IAAI,IAAI1gB,EAAcohD,CAAS,IAAIa,IAAgBb,CAAS,GAC1EU,IAAU,KAAK,MAAMA,IAAUphC,CAAM,IAAIA,GACzCqhC,IAAU,KAAK,MAAMA,IAAUrhC,CAAM,IAAIA;AACzC,MAAI1lB,IAAI;AAgBR,OAfI6O,MACI03C,KAAiBO,MAAYjlD,KAC7BgP,EAAM,KAAK;AAAA,IACP,OAAOhP;AAAA,EACvB,CAAa,GACGilD,IAAUjlD,KACV7B,KAEA6I,GAAa,KAAK,OAAOi+C,IAAU9mD,IAAIkyB,KAAWxM,CAAM,IAAIA,GAAQ7jB,GAAKqlD,GAAkBrlD,GAAKglD,GAAYX,CAAiB,CAAC,KAC9HlmD,OAEG8mD,IAAUjlD,KACjB7B,MAGFA,IAAIgnD,GAAW,EAAEhnD,GAAE;AACrB,UAAM4Q,IAAY,KAAK,OAAOk2C,IAAU9mD,IAAIkyB,KAAWxM,CAAM,IAAIA;AACjE,QAAI5W,KAAc8B,IAAYjP;AAC1B;AAEJ,IAAAkP,EAAM,KAAK;AAAA,MACP,OAAOD;AAAA,IACnB,CAAS;AAAA,EACL;AACA,SAAI9B,KAAcy3C,KAAiBQ,MAAYplD,IACvCkP,EAAM,UAAUhI,GAAagI,EAAMA,EAAM,SAAS,CAAC,EAAE,OAAOlP,GAAKulD,GAAkBvlD,GAAKklD,GAAYX,CAAiB,CAAC,IACtHr1C,EAAMA,EAAM,SAAS,CAAC,EAAE,QAAQlP,IAEhCkP,EAAM,KAAK;AAAA,IACP,OAAOlP;AAAA,EACvB,CAAa,KAEE,CAACmN,KAAci4C,MAAYplD,MAClCkP,EAAM,KAAK;AAAA,IACP,OAAOk2C;AAAA,EACnB,CAAS,GAEEl2C;AACX;AACA,SAASq2C,GAAkBjiD,GAAO4hD,GAAY,EAAE,YAAA73B,GAAa,aAAAqQ,EAAW,GAAK;AACzE,QAAMxqB,IAAM/K,GAAUu1B,CAAW,GAC3Bz7B,KAASorB,IAAa,KAAK,IAAIna,CAAG,IAAI,KAAK,IAAIA,CAAG,MAAM,MACxDgb,IAAS,OAAOg3B,KAAc,KAAK5hD,GAAO;AAChD,SAAO,KAAK,IAAI4hD,IAAajjD,GAAOisB,CAAM;AAC9C;AACA,MAAMs3B,WAAwBzoB,GAAM;AAAA,EAChC,YAAY7Y,GAAI;AACZ,UAAMA,CAAG,GACR,KAAK,QAAQ,QACb,KAAK,MAAM,QACX,KAAK,cAAc,QACnB,KAAK,YAAY,QAClB,KAAK,cAAc;AAAA,EACvB;AAAA,EACA,MAAM8Y,GAAK9yB,GAAO;AAId,WAHI7G,EAAc25B,CAAG,MAGhB,OAAOA,KAAQ,YAAYA,aAAe,WAAW,CAAC,SAAS,CAACA,CAAG,IAC7D,OAEJ,CAACA;AAAA,EACZ;AAAA,EACA,yBAAyB;AACrB,UAAM,EAAE,aAAA7mB,MAAiB,KAAK,SACxB,EAAE,YAAAjJ,GAAa,YAAAC,MAAgB,KAAK,cAAa;AACvD,QAAI,EAAE,KAAAjN,GAAM,KAAAF,EAAG,IAAM;AACrB,UAAMylD,IAAS,CAACxoD,MAAIiD,IAAMgN,IAAahN,IAAMjD,GACvCyoD,IAAS,CAACzoD,MAAI+C,IAAMmN,IAAanN,IAAM/C;AAC7C,QAAIkZ,GAAa;AACb,YAAMwvC,IAAU1+C,GAAK/G,CAAG,GAClB0lD,IAAU3+C,GAAKjH,CAAG;AACxB,MAAI2lD,IAAU,KAAKC,IAAU,IACzBF,EAAO,CAAC,IACDC,IAAU,KAAKC,IAAU,KAChCH,EAAO,CAAC;AAAA,IAEhB;AACA,QAAIvlD,MAAQF,GAAK;AACb,UAAI66B,IAAS76B,MAAQ,IAAI,IAAI,KAAK,IAAIA,IAAM,IAAI;AAChD,MAAA0lD,EAAO1lD,IAAM66B,CAAM,GACd1kB,KACDsvC,EAAOvlD,IAAM26B,CAAM;AAAA,IAE3B;AACA,SAAK,MAAM36B,GACX,KAAK,MAAMF;AAAA,EACf;AAAA,EACA,eAAe;AACX,UAAMg6B,IAAW,KAAK,QAAQ;AAC9B,QAAI,EAAE,eAAA2B,GAAgB,UAAAkqB,EAAQ,IAAM7rB,GAChC0qB;AACJ,WAAImB,KACAnB,IAAW,KAAK,KAAK,KAAK,MAAMmB,CAAQ,IAAI,KAAK,MAAM,KAAK,MAAMA,CAAQ,IAAI,GAC1EnB,IAAW,QACX,QAAQ,KAAK,UAAU,KAAK,EAAE,oBAAoBmB,CAAQ,kCAAkCnB,CAAQ,2BAA2B,GAC/HA,IAAW,SAGfA,IAAW,KAAK,iBAAgB,GAChC/oB,IAAgBA,KAAiB,KAEjCA,MACA+oB,IAAW,KAAK,IAAI/oB,GAAe+oB,CAAQ,IAExCA;AAAA,EACX;AAAA,EACH,mBAAmB;AACZ,WAAO,OAAO;AAAA,EAClB;AAAA,EACA,aAAa;AACT,UAAM3wC,IAAO,KAAK,SACZimB,IAAWjmB,EAAK;AACtB,QAAI2wC,IAAW,KAAK,aAAY;AAChC,IAAAA,IAAW,KAAK,IAAI,GAAGA,CAAQ;AAC/B,UAAMoB,IAA0B;AAAA,MAC5B,UAAApB;AAAA,MACA,QAAQ3wC,EAAK;AAAA,MACb,KAAKA,EAAK;AAAA,MACV,KAAKA,EAAK;AAAA,MACV,WAAWimB,EAAS;AAAA,MACpB,MAAMA,EAAS;AAAA,MACf,OAAOA,EAAS;AAAA,MAChB,WAAW,KAAK,WAAU;AAAA,MAC1B,YAAY,KAAK,aAAY;AAAA,MAC7B,aAAaA,EAAS,eAAe;AAAA,MACrC,eAAeA,EAAS,kBAAkB;AAAA,IACtD,GACcwqB,IAAY,KAAK,UAAU,MAC3Bt1C,IAAQo1C,GAAgBwB,GAAyBtB,CAAS;AAChE,WAAIzwC,EAAK,WAAW,WAChB/L,GAAmBkH,GAAO,MAAM,OAAO,GAEvC6E,EAAK,WACL7E,EAAM,QAAO,GACb,KAAK,QAAQ,KAAK,KAClB,KAAK,MAAM,KAAK,QAEhB,KAAK,QAAQ,KAAK,KAClB,KAAK,MAAM,KAAK,MAEbA;AAAA,EACX;AAAA,EACH,YAAY;AACL,UAAMA,IAAQ,KAAK;AACnB,QAAI7F,IAAQ,KAAK,KACbC,IAAM,KAAK;AAEf,QADA,MAAM,UAAS,GACX,KAAK,QAAQ,UAAU4F,EAAM,QAAQ;AACrC,YAAM2rB,KAAUvxB,IAAMD,KAAS,KAAK,IAAI6F,EAAM,SAAS,GAAG,CAAC,IAAI;AAC/D,MAAA7F,KAASwxB,GACTvxB,KAAOuxB;AAAA,IACX;AACA,SAAK,cAAcxxB,GACnB,KAAK,YAAYC,GACjB,KAAK,cAAcA,IAAMD;AAAA,EAC7B;AAAA,EACA,iBAAiB/F,GAAO;AACpB,WAAOwL,GAAaxL,GAAO,KAAK,MAAM,QAAQ,QAAQ,KAAK,QAAQ,MAAM,MAAM;AAAA,EACnF;AACJ;AAEA,MAAMyiD,WAAoBP,GAAgB;AAAA,EACtC,OAAO,KAAK;AAAA,EACf,OAAO,WAAW;AAAA,IACX,OAAO;AAAA,MACH,UAAU91C,GAAM,WAAW;AAAA,IACvC;AAAA,EACA;AAAA,EACI,sBAAsB;AAClB,UAAM,EAAE,KAAAxP,GAAM,KAAAF,EAAG,IAAM,KAAK,UAAU,EAAI;AAC1C,SAAK,MAAMyD,EAAevD,CAAG,IAAIA,IAAM,GACvC,KAAK,MAAMuD,EAAezD,CAAG,IAAIA,IAAM,GACvC,KAAK,uBAAsB;AAAA,EAC/B;AAAA,EACH,mBAAmB;AACZ,UAAMqtB,IAAa,KAAK,aAAY,GAC9Ba,IAASb,IAAa,KAAK,QAAQ,KAAK,QACxCqQ,IAAcv1B,GAAU,KAAK,QAAQ,MAAM,WAAW,GACtDlG,KAASorB,IAAa,KAAK,IAAIqQ,CAAW,IAAI,KAAK,IAAIA,CAAW,MAAM,MACxEiC,IAAW,KAAK,wBAAwB,CAAC;AAC/C,WAAO,KAAK,KAAKzR,IAAS,KAAK,IAAI,IAAIyR,EAAS,aAAa19B,CAAK,CAAC;AAAA,EACvE;AAAA,EACA,iBAAiBqB,GAAO;AACpB,WAAOA,MAAU,OAAO,MAAM,KAAK,oBAAoBA,IAAQ,KAAK,eAAe,KAAK,WAAW;AAAA,EACvG;AAAA,EACA,iBAAiB2O,GAAO;AACpB,WAAO,KAAK,cAAc,KAAK,mBAAmBA,CAAK,IAAI,KAAK;AAAA,EACpE;AACJ;AAEA,MAAM+zC,KAAa,CAAC/oD,MAAI,KAAK,MAAM+J,GAAM/J,CAAC,CAAC,GACrCgpD,KAAiB,CAAChpD,GAAGE,MAAI,KAAK,IAAI,IAAI6oD,GAAW/oD,CAAC,IAAIE,CAAC;AAC7D,SAAS+oD,GAAQC,GAAS;AAEtB,SADeA,IAAU,KAAK,IAAI,IAAIH,GAAWG,CAAO,CAAC,MACvC;AACtB;AACA,SAASC,GAAMlmD,GAAKF,GAAKqmD,GAAU;AAC/B,QAAMC,IAAY,KAAK,IAAI,IAAID,CAAQ,GACjCh9C,IAAQ,KAAK,MAAMnJ,IAAMomD,CAAS;AAExC,SADY,KAAK,KAAKtmD,IAAMsmD,CAAS,IACxBj9C;AACjB;AACA,SAASk9C,GAASrmD,GAAKF,GAAK;AACxB,QAAMqH,IAAQrH,IAAME;AACpB,MAAImmD,IAAWL,GAAW3+C,CAAK;AAC/B,SAAM++C,GAAMlmD,GAAKF,GAAKqmD,CAAQ,IAAI;AAC9B,IAAAA;AAEJ,SAAMD,GAAMlmD,GAAKF,GAAKqmD,CAAQ,IAAI;AAC9B,IAAAA;AAEJ,SAAO,KAAK,IAAIA,GAAUL,GAAW9lD,CAAG,CAAC;AAC7C;AACC,SAASsmD,GAAcjC,GAAmB,EAAE,KAAArkD,GAAM,KAAAF,EAAG,GAAK;AACvD,EAAAE,IAAMwD,GAAgB6gD,EAAkB,KAAKrkD,CAAG;AAChD,QAAMgP,IAAQ,CAAA,GACRu3C,IAAST,GAAW9lD,CAAG;AAC7B,MAAIwmD,IAAMH,GAASrmD,GAAKF,CAAG,GACvBykD,IAAYiC,IAAM,IAAI,KAAK,IAAI,IAAI,KAAK,IAAIA,CAAG,CAAC,IAAI;AACxD,QAAMb,IAAW,KAAK,IAAI,IAAIa,CAAG,GAC3B17C,IAAOy7C,IAASC,IAAM,KAAK,IAAI,IAAID,CAAM,IAAI,GAC7Cp9C,IAAQ,KAAK,OAAOnJ,IAAM8K,KAAQy5C,CAAS,IAAIA,GAC/C5pB,IAAS,KAAK,OAAO36B,IAAM8K,KAAQ66C,IAAW,EAAE,IAAIA,IAAW;AACrE,MAAIc,IAAc,KAAK,OAAOt9C,IAAQwxB,KAAU,KAAK,IAAI,IAAI6rB,CAAG,CAAC,GAC7DpjD,IAAQI,GAAgB6gD,EAAkB,KAAK,KAAK,OAAOv5C,IAAO6vB,IAAS8rB,IAAc,KAAK,IAAI,IAAID,CAAG,KAAKjC,CAAS,IAAIA,CAAS;AACxI,SAAMnhD,IAAQtD;AACV,IAAAkP,EAAM,KAAK;AAAA,MACP,OAAA5L;AAAA,MACA,OAAO4iD,GAAQ5iD,CAAK;AAAA,MACpB,aAAAqjD;AAAA,IACZ,CAAS,GACGA,KAAe,KACfA,IAAcA,IAAc,KAAK,KAAK,KAEtCA,KAEAA,KAAe,OACfD,KACAC,IAAc,GACdlC,IAAYiC,KAAO,IAAI,IAAIjC,IAE/BnhD,IAAQ,KAAK,OAAO0H,IAAO6vB,IAAS8rB,IAAc,KAAK,IAAI,IAAID,CAAG,KAAKjC,CAAS,IAAIA;AAExF,QAAMmC,IAAWljD,GAAgB6gD,EAAkB,KAAKjhD,CAAK;AAC7D,SAAA4L,EAAM,KAAK;AAAA,IACP,OAAO03C;AAAA,IACP,OAAOV,GAAQU,CAAQ;AAAA,IACvB,aAAAD;AAAA,EACR,CAAK,GACMz3C;AACX;AACA,MAAM23C,WAAyB9pB,GAAM;AAAA,EACjC,OAAO,KAAK;AAAA,EACf,OAAO,WAAW;AAAA,IACX,OAAO;AAAA,MACH,UAAUrtB,GAAM,WAAW;AAAA,MAC3B,OAAO;AAAA,QACH,SAAS;AAAA,MACzB;AAAA,IACA;AAAA,EACA;AAAA,EACI,YAAYwU,GAAI;AACZ,UAAMA,CAAG,GACR,KAAK,QAAQ,QACb,KAAK,MAAM,QACX,KAAK,cAAc,QACpB,KAAK,cAAc;AAAA,EACvB;AAAA,EACA,MAAM8Y,GAAK9yB,GAAO;AACd,UAAM5G,IAAQkiD,GAAgB,UAAU,MAAM,MAAM,MAAM;AAAA,MACtDxoB;AAAA,MACA9yB;AAAA,IACZ,CAAS;AACD,QAAI5G,MAAU,GAAG;AACb,WAAK,QAAQ;AACb;AAAA,IACJ;AACA,WAAOG,EAAeH,CAAK,KAAKA,IAAQ,IAAIA,IAAQ;AAAA,EACxD;AAAA,EACA,sBAAsB;AAClB,UAAM,EAAE,KAAApD,GAAM,KAAAF,EAAG,IAAM,KAAK,UAAU,EAAI;AAC1C,SAAK,MAAMyD,EAAevD,CAAG,IAAI,KAAK,IAAI,GAAGA,CAAG,IAAI,MACpD,KAAK,MAAMuD,EAAezD,CAAG,IAAI,KAAK,IAAI,GAAGA,CAAG,IAAI,MAChD,KAAK,QAAQ,gBACb,KAAK,QAAQ,KAEb,KAAK,SAAS,KAAK,QAAQ,KAAK,iBAAiB,CAACyD,EAAe,KAAK,QAAQ,MAC9E,KAAK,MAAMvD,MAAQ+lD,GAAe,KAAK,KAAK,CAAC,IAAIA,GAAe,KAAK,KAAK,EAAE,IAAIA,GAAe,KAAK,KAAK,CAAC,IAE9G,KAAK,uBAAsB;AAAA,EAC/B;AAAA,EACA,yBAAyB;AACrB,UAAM,EAAE,YAAA/4C,GAAa,YAAAC,MAAgB,KAAK,cAAa;AACvD,QAAIjN,IAAM,KAAK,KACXF,IAAM,KAAK;AACf,UAAMylD,IAAS,CAACxoD,MAAIiD,IAAMgN,IAAahN,IAAMjD,GACvCyoD,IAAS,CAACzoD,MAAI+C,IAAMmN,IAAanN,IAAM/C;AAC7C,IAAIiD,MAAQF,MACJE,KAAO,KACPulD,EAAO,CAAC,GACRC,EAAO,EAAE,MAETD,EAAOQ,GAAe/lD,GAAK,EAAE,CAAC,GAC9BwlD,EAAOO,GAAejmD,GAAK,CAAE,CAAC,KAGlCE,KAAO,KACPulD,EAAOQ,GAAejmD,GAAK,EAAE,CAAC,GAE9BA,KAAO,KACP0lD,EAAOO,GAAe/lD,GAAK,CAAE,CAAC,GAElC,KAAK,MAAMA,GACX,KAAK,MAAMF;AAAA,EACf;AAAA,EACA,aAAa;AACT,UAAM+T,IAAO,KAAK,SACZwwC,IAAoB;AAAA,MACtB,KAAK,KAAK;AAAA,MACV,KAAK,KAAK;AAAA,IACtB,GACcr1C,IAAQs3C,GAAcjC,GAAmB,IAAI;AACnD,WAAIxwC,EAAK,WAAW,WAChB/L,GAAmBkH,GAAO,MAAM,OAAO,GAEvC6E,EAAK,WACL7E,EAAM,QAAO,GACb,KAAK,QAAQ,KAAK,KAClB,KAAK,MAAM,KAAK,QAEhB,KAAK,QAAQ,KAAK,KAClB,KAAK,MAAM,KAAK,MAEbA;AAAA,EACX;AAAA,EACH,iBAAiB5L,GAAO;AACjB,WAAOA,MAAU,SAAY,MAAMwL,GAAaxL,GAAO,KAAK,MAAM,QAAQ,QAAQ,KAAK,QAAQ,MAAM,MAAM;AAAA,EAC/G;AAAA,EACH,YAAY;AACL,UAAM+F,IAAQ,KAAK;AACnB,UAAM,UAAS,GACf,KAAK,cAAcrC,GAAMqC,CAAK,GAC9B,KAAK,cAAcrC,GAAM,KAAK,GAAG,IAAIA,GAAMqC,CAAK;AAAA,EACpD;AAAA,EACA,iBAAiB/F,GAAO;AAIpB,YAHIA,MAAU,UAAaA,MAAU,OACjCA,IAAQ,KAAK,MAEbA,MAAU,QAAQ,MAAMA,CAAK,IACtB,MAEJ,KAAK,mBAAmBA,MAAU,KAAK,MAAM,KAAK0D,GAAM1D,CAAK,IAAI,KAAK,eAAe,KAAK,WAAW;AAAA,EAChH;AAAA,EACA,iBAAiB2O,GAAO;AACpB,UAAMguB,IAAU,KAAK,mBAAmBhuB,CAAK;AAC7C,WAAO,KAAK,IAAI,IAAI,KAAK,cAAcguB,IAAU,KAAK,WAAW;AAAA,EACrE;AACJ;AAEA,SAAS6mB,GAAsB/yC,GAAM;AACjC,QAAMimB,IAAWjmB,EAAK;AACtB,MAAIimB,EAAS,WAAWjmB,EAAK,SAAS;AAClC,UAAMqjB,IAAU1hB,EAAUskB,EAAS,eAAe;AAClD,WAAOp2B,EAAeo2B,EAAS,QAAQA,EAAS,KAAK,MAAM1rB,EAAS,KAAK,IAAI,IAAI8oB,EAAQ;AAAA,EAC7F;AACA,SAAO;AACX;AACA,SAAS2vB,GAAiBx2C,GAAKU,GAAMif,GAAO;AACxC,SAAAA,IAAQ3sB,EAAQ2sB,CAAK,IAAIA,IAAQ;AAAA,IAC7BA;AAAA,EACR,GACW;AAAA,IACH,GAAG1e,GAAajB,GAAKU,EAAK,QAAQif,CAAK;AAAA,IACvC,GAAGA,EAAM,SAASjf,EAAK;AAAA,EAC/B;AACA;AACA,SAAS+1C,GAAgBl+C,GAAOkU,GAAKrK,GAAMzS,GAAKF,GAAK;AACjD,SAAI8I,MAAU5I,KAAO4I,MAAU9I,IACpB;AAAA,IACH,OAAOgd,IAAMrK,IAAO;AAAA,IACpB,KAAKqK,IAAMrK,IAAO;AAAA,EAC9B,IACe7J,IAAQ5I,KAAO4I,IAAQ9I,IACvB;AAAA,IACH,OAAOgd,IAAMrK;AAAA,IACb,KAAKqK;AAAA,EACjB,IAEW;AAAA,IACH,OAAOA;AAAA,IACP,KAAKA,IAAMrK;AAAA,EACnB;AACA;AACC,SAASs0C,GAAmBrkC,GAAO;AAChC,QAAMkK,IAAO;AAAA,IACT,GAAGlK,EAAM,OAAOA,EAAM,SAAS;AAAA,IAC/B,GAAGA,EAAM,QAAQA,EAAM,SAAS;AAAA,IAChC,GAAGA,EAAM,MAAMA,EAAM,SAAS;AAAA,IAC9B,GAAGA,EAAM,SAASA,EAAM,SAAS;AAAA,EACzC,GACUskC,IAAS,OAAO,OAAO,CAAA,GAAIp6B,CAAI,GAC/BiR,IAAa,CAAA,GACb3G,IAAU,CAAA,GACV+vB,IAAavkC,EAAM,aAAa,QAChCwkC,IAAiBxkC,EAAM,QAAQ,aAC/BykC,IAAkBD,EAAe,oBAAoB5gD,IAAK2gD,IAAa;AAC7E,WAAQ9qD,IAAI,GAAGA,IAAI8qD,GAAY9qD,KAAI;AAC/B,UAAM0X,IAAOqzC,EAAe,WAAWxkC,EAAM,qBAAqBvmB,CAAC,CAAC;AACpE,IAAA+6B,EAAQ/6B,CAAC,IAAI0X,EAAK;AAClB,UAAMse,IAAgBzP,EAAM,iBAAiBvmB,GAAGumB,EAAM,cAAcwU,EAAQ/6B,CAAC,GAAGgrD,CAAe,GACzFC,IAAS3xC,EAAO5B,EAAK,IAAI,GACzB6pC,IAAWmJ,GAAiBnkC,EAAM,KAAK0kC,GAAQ1kC,EAAM,aAAavmB,CAAC,CAAC;AAC1E,IAAA0hC,EAAW1hC,CAAC,IAAIuhD;AAChB,UAAMlf,IAAev1B,EAAgByZ,EAAM,cAAcvmB,CAAC,IAAIgrD,CAAe,GACvEv+C,IAAQ,KAAK,MAAMT,GAAUq2B,CAAY,CAAC,GAC1C6oB,IAAUP,GAAgBl+C,GAAOupB,EAAc,GAAGurB,EAAS,GAAG,GAAG,GAAG,GACpE4J,IAAUR,GAAgBl+C,GAAOupB,EAAc,GAAGurB,EAAS,GAAG,IAAI,GAAG;AAC3E,IAAA6J,GAAaP,GAAQp6B,GAAM4R,GAAc6oB,GAASC,CAAO;AAAA,EAC7D;AACA,EAAA5kC,EAAM,eAAekK,EAAK,IAAIo6B,EAAO,GAAGA,EAAO,IAAIp6B,EAAK,GAAGA,EAAK,IAAIo6B,EAAO,GAAGA,EAAO,IAAIp6B,EAAK,CAAC,GAC/FlK,EAAM,mBAAmB8kC,GAAqB9kC,GAAOmb,GAAY3G,CAAO;AAC5E;AACA,SAASqwB,GAAaP,GAAQp6B,GAAMhkB,GAAOy+C,GAASC,GAAS;AACzD,QAAM5oB,IAAM,KAAK,IAAI,KAAK,IAAI91B,CAAK,CAAC,GAC9B61B,IAAM,KAAK,IAAI,KAAK,IAAI71B,CAAK,CAAC;AACpC,MAAIxL,IAAI,GACJN,IAAI;AACR,EAAIuqD,EAAQ,QAAQz6B,EAAK,KACrBxvB,KAAKwvB,EAAK,IAAIy6B,EAAQ,SAAS3oB,GAC/BsoB,EAAO,IAAI,KAAK,IAAIA,EAAO,GAAGp6B,EAAK,IAAIxvB,CAAC,KACjCiqD,EAAQ,MAAMz6B,EAAK,MAC1BxvB,KAAKiqD,EAAQ,MAAMz6B,EAAK,KAAK8R,GAC7BsoB,EAAO,IAAI,KAAK,IAAIA,EAAO,GAAGp6B,EAAK,IAAIxvB,CAAC,IAExCkqD,EAAQ,QAAQ16B,EAAK,KACrB9vB,KAAK8vB,EAAK,IAAI06B,EAAQ,SAAS7oB,GAC/BuoB,EAAO,IAAI,KAAK,IAAIA,EAAO,GAAGp6B,EAAK,IAAI9vB,CAAC,KACjCwqD,EAAQ,MAAM16B,EAAK,MAC1B9vB,KAAKwqD,EAAQ,MAAM16B,EAAK,KAAK6R,GAC7BuoB,EAAO,IAAI,KAAK,IAAIA,EAAO,GAAGp6B,EAAK,IAAI9vB,CAAC;AAEhD;AACA,SAAS2qD,GAAqB/kC,GAAO1Y,GAAO09C,GAAU;AAClD,QAAMC,IAAgBjlC,EAAM,aACtB,EAAE,OAAAklC,GAAQ,iBAAAT,GAAkB,SAAAjwB,GAAU,MAAAzkB,EAAI,IAAMi1C,GAChDG,IAAqBnlC,EAAM,iBAAiB1Y,GAAO29C,IAAgBC,IAAQ1wB,GAASiwB,CAAe,GACnGv+C,IAAQ,KAAK,MAAMT,GAAUc,EAAgB4+C,EAAmB,QAAQlhD,CAAO,CAAC,CAAC,GACjF7J,IAAIgrD,GAAUD,EAAmB,GAAGp1C,EAAK,GAAG7J,CAAK,GACjDq5B,IAAY8lB,GAAqBn/C,CAAK,GACtCsD,IAAO87C,GAAiBH,EAAmB,GAAGp1C,EAAK,GAAGwvB,CAAS;AACrE,SAAO;AAAA,IACH,SAAS;AAAA,IACT,GAAG4lB,EAAmB;AAAA,IACtB,GAAA/qD;AAAA,IACA,WAAAmlC;AAAA,IACA,MAAA/1B;AAAA,IACA,KAAKpP;AAAA,IACL,OAAOoP,IAAOuG,EAAK;AAAA,IACnB,QAAQ3V,IAAI2V,EAAK;AAAA,EACzB;AACA;AACA,SAASw1C,GAAgB7hD,GAAM8M,GAAM;AACjC,MAAI,CAACA;AACD,WAAO;AAEX,QAAM,EAAE,MAAAhH,GAAO,KAAA+H,GAAM,OAAA9H,GAAQ,QAAA+H,EAAM,IAAM9N;AAczC,SAAO,EAbc6M,GAAe;AAAA,IAChC,GAAG/G;AAAA,IACH,GAAG+H;AAAA,EACX,GAAOf,CAAI,KAAKD,GAAe;AAAA,IACvB,GAAG/G;AAAA,IACH,GAAGgI;AAAA,EACX,GAAOhB,CAAI,KAAKD,GAAe;AAAA,IACvB,GAAG9G;AAAA,IACH,GAAG8H;AAAA,EACX,GAAOf,CAAI,KAAKD,GAAe;AAAA,IACvB,GAAG9G;AAAA,IACH,GAAG+H;AAAA,EACX,GAAOhB,CAAI;AAEX;AACA,SAASs0C,GAAqB9kC,GAAOmb,GAAY3G,GAAS;AACtD,QAAM7rB,IAAQ,CAAA,GACR47C,IAAavkC,EAAM,aAAa,QAChC7O,IAAO6O,EAAM,SACb,EAAE,mBAAAwlC,GAAoB,SAAAhqB,EAAO,IAAMrqB,EAAK,aACxC6zC,IAAW;AAAA,IACb,OAAOd,GAAsB/yC,CAAI,IAAI;AAAA,IACrC,iBAAiBq0C,IAAoB5hD,IAAK2gD,IAAa;AAAA,EAC/D;AACI,MAAI/zC;AACJ,WAAQ/W,IAAI,GAAGA,IAAI8qD,GAAY9qD,KAAI;AAC/B,IAAAurD,EAAS,UAAUxwB,EAAQ/6B,CAAC,GAC5BurD,EAAS,OAAO7pB,EAAW1hC,CAAC;AAC5B,UAAMiK,IAAOqhD,GAAqB/kC,GAAOvmB,GAAGurD,CAAQ;AACpD,IAAAr8C,EAAM,KAAKjF,CAAI,GACX83B,MAAY,WACZ93B,EAAK,UAAU6hD,GAAgB7hD,GAAM8M,CAAI,GACrC9M,EAAK,YACL8M,IAAO9M;AAAA,EAGnB;AACA,SAAOiF;AACX;AACA,SAAS08C,GAAqBn/C,GAAO;AACjC,SAAIA,MAAU,KAAKA,MAAU,MAClB,WACAA,IAAQ,MACR,SAEJ;AACX;AACA,SAASo/C,GAAiB5qD,GAAGuC,GAAGoM,GAAO;AACnC,SAAIA,MAAU,UACV3O,KAAKuC,IACEoM,MAAU,aACjB3O,KAAKuC,IAAI,IAENvC;AACX;AACA,SAAS0qD,GAAUhrD,GAAGR,GAAGsM,GAAO;AAC5B,SAAIA,MAAU,MAAMA,MAAU,MAC1B9L,KAAKR,IAAI,KACFsM,IAAQ,OAAOA,IAAQ,QAC9B9L,KAAKR,IAEFQ;AACX;AACA,SAASqrD,GAAkB93C,GAAKwD,GAAMzN,GAAM;AACxC,QAAM,EAAE,MAAA8F,GAAO,KAAA+H,GAAM,OAAA9H,GAAQ,QAAA+H,EAAM,IAAM9N,GACnC,EAAE,eAAAgiD,EAAa,IAAMv0C;AAC3B,MAAI,CAAC1Q,EAAcilD,CAAa,GAAG;AAC/B,UAAM/Y,IAAe95B,GAAc1B,EAAK,YAAY,GAC9CqjB,IAAU1hB,EAAU3B,EAAK,eAAe;AAC9C,IAAAxD,EAAI,YAAY+3C;AAChB,UAAMC,IAAen8C,IAAOgrB,EAAQ,MAC9BoxB,IAAcr0C,IAAMijB,EAAQ,KAC5BqxB,IAAgBp8C,IAAQD,IAAOgrB,EAAQ,OACvCsxB,IAAiBt0C,IAASD,IAAMijB,EAAQ;AAC9C,IAAI,OAAO,OAAOmY,CAAY,EAAE,KAAK,CAACtyC,MAAIA,MAAM,CAAC,KAC7CsT,EAAI,UAAS,GACbqE,GAAmBrE,GAAK;AAAA,MACpB,GAAGg4C;AAAA,MACH,GAAGC;AAAA,MACH,GAAGC;AAAA,MACH,GAAGC;AAAA,MACH,QAAQnZ;AAAA,IACxB,CAAa,GACDh/B,EAAI,KAAI,KAERA,EAAI,SAASg4C,GAAcC,GAAaC,GAAeC,CAAc;AAAA,EAE7E;AACJ;AACA,SAASC,GAAgB/lC,GAAOs+B,GAAY;AACxC,QAAM,EAAE,KAAA3wC,GAAM,SAAS,EAAE,aAAAq4C,EAAW,EAAG,IAAMhmC;AAC7C,WAAQvmB,IAAI6kD,IAAa,GAAG7kD,KAAK,GAAGA,KAAI;AACpC,UAAMiK,IAAOsc,EAAM,iBAAiBvmB,CAAC;AACrC,QAAI,CAACiK,EAAK;AACN;AAEJ,UAAMg7B,IAAcsnB,EAAY,WAAWhmC,EAAM,qBAAqBvmB,CAAC,CAAC;AACxE,IAAAgsD,GAAkB93C,GAAK+wB,GAAah7B,CAAI;AACxC,UAAMghD,IAAS3xC,EAAO2rB,EAAY,IAAI,GAChC,EAAE,GAAAhkC,GAAI,GAAAN,GAAI,WAAAmlC,EAAS,IAAM77B;AAC/B,IAAAkO,GAAWjE,GAAKqS,EAAM,aAAavmB,CAAC,GAAGiB,GAAGN,IAAIsqD,EAAO,aAAa,GAAGA,GAAQ;AAAA,MACzE,OAAOhmB,EAAY;AAAA,MACnB,WAAWa;AAAA,MACX,cAAc;AAAA,IAC1B,CAAS;AAAA,EACL;AACJ;AACA,SAAS0mB,GAAejmC,GAAO3P,GAAQq6B,GAAU4T,GAAY;AACzD,QAAM,EAAE,KAAA3wC,EAAG,IAAMqS;AACjB,MAAI0qB;AACA,IAAA/8B,EAAI,IAAIqS,EAAM,SAASA,EAAM,SAAS3P,GAAQ,GAAGxM,CAAG;AAAA,OACjD;AACH,QAAI4rB,IAAgBzP,EAAM,iBAAiB,GAAG3P,CAAM;AACpD,IAAA1C,EAAI,OAAO8hB,EAAc,GAAGA,EAAc,CAAC;AAC3C,aAAQh2B,IAAI,GAAGA,IAAI6kD,GAAY7kD;AAC3B,MAAAg2B,IAAgBzP,EAAM,iBAAiBvmB,GAAG4W,CAAM,GAChD1C,EAAI,OAAO8hB,EAAc,GAAGA,EAAc,CAAC;AAAA,EAEnD;AACJ;AACA,SAASy2B,GAAelmC,GAAOmmC,GAAc91C,GAAQiuC,GAAY5gB,GAAY;AACzE,QAAM/vB,IAAMqS,EAAM,KACZ0qB,IAAWyb,EAAa,UACxB,EAAE,OAAApmD,GAAQ,WAAA6+B,EAAS,IAAMunB;AAC/B,EAAI,CAACzb,KAAY,CAAC4T,KAAc,CAACv+C,KAAS,CAAC6+B,KAAavuB,IAAS,MAGjE1C,EAAI,KAAI,GACRA,EAAI,cAAc5N,GAClB4N,EAAI,YAAYixB,GAChBjxB,EAAI,YAAY+vB,EAAW,QAAQ,CAAA,CAAE,GACrC/vB,EAAI,iBAAiB+vB,EAAW,YAChC/vB,EAAI,UAAS,GACbs4C,GAAejmC,GAAO3P,GAAQq6B,GAAU4T,CAAU,GAClD3wC,EAAI,UAAS,GACbA,EAAI,OAAM,GACVA,EAAI,QAAO;AACf;AACA,SAASy4C,GAAwBnwC,GAAQ3O,GAAOgmB,GAAO;AACnD,SAAO3Z,GAAcsC,GAAQ;AAAA,IACzB,OAAAqX;AAAA,IACA,OAAAhmB;AAAA,IACA,MAAM;AAAA,EACd,CAAK;AACL;AACA,MAAM++C,WAA0BzD,GAAgB;AAAA,EAC5C,OAAO,KAAK;AAAA,EACf,OAAO,WAAW;AAAA,IACX,SAAS;AAAA,IACT,SAAS;AAAA,IACT,UAAU;AAAA,IACV,YAAY;AAAA,MACR,SAAS;AAAA,MACT,WAAW;AAAA,MACX,YAAY,CAAA;AAAA,MACZ,kBAAkB;AAAA,IAC9B;AAAA,IACQ,MAAM;AAAA,MACF,UAAU;AAAA,IACtB;AAAA,IACQ,YAAY;AAAA,IACZ,OAAO;AAAA,MACH,mBAAmB;AAAA,MACnB,UAAU91C,GAAM,WAAW;AAAA,IACvC;AAAA,IACQ,aAAa;AAAA,MACT,eAAe;AAAA,MACf,iBAAiB;AAAA,MACjB,SAAS;AAAA,MACT,MAAM;AAAA,QACF,MAAM;AAAA,MACtB;AAAA,MACY,SAAUwgB,GAAO;AACb,eAAOA;AAAA,MACX;AAAA,MACA,SAAS;AAAA,MACT,mBAAmB;AAAA,IAC/B;AAAA,EACA;AAAA,EACI,OAAO,gBAAgB;AAAA,IACnB,oBAAoB;AAAA,IACpB,qBAAqB;AAAA,IACrB,eAAe;AAAA,EACvB;AAAA,EACI,OAAO,cAAc;AAAA,IACjB,YAAY;AAAA,MACR,WAAW;AAAA,IACvB;AAAA,EACA;AAAA,EACI,YAAYhM,GAAI;AACZ,UAAMA,CAAG,GACR,KAAK,UAAU,QACf,KAAK,UAAU,QACf,KAAK,cAAc,QACnB,KAAK,eAAe,CAAA,GACrB,KAAK,mBAAmB,CAAA;AAAA,EAC5B;AAAA,EACA,gBAAgB;AACZ,UAAMkT,IAAU,KAAK,WAAW1hB,EAAUoxC,GAAsB,KAAK,OAAO,IAAI,CAAC,GAC3EjnD,IAAI,KAAK,QAAQ,KAAK,WAAWu3B,EAAQ,OACzC56B,IAAI,KAAK,SAAS,KAAK,YAAY46B,EAAQ;AACjD,SAAK,UAAU,KAAK,MAAM,KAAK,OAAOv3B,IAAI,IAAIu3B,EAAQ,IAAI,GAC1D,KAAK,UAAU,KAAK,MAAM,KAAK,MAAM56B,IAAI,IAAI46B,EAAQ,GAAG,GACxD,KAAK,cAAc,KAAK,MAAM,KAAK,IAAIv3B,GAAGrD,CAAC,IAAI,CAAC;AAAA,EACpD;AAAA,EACA,sBAAsB;AAClB,UAAM,EAAE,KAAA0D,GAAM,KAAAF,EAAG,IAAM,KAAK,UAAU,EAAK;AAC3C,SAAK,MAAMyD,EAAevD,CAAG,KAAK,CAAC,MAAMA,CAAG,IAAIA,IAAM,GACtD,KAAK,MAAMuD,EAAezD,CAAG,KAAK,CAAC,MAAMA,CAAG,IAAIA,IAAM,GACtD,KAAK,uBAAsB;AAAA,EAC/B;AAAA,EACH,mBAAmB;AACZ,WAAO,KAAK,KAAK,KAAK,cAAc8mD,GAAsB,KAAK,OAAO,CAAC;AAAA,EAC3E;AAAA,EACA,mBAAmB53C,GAAO;AACtB,IAAAs2C,GAAgB,UAAU,mBAAmB,KAAK,MAAMt2C,CAAK,GAC7D,KAAK,eAAe,KAAK,UAAS,EAAG,IAAI,CAAC5L,GAAO4G,MAAQ;AACrD,YAAMgmB,IAAQlsB,EAAS,KAAK,QAAQ,YAAY,UAAU;AAAA,QACtDV;AAAA,QACA4G;AAAA,MAChB,GAAe,IAAI;AACP,aAAOgmB,KAASA,MAAU,IAAIA,IAAQ;AAAA,IAC1C,CAAC,EAAE,OAAO,CAACjzB,GAAGZ,MAAI,KAAK,MAAM,kBAAkBA,CAAC,CAAC;AAAA,EACrD;AAAA,EACA,MAAM;AACF,UAAM0X,IAAO,KAAK;AAClB,IAAIA,EAAK,WAAWA,EAAK,YAAY,UACjCkzC,GAAmB,IAAI,IAEvB,KAAK,eAAe,GAAG,GAAG,GAAG,CAAC;AAAA,EAEtC;AAAA,EACA,eAAeiC,GAAcC,GAAeC,GAAaC,GAAgB;AACrE,SAAK,WAAW,KAAK,OAAOH,IAAeC,KAAiB,CAAC,GAC7D,KAAK,WAAW,KAAK,OAAOC,IAAcC,KAAkB,CAAC,GAC7D,KAAK,eAAe,KAAK,IAAI,KAAK,cAAc,GAAG,KAAK,IAAIH,GAAcC,GAAeC,GAAaC,CAAc,CAAC;AAAA,EACzH;AAAA,EACA,cAAcn/C,GAAO;AACjB,UAAMo/C,IAAkB7iD,KAAO,KAAK,aAAa,UAAU,IACrD2oB,IAAa,KAAK,QAAQ,cAAc;AAC9C,WAAOjmB,EAAgBe,IAAQo/C,IAAkBnhD,GAAUinB,CAAU,CAAC;AAAA,EAC1E;AAAA,EACA,8BAA8B9rB,GAAO;AACjC,QAAID,EAAcC,CAAK;AACnB,aAAO;AAEX,UAAMimD,IAAgB,KAAK,eAAe,KAAK,MAAM,KAAK;AAC1D,WAAI,KAAK,QAAQ,WACL,KAAK,MAAMjmD,KAASimD,KAExBjmD,IAAQ,KAAK,OAAOimD;AAAA,EAChC;AAAA,EACA,8BAA8Bp1B,GAAU;AACpC,QAAI9wB,EAAc8wB,CAAQ;AACtB,aAAO;AAEX,UAAMq1B,IAAiBr1B,KAAY,KAAK,eAAe,KAAK,MAAM,KAAK;AACvE,WAAO,KAAK,QAAQ,UAAU,KAAK,MAAMq1B,IAAiB,KAAK,MAAMA;AAAA,EACzE;AAAA,EACA,qBAAqBt/C,GAAO;AACxB,UAAM0+C,IAAc,KAAK,gBAAgB,CAAA;AACzC,QAAI1+C,KAAS,KAAKA,IAAQ0+C,EAAY,QAAQ;AAC1C,YAAMa,IAAab,EAAY1+C,CAAK;AACpC,aAAO8+C,GAAwB,KAAK,WAAU,GAAI9+C,GAAOu/C,CAAU;AAAA,IACvE;AAAA,EACJ;AAAA,EACA,iBAAiBv/C,GAAOw/C,GAAoBrC,IAAkB,GAAG;AAC7D,UAAMv+C,IAAQ,KAAK,cAAcoB,CAAK,IAAIrD,IAAUwgD;AACpD,WAAO;AAAA,MACH,GAAG,KAAK,IAAIv+C,CAAK,IAAI4gD,IAAqB,KAAK;AAAA,MAC/C,GAAG,KAAK,IAAI5gD,CAAK,IAAI4gD,IAAqB,KAAK;AAAA,MAC/C,OAAA5gD;AAAA,IACZ;AAAA,EACI;AAAA,EACA,yBAAyBoB,GAAO5G,GAAO;AACnC,WAAO,KAAK,iBAAiB4G,GAAO,KAAK,8BAA8B5G,CAAK,CAAC;AAAA,EACjF;AAAA,EACA,gBAAgB4G,GAAO;AACnB,WAAO,KAAK,yBAAyBA,KAAS,GAAG,KAAK,cAAc;AAAA,EACxE;AAAA,EACA,sBAAsBA,GAAO;AACzB,UAAM,EAAE,MAAAkC,GAAO,KAAA+H,GAAM,OAAA9H,GAAQ,QAAA+H,EAAM,IAAM,KAAK,iBAAiBlK,CAAK;AACpE,WAAO;AAAA,MACH,MAAAkC;AAAA,MACA,KAAA+H;AAAA,MACA,OAAA9H;AAAA,MACA,QAAA+H;AAAA,IACZ;AAAA,EACI;AAAA,EACH,iBAAiB;AACV,UAAM,EAAE,iBAAAyuB,GAAkB,MAAM,EAAE,UAAAyK,EAAQ,EAAG,IAAM,KAAK;AACxD,QAAIzK,GAAiB;AACjB,YAAMtyB,IAAM,KAAK;AACjB,MAAAA,EAAI,KAAI,GACRA,EAAI,UAAS,GACbs4C,GAAe,MAAM,KAAK,8BAA8B,KAAK,SAAS,GAAGvb,GAAU,KAAK,aAAa,MAAM,GAC3G/8B,EAAI,UAAS,GACbA,EAAI,YAAYsyB,GAChBtyB,EAAI,KAAI,GACRA,EAAI,QAAO;AAAA,IACf;AAAA,EACJ;AAAA,EACH,WAAW;AACJ,UAAMA,IAAM,KAAK,KACXwD,IAAO,KAAK,SACZ,EAAE,YAAA41C,GAAa,MAAAvpB,GAAO,QAAAvO,EAAM,IAAM9d,GAClCmtC,IAAa,KAAK,aAAa;AACrC,QAAI7kD,GAAGw+B,GAAQ1H;AAef,QAdIpf,EAAK,YAAY,WACjB40C,GAAgB,MAAMzH,CAAU,GAEhC9gB,EAAK,WACL,KAAK,MAAM,QAAQ,CAAC3D,GAAMvyB,MAAQ;AAC9B,UAAIA,MAAU,KAAKA,MAAU,KAAK,KAAK,MAAM,GAAG;AAC5C,QAAA2wB,IAAS,KAAK,8BAA8B4B,EAAK,KAAK;AACtD,cAAMnsB,IAAU,KAAK,WAAWpG,CAAK,GAC/Bo3B,IAAclB,EAAK,WAAW9vB,CAAO,GACrCixB,IAAoB1P,EAAO,WAAWvhB,CAAO;AACnD,QAAAw4C,GAAe,MAAMxnB,GAAazG,GAAQqmB,GAAY3f,CAAiB;AAAA,MAC3E;AAAA,IACJ,CAAC,GAEDooB,EAAW,SAAS;AAEpB,WADAp5C,EAAI,KAAI,GACJlU,IAAI6kD,IAAa,GAAG7kD,KAAK,GAAGA,KAAI;AAChC,cAAMilC,IAAcqoB,EAAW,WAAW,KAAK,qBAAqBttD,CAAC,CAAC,GAChE,EAAE,OAAAsG,GAAQ,WAAA6+B,EAAS,IAAMF;AAC/B,QAAI,CAACE,KAAa,CAAC7+B,MAGnB4N,EAAI,YAAYixB,GAChBjxB,EAAI,cAAc5N,GAClB4N,EAAI,YAAY+wB,EAAY,UAAU,GACtC/wB,EAAI,iBAAiB+wB,EAAY,kBACjCzG,IAAS,KAAK,8BAA8B9mB,EAAK,UAAU,KAAK,MAAM,KAAK,GAAG,GAC9Eof,IAAW,KAAK,iBAAiB92B,GAAGw+B,CAAM,GAC1CtqB,EAAI,UAAS,GACbA,EAAI,OAAO,KAAK,SAAS,KAAK,OAAO,GACrCA,EAAI,OAAO4iB,EAAS,GAAGA,EAAS,CAAC,GACjC5iB,EAAI,OAAM;AAAA,MACd;AACA,MAAAA,EAAI,QAAO;AAAA,IACf;AAAA,EACJ;AAAA,EACH,aAAa;AAAA,EAAC;AAAA,EACd,aAAa;AACN,UAAMA,IAAM,KAAK,KACXwD,IAAO,KAAK,SACZimB,IAAWjmB,EAAK;AACtB,QAAI,CAACimB,EAAS;AACV;AAEJ,UAAM5K,IAAa,KAAK,cAAc,CAAC;AACvC,QAAIyL,GAAQ3oB;AACZ,IAAA3B,EAAI,KAAI,GACRA,EAAI,UAAU,KAAK,SAAS,KAAK,OAAO,GACxCA,EAAI,OAAO6e,CAAU,GACrB7e,EAAI,YAAY,UAChBA,EAAI,eAAe,UACnB,KAAK,MAAM,QAAQ,CAACksB,GAAMvyB,MAAQ;AAC9B,UAAIA,MAAU,KAAK,KAAK,OAAO,KAAK,CAAC6J,EAAK;AACtC;AAEJ,YAAMutB,IAActH,EAAS,WAAW,KAAK,WAAW9vB,CAAK,CAAC,GACxDy1B,IAAWhqB,EAAO2rB,EAAY,IAAI;AAExC,UADAzG,IAAS,KAAK,8BAA8B,KAAK,MAAM3wB,CAAK,EAAE,KAAK,GAC/Do3B,EAAY,mBAAmB;AAC/B,QAAA/wB,EAAI,OAAOovB,EAAS,QACpBztB,IAAQ3B,EAAI,YAAYksB,EAAK,KAAK,EAAE,OACpClsB,EAAI,YAAY+wB,EAAY;AAC5B,cAAMlK,IAAU1hB,EAAU4rB,EAAY,eAAe;AACrD,QAAA/wB,EAAI,SAAS,CAAC2B,IAAQ,IAAIklB,EAAQ,MAAM,CAACyD,IAAS8E,EAAS,OAAO,IAAIvI,EAAQ,KAAKllB,IAAQklB,EAAQ,OAAOuI,EAAS,OAAOvI,EAAQ,MAAM;AAAA,MAC5I;AACA,MAAA5iB,GAAWjE,GAAKksB,EAAK,OAAO,GAAG,CAAC5B,GAAQ8E,GAAU;AAAA,QAC9C,OAAO2B,EAAY;AAAA,QACnB,aAAaA,EAAY;AAAA,QACzB,aAAaA,EAAY;AAAA,MACzC,CAAa;AAAA,IACL,CAAC,GACD/wB,EAAI,QAAO;AAAA,EACf;AAAA,EACH,YAAY;AAAA,EAAC;AACd;AAEA,MAAMq5C,KAAY;AAAA,EACd,aAAa;AAAA,IACT,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,EACf;AAAA,EACI,QAAQ;AAAA,IACJ,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,EACf;AAAA,EACI,QAAQ;AAAA,IACJ,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,EACf;AAAA,EACI,MAAM;AAAA,IACF,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,EACf;AAAA,EACI,KAAK;AAAA,IACD,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,EACf;AAAA,EACI,MAAM;AAAA,IACF,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,EACf;AAAA,EACI,OAAO;AAAA,IACH,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,EACf;AAAA,EACI,SAAS;AAAA,IACL,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,EACf;AAAA,EACI,MAAM;AAAA,IACF,QAAQ;AAAA,IACR,MAAM;AAAA,EACd;AACA,GACOC,IAAyB,uBAAO,KAAKD,EAAS;AACpD,SAASE,GAAOrtD,GAAGM,GAAG;AACnB,SAAON,IAAIM;AACf;AACC,SAASgtD,GAAMnnC,GAAOtgB,GAAO;AAC1B,MAAIe,EAAcf,CAAK;AACnB,WAAO;AAEX,QAAM0nD,IAAUpnC,EAAM,UAChB,EAAE,QAAAqnC,GAAS,OAAA1rD,GAAQ,YAAA2rD,EAAU,IAAMtnC,EAAM;AAC/C,MAAItf,IAAQhB;AAOZ,SANI,OAAO2nD,KAAW,eAClB3mD,IAAQ2mD,EAAO3mD,CAAK,IAEnBG,EAAeH,CAAK,MACrBA,IAAQ,OAAO2mD,KAAW,WAAWD,EAAQ,MAAM1mD,GAAO2mD,CAAM,IAAID,EAAQ,MAAM1mD,CAAK,IAEvFA,MAAU,OACH,QAEP/E,MACA+E,IAAQ/E,MAAU,WAAWsJ,GAASqiD,CAAU,KAAKA,MAAe,MAAQF,EAAQ,QAAQ1mD,GAAO,WAAW4mD,CAAU,IAAIF,EAAQ,QAAQ1mD,GAAO/E,CAAK,IAErJ,CAAC+E;AACZ;AACC,SAAS6mD,GAA0BC,GAASlqD,GAAKF,GAAKqqD,GAAU;AAC7D,QAAM3lD,IAAOmlD,EAAM;AACnB,WAAQxtD,IAAIwtD,EAAM,QAAQO,CAAO,GAAG/tD,IAAIqI,IAAO,GAAG,EAAErI,GAAE;AAClD,UAAMiuD,IAAWV,GAAUC,EAAMxtD,CAAC,CAAC,GAC7B0nB,IAASumC,EAAS,QAAQA,EAAS,QAAQ,OAAO;AACxD,QAAIA,EAAS,UAAU,KAAK,MAAMtqD,IAAME,MAAQ6jB,IAASumC,EAAS,KAAK,KAAKD;AACxE,aAAOR,EAAMxtD,CAAC;AAAA,EAEtB;AACA,SAAOwtD,EAAMnlD,IAAO,CAAC;AACzB;AACC,SAAS6lD,GAA2B3nC,GAAO6a,GAAU2sB,GAASlqD,GAAKF,GAAK;AACrE,WAAQ3D,IAAIwtD,EAAM,SAAS,GAAGxtD,KAAKwtD,EAAM,QAAQO,CAAO,GAAG/tD,KAAI;AAC3D,UAAMwoD,IAAOgF,EAAMxtD,CAAC;AACpB,QAAIutD,GAAU/E,CAAI,EAAE,UAAUjiC,EAAM,SAAS,KAAK5iB,GAAKE,GAAK2kD,CAAI,KAAKpnB,IAAW;AAC5E,aAAOonB;AAAA,EAEf;AACA,SAAOgF,EAAMO,IAAUP,EAAM,QAAQO,CAAO,IAAI,CAAC;AACrD;AACC,SAASI,GAAmB3F,GAAM;AAC/B,WAAQxoD,IAAIwtD,EAAM,QAAQhF,CAAI,IAAI,GAAGngD,IAAOmlD,EAAM,QAAQxtD,IAAIqI,GAAM,EAAErI;AAClE,QAAIutD,GAAUC,EAAMxtD,CAAC,CAAC,EAAE;AACpB,aAAOwtD,EAAMxtD,CAAC;AAG1B;AACC,SAASouD,GAAQv7C,GAAOw7C,GAAMC,GAAY;AACvC,MAAI,CAACA;AACD,IAAAz7C,EAAMw7C,CAAI,IAAI;AAAA,WACPC,EAAW,QAAQ;AAC1B,UAAM,EAAE,IAAAvgD,GAAK,IAAAD,EAAE,IAAMJ,GAAQ4gD,GAAYD,CAAI,GACvCE,IAAYD,EAAWvgD,CAAE,KAAKsgD,IAAOC,EAAWvgD,CAAE,IAAIugD,EAAWxgD,CAAE;AACzE,IAAA+E,EAAM07C,CAAS,IAAI;AAAA,EACvB;AACJ;AACC,SAASC,GAAcjoC,GAAO1T,GAAOpO,GAAKgqD,GAAW;AAClD,QAAMd,IAAUpnC,EAAM,UAChB2X,IAAQ,CAACyvB,EAAQ,QAAQ96C,EAAM,CAAC,EAAE,OAAO47C,CAAS,GAClDvgD,IAAO2E,EAAMA,EAAM,SAAS,CAAC,EAAE;AACrC,MAAI67C,GAAO7gD;AACX,OAAI6gD,IAAQxwB,GAAOwwB,KAASxgD,GAAMwgD,IAAQ,CAACf,EAAQ,IAAIe,GAAO,GAAGD,CAAS;AACtE,IAAA5gD,IAAQpJ,EAAIiqD,CAAK,GACb7gD,KAAS,MACTgF,EAAMhF,CAAK,EAAE,QAAQ;AAG7B,SAAOgF;AACX;AACC,SAAS87C,GAAoBpoC,GAAOjY,GAAQmgD,GAAW;AACpD,QAAM57C,IAAQ,CAAA,GACPpO,IAAM,CAAA,GACP4D,IAAOiG,EAAO;AACpB,MAAItO,GAAGiH;AACP,OAAIjH,IAAI,GAAGA,IAAIqI,GAAM,EAAErI;AACnB,IAAAiH,IAAQqH,EAAOtO,CAAC,GAChByE,EAAIwC,CAAK,IAAIjH,GACb6S,EAAM,KAAK;AAAA,MACP,OAAA5L;AAAA,MACA,OAAO;AAAA,IACnB,CAAS;AAEL,SAAOoB,MAAS,KAAK,CAAComD,IAAY57C,IAAQ27C,GAAcjoC,GAAO1T,GAAOpO,GAAKgqD,CAAS;AACxF;AACA,MAAMG,WAAkBluB,GAAM;AAAA,EAC1B,OAAO,KAAK;AAAA,EACf,OAAO,WAAW;AAAA,IAClB,QAAQ;AAAA,IACD,UAAU,CAAA;AAAA,IACV,MAAM;AAAA,MACF,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,gBAAgB,CAAA;AAAA,IAC5B;AAAA,IACQ,OAAO;AAAA,MACd,QAAQ;AAAA,MACG,UAAU;AAAA,MACV,OAAO;AAAA,QACH,SAAS;AAAA,MACzB;AAAA,IACA;AAAA,EACA;AAAA,EACC,YAAY3nB,GAAM;AACX,UAAMA,CAAK,GACV,KAAK,SAAS;AAAA,MACX,MAAM,CAAA;AAAA,MACN,QAAQ,CAAA;AAAA,MACR,KAAK,CAAA;AAAA,IACjB,GACS,KAAK,QAAQ,OACb,KAAK,aAAa,QACnB,KAAK,WAAW,CAAA,GAChB,KAAK,cAAc,IACnB,KAAK,aAAa;AAAA,EACtB;AAAA,EACA,KAAKw0B,GAAW71B,IAAO,IAAI;AACvB,UAAM22C,IAAO9gB,EAAU,SAASA,EAAU,OAAO,CAAA,IAC1CogB,IAAU,KAAK,WAAW,IAAIp3B,GAAS,MAAMgX,EAAU,SAAS,IAAI;AAC3E,IAAAogB,EAAQ,KAAKj2C,CAAI,GACjBrO,GAAQglD,EAAK,gBAAgBV,EAAQ,QAAO,CAAE,GAC9C,KAAK,aAAa;AAAA,MACd,QAAQU,EAAK;AAAA,MACb,OAAOA,EAAK;AAAA,MACZ,YAAYA,EAAK;AAAA,IAC7B,GACQ,MAAM,KAAK9gB,CAAS,GACpB,KAAK,cAAc71B,EAAK;AAAA,EAC5B;AAAA,EACH,MAAMipB,GAAK9yB,GAAO;AACX,WAAI8yB,MAAQ,SACD,OAEJ+sB,GAAM,MAAM/sB,CAAG;AAAA,EAC1B;AAAA,EACA,eAAe;AACX,UAAM,aAAY,GAClB,KAAK,SAAS;AAAA,MACV,MAAM,CAAA;AAAA,MACN,QAAQ,CAAA;AAAA,MACR,KAAK,CAAA;AAAA,IACjB;AAAA,EACI;AAAA,EACA,sBAAsB;AAClB,UAAM73B,IAAU,KAAK,SACf6kD,IAAU,KAAK,UACfnF,IAAO1/C,EAAQ,KAAK,QAAQ;AAClC,QAAI,EAAE,KAAAjF,GAAM,KAAAF,GAAM,YAAAkN,GAAa,YAAAC,EAAU,IAAM,KAAK,cAAa;AACxE,aAAS+9C,EAAa1qC,GAAQ;AACnB,MAAI,CAACtT,KAAc,CAAC,MAAMsT,EAAO,GAAG,MAChCtgB,IAAM,KAAK,IAAIA,GAAKsgB,EAAO,GAAG,IAE9B,CAACrT,KAAc,CAAC,MAAMqT,EAAO,GAAG,MAChCxgB,IAAM,KAAK,IAAIA,GAAKwgB,EAAO,GAAG;AAAA,IAEtC;AACA,KAAI,CAACtT,KAAc,CAACC,OAChB+9C,EAAa,KAAK,iBAAiB,IAC/B/lD,EAAQ,WAAW,WAAWA,EAAQ,MAAM,WAAW,aACvD+lD,EAAa,KAAK,UAAU,EAAK,CAAC,IAG1ChrD,IAAMuD,EAAevD,CAAG,KAAK,CAAC,MAAMA,CAAG,IAAIA,IAAM,CAAC8pD,EAAQ,QAAQ,KAAK,IAAG,GAAInF,CAAI,GAClF7kD,IAAMyD,EAAezD,CAAG,KAAK,CAAC,MAAMA,CAAG,IAAIA,IAAM,CAACgqD,EAAQ,MAAM,KAAK,IAAG,GAAInF,CAAI,IAAI,GACpF,KAAK,MAAM,KAAK,IAAI3kD,GAAKF,IAAM,CAAC,GAChC,KAAK,MAAM,KAAK,IAAIE,IAAM,GAAGF,CAAG;AAAA,EACpC;AAAA,EACH,kBAAkB;AACX,UAAMyY,IAAM,KAAK,mBAAkB;AACnC,QAAIvY,IAAM,OAAO,mBACbF,IAAM,OAAO;AACjB,WAAIyY,EAAI,WACJvY,IAAMuY,EAAI,CAAC,GACXzY,IAAMyY,EAAIA,EAAI,SAAS,CAAC,IAErB;AAAA,MACH,KAAAvY;AAAA,MACA,KAAAF;AAAA,IACZ;AAAA,EACI;AAAA,EACH,aAAa;AACN,UAAMmF,IAAU,KAAK,SACfgmD,IAAWhmD,EAAQ,MACnB60B,IAAW70B,EAAQ,OACnBwlD,IAAa3wB,EAAS,WAAW,WAAW,KAAK,mBAAkB,IAAK,KAAK,UAAS;AAC5F,IAAI70B,EAAQ,WAAW,WAAWwlD,EAAW,WACzC,KAAK,MAAM,KAAK,YAAYA,EAAW,CAAC,GACxC,KAAK,MAAM,KAAK,YAAYA,EAAWA,EAAW,SAAS,CAAC;AAEhE,UAAMzqD,IAAM,KAAK,KACXF,IAAM,KAAK,KACXkP,IAAQxE,GAAeigD,GAAYzqD,GAAKF,CAAG;AACjD,gBAAK,QAAQmrD,EAAS,SAASnxB,EAAS,WAAWmwB,GAA0BgB,EAAS,SAAS,KAAK,KAAK,KAAK,KAAK,KAAK,kBAAkBjrD,CAAG,CAAC,IAAIqqD,GAA2B,MAAMr7C,EAAM,QAAQi8C,EAAS,SAAS,KAAK,KAAK,KAAK,GAAG,IACrO,KAAK,aAAa,CAACnxB,EAAS,MAAM,WAAW,KAAK,UAAU,SAAS,SAAYwwB,GAAmB,KAAK,KAAK,GAC9G,KAAK,YAAYG,CAAU,GACvBxlD,EAAQ,WACR+J,EAAM,QAAO,GAEV87C,GAAoB,MAAM97C,GAAO,KAAK,UAAU;AAAA,EAC3D;AAAA,EACA,gBAAgB;AACZ,IAAI,KAAK,QAAQ,uBACb,KAAK,YAAY,KAAK,MAAM,IAAI,CAACutB,MAAO,CAACA,EAAK,KAAK,CAAC;AAAA,EAE5D;AAAA,EACH,YAAYkuB,IAAa,IAAI;AACtB,QAAIthD,IAAQ,GACRC,IAAM,GACNixB,GAAOhwB;AACX,IAAI,KAAK,QAAQ,UAAUogD,EAAW,WAClCpwB,IAAQ,KAAK,mBAAmBowB,EAAW,CAAC,CAAC,GACzCA,EAAW,WAAW,IACtBthD,IAAQ,IAAIkxB,IAEZlxB,KAAS,KAAK,mBAAmBshD,EAAW,CAAC,CAAC,IAAIpwB,KAAS,GAE/DhwB,IAAO,KAAK,mBAAmBogD,EAAWA,EAAW,SAAS,CAAC,CAAC,GAC5DA,EAAW,WAAW,IACtBrhD,IAAMiB,IAENjB,KAAOiB,IAAO,KAAK,mBAAmBogD,EAAWA,EAAW,SAAS,CAAC,CAAC,KAAK;AAGpF,UAAMvpB,IAAQupB,EAAW,SAAS,IAAI,MAAM;AAC5C,IAAAthD,IAAQO,EAAYP,GAAO,GAAG+3B,CAAK,GACnC93B,IAAMM,EAAYN,GAAK,GAAG83B,CAAK,GAC/B,KAAK,WAAW;AAAA,MACZ,OAAA/3B;AAAA,MACA,KAAAC;AAAA,MACA,QAAQ,KAAKD,IAAQ,IAAIC;AAAA,IACrC;AAAA,EACI;AAAA,EACH,YAAY;AACL,UAAM0gD,IAAU,KAAK,UACf9pD,IAAM,KAAK,KACXF,IAAM,KAAK,KACXmF,IAAU,KAAK,SACfgmD,IAAWhmD,EAAQ,MACnBimD,IAAQD,EAAS,QAAQhB,GAA0BgB,EAAS,SAASjrD,GAAKF,GAAK,KAAK,kBAAkBE,CAAG,CAAC,GAC1G2lD,IAAWjiD,EAAeuB,EAAQ,MAAM,UAAU,CAAC,GACnDkmD,IAAUD,MAAU,SAASD,EAAS,aAAa,IACnDG,IAAazjD,GAASwjD,CAAO,KAAKA,MAAY,IAC9Cn8C,IAAQ,CAAA;AACd,QAAIqrB,IAAQr6B,GACRwqD,GAAM99C;AAKV,QAJI0+C,MACA/wB,IAAQ,CAACyvB,EAAQ,QAAQzvB,GAAO,WAAW8wB,CAAO,IAEtD9wB,IAAQ,CAACyvB,EAAQ,QAAQzvB,GAAO+wB,IAAa,QAAQF,CAAK,GACtDpB,EAAQ,KAAKhqD,GAAKE,GAAKkrD,CAAK,IAAI,MAASvF;AACzC,YAAM,IAAI,MAAM3lD,IAAM,UAAUF,IAAM,yCAAyC6lD,IAAW,MAAMuF,CAAK;AAEzG,UAAMT,IAAaxlD,EAAQ,MAAM,WAAW,UAAU,KAAK,kBAAiB;AAC5E,SAAIulD,IAAOnwB,GAAO3tB,IAAQ,GAAG89C,IAAO1qD,GAAK0qD,IAAO,CAACV,EAAQ,IAAIU,GAAM7E,GAAUuF,CAAK,GAAGx+C;AACjF,MAAA69C,GAAQv7C,GAAOw7C,GAAMC,CAAU;AAEnC,YAAID,MAAS1qD,KAAOmF,EAAQ,WAAW,WAAWyH,MAAU,MACxD69C,GAAQv7C,GAAOw7C,GAAMC,CAAU,GAE5B,OAAO,KAAKz7C,CAAK,EAAE,KAAK46C,EAAM,EAAE,IAAI,CAACxsD,MAAI,CAACA,CAAC;AAAA,EACtD;AAAA,EACH,iBAAiBgG,GAAO;AACjB,UAAM0mD,IAAU,KAAK,UACfmB,IAAW,KAAK,QAAQ;AAC9B,WAAIA,EAAS,gBACFnB,EAAQ,OAAO1mD,GAAO6nD,EAAS,aAAa,IAEhDnB,EAAQ,OAAO1mD,GAAO6nD,EAAS,eAAe,QAAQ;AAAA,EACjE;AAAA,EACH,OAAO7nD,GAAOioD,GAAQ;AAEf,UAAMC,IADU,KAAK,QACG,KAAK,gBACvB3G,IAAO,KAAK,OACZ4G,IAAMF,KAAUC,EAAQ3G,CAAI;AAClC,WAAO,KAAK,SAAS,OAAOvhD,GAAOmoD,CAAG;AAAA,EAC1C;AAAA,EACH,oBAAoBf,GAAMxgD,GAAOgF,GAAOq8C,GAAQ;AACzC,UAAMpmD,IAAU,KAAK,SACf0J,IAAY1J,EAAQ,MAAM;AAChC,QAAI0J;AACA,aAAO7K,EAAS6K,GAAW;AAAA,QACvB67C;AAAA,QACAxgD;AAAA,QACAgF;AAAA,MAChB,GAAe,IAAI;AAEX,UAAMs8C,IAAUrmD,EAAQ,KAAK,gBACvB0/C,IAAO,KAAK,OACZiG,IAAY,KAAK,YACjBY,IAAc7G,KAAQ2G,EAAQ3G,CAAI,GAClC8G,IAAcb,KAAaU,EAAQV,CAAS,GAC5CruB,IAAOvtB,EAAMhF,CAAK,GAClB6gD,IAAQD,KAAaa,KAAelvB,KAAQA,EAAK;AACvD,WAAO,KAAK,SAAS,OAAOiuB,GAAMa,MAAWR,IAAQY,IAAcD,EAAY;AAAA,EACnF;AAAA,EACH,mBAAmBx8C,GAAO;AACnB,QAAI7S,GAAGqI,GAAM+3B;AACb,SAAIpgC,IAAI,GAAGqI,IAAOwK,EAAM,QAAQ7S,IAAIqI,GAAM,EAAErI;AACxC,MAAAogC,IAAOvtB,EAAM7S,CAAC,GACdogC,EAAK,QAAQ,KAAK,oBAAoBA,EAAK,OAAOpgC,GAAG6S,CAAK;AAAA,EAElE;AAAA,EACH,mBAAmB5L,GAAO;AACnB,WAAOA,MAAU,OAAO,OAAOA,IAAQ,KAAK,QAAQ,KAAK,MAAM,KAAK;AAAA,EACxE;AAAA,EACH,iBAAiBA,GAAO;AACjB,UAAMsoD,IAAU,KAAK,UACf5uC,IAAM,KAAK,mBAAmB1Z,CAAK;AACzC,WAAO,KAAK,oBAAoBsoD,EAAQ,QAAQ5uC,KAAO4uC,EAAQ,MAAM;AAAA,EACzE;AAAA,EACH,iBAAiB35C,GAAO;AACjB,UAAM25C,IAAU,KAAK,UACf5uC,IAAM,KAAK,mBAAmB/K,CAAK,IAAI25C,EAAQ,SAASA,EAAQ;AACtE,WAAO,KAAK,MAAM5uC,KAAO,KAAK,MAAM,KAAK;AAAA,EAC7C;AAAA,EACH,cAAckT,GAAO;AACd,UAAM27B,IAAY,KAAK,QAAQ,OACzBC,IAAiB,KAAK,IAAI,YAAY57B,CAAK,EAAE,OAC7CpnB,IAAQX,GAAU,KAAK,aAAY,IAAK0jD,EAAU,cAAcA,EAAU,WAAW,GACrFE,IAAc,KAAK,IAAIjjD,CAAK,GAC5BkjD,IAAc,KAAK,IAAIljD,CAAK,GAC5BmjD,IAAe,KAAK,wBAAwB,CAAC,EAAE;AACrD,WAAO;AAAA,MACH,GAAGH,IAAiBC,IAAcE,IAAeD;AAAA,MACjD,GAAGF,IAAiBE,IAAcC,IAAeF;AAAA,IAC7D;AAAA,EACI;AAAA,EACH,kBAAkBG,GAAa;AACxB,UAAMf,IAAW,KAAK,QAAQ,MACxBgB,IAAiBhB,EAAS,gBAC1BI,IAASY,EAAehB,EAAS,IAAI,KAAKgB,EAAe,aACzDC,IAAe,KAAK,oBAAoBF,GAAa,GAAGlB,GAAoB,MAAM;AAAA,MACpFkB;AAAA,IACZ,GAAW,KAAK,UAAU,GAAGX,CAAM,GACrB54C,IAAO,KAAK,cAAcy5C,CAAY,GACtC/B,IAAW,KAAK,MAAM,KAAK,aAAY,IAAK,KAAK,QAAQ13C,EAAK,IAAI,KAAK,SAASA,EAAK,CAAC,IAAI;AAChG,WAAO03C,IAAW,IAAIA,IAAW;AAAA,EACrC;AAAA,EACH,oBAAoB;AACb,QAAIM,IAAa,KAAK,OAAO,QAAQ,CAAA,GACjCtuD,GAAGqI;AACP,QAAIimD,EAAW;AACX,aAAOA;AAEX,UAAMttB,IAAQ,KAAK,wBAAuB;AAC1C,QAAI,KAAK,eAAeA,EAAM;AAC1B,aAAO,KAAK,OAAO,OAAOA,EAAM,CAAC,EAAE,WAAW,mBAAmB,IAAI;AAEzE,SAAIhhC,IAAI,GAAGqI,IAAO24B,EAAM,QAAQhhC,IAAIqI,GAAM,EAAErI;AACxC,MAAAsuD,IAAaA,EAAW,OAAOttB,EAAMhhC,CAAC,EAAE,WAAW,mBAAmB,IAAI,CAAC;AAE/E,WAAO,KAAK,OAAO,OAAO,KAAK,UAAUsuD,CAAU;AAAA,EACvD;AAAA,EACH,qBAAqB;AACd,UAAMA,IAAa,KAAK,OAAO,UAAU,CAAA;AACzC,QAAItuD,GAAGqI;AACP,QAAIimD,EAAW;AACX,aAAOA;AAEX,UAAMrhC,IAAS,KAAK,UAAS;AAC7B,SAAIjtB,IAAI,GAAGqI,IAAO4kB,EAAO,QAAQjtB,IAAIqI,GAAM,EAAErI;AACzC,MAAAsuD,EAAW,KAAKZ,GAAM,MAAMzgC,EAAOjtB,CAAC,CAAC,CAAC;AAE1C,WAAO,KAAK,OAAO,SAAS,KAAK,cAAcsuD,IAAa,KAAK,UAAUA,CAAU;AAAA,EACzF;AAAA,EACH,UAAUhgD,GAAQ;AACX,WAAOW,GAAaX,EAAO,KAAKm/C,EAAM,CAAC;AAAA,EAC3C;AACJ;AAEA,SAASjoD,GAAYmI,GAAO/G,GAAKqB,GAAS;AACtC,MAAI8F,IAAK,GACLD,IAAKH,EAAM,SAAS,GACpBqiD,GAAYC,GAAYC,GAAYC;AACxC,EAAIloD,KACIrB,KAAO+G,EAAMI,CAAE,EAAE,OAAOnH,KAAO+G,EAAMG,CAAE,EAAE,QACxC,EAAE,IAAAC,GAAK,IAAAD,EAAE,IAAMG,GAAaN,GAAO,OAAO/G,CAAG,IAEjD,EAAE,KAAKopD,GAAa,MAAME,EAAU,IAAMviD,EAAMI,CAAE,GAClD,EAAE,KAAKkiD,GAAa,MAAME,EAAU,IAAMxiD,EAAMG,CAAE,MAE/ClH,KAAO+G,EAAMI,CAAE,EAAE,QAAQnH,KAAO+G,EAAMG,CAAE,EAAE,SACzC,EAAE,IAAAC,GAAK,IAAAD,EAAE,IAAMG,GAAaN,GAAO,QAAQ/G,CAAG,IAElD,EAAE,MAAMopD,GAAa,KAAKE,EAAU,IAAMviD,EAAMI,CAAE,GAClD,EAAE,MAAMkiD,GAAa,KAAKE,EAAU,IAAMxiD,EAAMG,CAAE;AAEvD,QAAMsiD,IAAOH,IAAaD;AAC1B,SAAOI,IAAOF,KAAcC,IAAaD,MAAetpD,IAAMopD,KAAcI,IAAOF;AACvF;AACA,MAAMG,WAAwBzB,GAAU;AAAA,EACpC,OAAO,KAAK;AAAA,EACf,OAAO,WAAWA,GAAU;AAAA,EAC5B,YAAY71C,GAAM;AACX,UAAMA,CAAK,GACV,KAAK,SAAS,CAAA,GACd,KAAK,UAAU,QACf,KAAK,cAAc;AAAA,EACxB;AAAA,EACH,cAAc;AACP,UAAMu1C,IAAa,KAAK,uBAAsB,GACxC3gD,IAAQ,KAAK,SAAS,KAAK,iBAAiB2gD,CAAU;AAC5D,SAAK,UAAU9oD,GAAYmI,GAAO,KAAK,GAAG,GAC1C,KAAK,cAAcnI,GAAYmI,GAAO,KAAK,GAAG,IAAI,KAAK,SACvD,MAAM,YAAY2gD,CAAU;AAAA,EAChC;AAAA,EACH,iBAAiBA,GAAY;AACtB,UAAM,EAAE,KAAAzqD,GAAM,KAAAF,EAAG,IAAM,MACjBuL,IAAQ,CAAA,GACRvB,IAAQ,CAAA;AACd,QAAI3N,GAAGqI,GAAMsX,GAAMmP,GAAMpR;AACzB,SAAI1d,IAAI,GAAGqI,IAAOimD,EAAW,QAAQtuD,IAAIqI,GAAM,EAAErI;AAC7C,MAAA8uB,IAAOw/B,EAAWtuD,CAAC,GACf8uB,KAAQjrB,KAAOirB,KAAQnrB,KACvBuL,EAAM,KAAK4f,CAAI;AAGvB,QAAI5f,EAAM,SAAS;AACf,aAAO;AAAA,QACH;AAAA,UACI,MAAMrL;AAAA,UACN,KAAK;AAAA,QACzB;AAAA,QACgB;AAAA,UACI,MAAMF;AAAA,UACN,KAAK;AAAA,QACzB;AAAA,MACA;AAEQ,SAAI3D,IAAI,GAAGqI,IAAO6G,EAAM,QAAQlP,IAAIqI,GAAM,EAAErI;AACxC,MAAA0d,IAAOxO,EAAMlP,IAAI,CAAC,GAClB2f,IAAOzQ,EAAMlP,IAAI,CAAC,GAClB8uB,IAAO5f,EAAMlP,CAAC,GACV,KAAK,OAAO0d,IAAOiC,KAAQ,CAAC,MAAMmP,KAClCnhB,EAAM,KAAK;AAAA,QACP,MAAMmhB;AAAA,QACN,KAAK9uB,KAAKqI,IAAO;AAAA,MACrC,CAAiB;AAGT,WAAOsF;AAAA,EACX;AAAA,EACH,YAAY;AACL,UAAM9J,IAAM,KAAK,KACXF,IAAM,KAAK;AACjB,QAAI2qD,IAAa,MAAM,kBAAiB;AACxC,YAAI,CAACA,EAAW,SAASzqD,CAAG,KAAK,CAACyqD,EAAW,WACzCA,EAAW,OAAO,GAAG,GAAGzqD,CAAG,IAE3B,CAACyqD,EAAW,SAAS3qD,CAAG,KAAK2qD,EAAW,WAAW,MACnDA,EAAW,KAAK3qD,CAAG,GAEhB2qD,EAAW,KAAK,CAACluD,GAAGM,MAAIN,IAAIM,CAAC;AAAA,EACxC;AAAA,EACH,yBAAyB;AAClB,QAAI4tD,IAAa,KAAK,OAAO,OAAO,CAAA;AACpC,QAAIA,EAAW;AACX,aAAOA;AAEX,UAAMx5C,IAAO,KAAK,kBAAiB,GAC7B+e,IAAQ,KAAK,mBAAkB;AACrC,WAAI/e,EAAK,UAAU+e,EAAM,SACrBy6B,IAAa,KAAK,UAAUx5C,EAAK,OAAO+e,CAAK,CAAC,IAE9Cy6B,IAAax5C,EAAK,SAASA,IAAO+e,GAEtCy6B,IAAa,KAAK,OAAO,MAAMA,GACxBA;AAAA,EACX;AAAA,EACH,mBAAmBrnD,GAAO;AACnB,YAAQzB,GAAY,KAAK,QAAQyB,CAAK,IAAI,KAAK,WAAW,KAAK;AAAA,EACnE;AAAA,EACH,iBAAiB2O,GAAO;AACjB,UAAM25C,IAAU,KAAK,UACf3rB,IAAU,KAAK,mBAAmBhuB,CAAK,IAAI25C,EAAQ,SAASA,EAAQ;AAC1E,WAAO/pD,GAAY,KAAK,QAAQo+B,IAAU,KAAK,cAAc,KAAK,SAAS,EAAI;AAAA,EACnF;AACJ;AAEA,IAAItY,KAAsB,uBAAO,OAAO;AAAA,EACxC,WAAW;AAAA,EACX,eAAey8B;AAAA,EACf,aAAa2B;AAAA,EACb,kBAAkBc;AAAA,EAClB,mBAAmBoC;AAAA,EACnB,WAAWgC;AAAA,EACX,iBAAiByB;AACjB,CAAC;AAED,MAAMC,KAAgB;AAAA,EAClBn6B;AAAA,EACAzI;AAAA,EACAgb;AAAA,EACApd;AACJ;;;;;;AC3zWAshB,GAAM,SAAS,GAAG0jB,EAAa;AAMxB,IAAMC,KAAN,cAA8BC,GAAa;AAAA,EAA3C,cAAA;AAAA,UAAA,GAAA,SAAA,GAEH,KAAA,WAAW,iDAGX,KAAA,QAAQ;AAAA,EAAA;AAAA,EAER,SAAS;AACL,WAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,yBAKU,KAAK,QAAQ,aAAa,KAAK,KAAK;AAAA;AAAA,iCAE5B,KAAK,QAAQ;AAAA;AAAA,EAE1C;AAAA,EAEA,MAAM,eAAe;AAMjB,UAAMC,KAJW,MAAMC,GAAW,MAAMC,GAAc,IAAmB;AAAA,MACrE,KAAK;AAAA,IAAA,CACR,CAAC,GAEyD;AAE3D,QAAI,CAACF,EAAc;AAEnB,UAAMzjC,IAASyjC,EAAa,IAAI,CAACG,MAAYA,EAAG,IAAI,GAC9CviD,IAASoiD,EAAa,IAAI,CAAC7vD,GAAQb,MAAcA,IAAI,CAAC,GAEtDkU,IAAM,KAAK,WAAW,cAAc,UAAU;AACpD,QAAI04B,GAAM14B,GAAK;AAAA,MACX,MAAM;AAAA,MACN,MAAM;AAAA,QACF,QAAA+Y;AAAA,QACA,UAAU,CAAC;AAAA,UACP,OAAO;AAAA,UACP,MAAM3e;AAAA,UACN,iBAAiB;AAAA,QAAA,CACpB;AAAA,MAAA;AAAA,MAEL,SAAS;AAAA,QACL,YAAY;AAAA,QACZ,QAAQ;AAAA,UACJ,GAAG,EAAE,aAAa,GAAA;AAAA,QAAK;AAAA,MAC3B;AAAA,IACJ,CACH;AAAA,EACL;AAAA,EAEQ,WAAW;AACf,SAAK;AAAA,EACT;AAYJ;AAlEaiiD,GAwDF,SAASO;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAtDhBC,GAAA;AAAA,EADCllD,GAAA;AAAS,GADD0kD,GAET,WAAA,YAAA,CAAA;AAGAQ,GAAA;AAAA,EADCllD,GAAS,EAAE,MAAM,OAAA,CAAQ;AAAA,GAJjB0kD,GAKT,WAAA,SAAA,CAAA;AALSA,KAANQ,GAAA;AAAA,EADNC,GAAc,kBAAkB;AAAA,GACpBT,EAAA;","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}