// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, Client, TDataShape } from './client';
import type { GetUmbracoManagementApiV1ContentInsightsGetAllDocumentsWithAuthorsData, GetUmbracoManagementApiV1ContentInsightsGetAllDocumentsWithAuthorsResponses, GetUmbracoManagementApiV1ContentInsightsGetAllDocumentsWithAuthorsErrors, GetUmbracoManagementApiV1ContentInsightsGetDocumentTypesData, GetUmbracoManagementApiV1ContentInsightsGetDocumentTypesResponses, GetUmbracoManagementApiV1ContentInsightsGetDocumentTypesErrors } from './types.gen';
import { client } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const getUmbracoManagementApiV1ContentInsightsGetAllDocumentsWithAuthors = <ThrowOnError extends boolean = false>(options?: Options<GetUmbracoManagementApiV1ContentInsightsGetAllDocumentsWithAuthorsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetUmbracoManagementApiV1ContentInsightsGetAllDocumentsWithAuthorsResponses, GetUmbracoManagementApiV1ContentInsightsGetAllDocumentsWithAuthorsErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/umbraco/management/api/v1/content-insights/get-all-documents-with-authors',
        ...options
    });
};

export const getUmbracoManagementApiV1ContentInsightsGetDocumentTypes = <ThrowOnError extends boolean = false>(options?: Options<GetUmbracoManagementApiV1ContentInsightsGetDocumentTypesData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetUmbracoManagementApiV1ContentInsightsGetDocumentTypesResponses, GetUmbracoManagementApiV1ContentInsightsGetDocumentTypesErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/umbraco/management/api/v1/content-insights/get-document-types',
        ...options
    });
};
